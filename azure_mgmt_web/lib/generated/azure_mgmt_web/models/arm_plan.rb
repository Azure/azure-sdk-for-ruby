# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Web
  module Models
    #
    # The plan object in an ARM, represents a marketplace plan
    #
    class ArmPlan

      include MsRestAzure

      # @return [String] The name
      attr_accessor :name

      # @return [String] The publisher
      attr_accessor :publisher

      # @return [String] The product
      attr_accessor :product

      # @return [String] The promotion code
      attr_accessor :promotion_code

      # @return [String] Version of product
      attr_accessor :version


      #
      # Mapper for ArmPlan class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'ArmPlan',
          type: {
            name: 'Composite',
            class_name: 'ArmPlan',
            model_properties: {
              name: {
                required: false,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              publisher: {
                required: false,
                serialized_name: 'publisher',
                type: {
                  name: 'String'
                }
              },
              product: {
                required: false,
                serialized_name: 'product',
                type: {
                  name: 'String'
                }
              },
              promotion_code: {
                required: false,
                serialized_name: 'promotionCode',
                type: {
                  name: 'String'
                }
              },
              version: {
                required: false,
                serialized_name: 'version',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
