# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::DataLakeAnalytics::Job
  module Models
    #
    # The Data Lake Analytics job error details.
    #
    class JobErrorDetails

      include MsRestAzure

      # @return [String] the error message description
      attr_accessor :description

      # @return [String] the details of the error message.
      attr_accessor :details

      # @return [Integer] the end offset in the job where the error was found.
      attr_accessor :end_offset

      # @return [String] the specific identifier for the type of error
      # encountered in the job.
      attr_accessor :error_id

      # @return [String] the path to any supplemental error files, if any.
      attr_accessor :file_path

      # @return [String] the link to MSDN or Azure help for this type of
      # error, if any.
      attr_accessor :help_link

      # @return [String] the internal diagnostic stack trace if the user
      # requesting the job error details has sufficient permissions it will
      # be retrieved, otherwise it will be empty.
      attr_accessor :internal_diagnostics

      # @return [Integer] the specific line number in the job where the error
      # occured.
      attr_accessor :line_number

      # @return [String] the user friendly error message for the failure.
      attr_accessor :message

      # @return [String] the recommended resolution for the failure, if any.
      attr_accessor :resolution

      # @return [JobInnerError] the inner error of this specific job error
      # message, if any.
      attr_accessor :inner_error

      # @return [SeverityTypes] the severity level of the failure. Possible
      # values include: 'Warning', 'Error', 'Info'
      attr_accessor :severity

      # @return [String] the ultimate source of the failure (usually either
      # SYSTEM or USER).
      attr_accessor :source

      # @return [Integer] the start offset in the job where the error was found
      attr_accessor :start_offset


      #
      # Mapper for JobErrorDetails class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'JobErrorDetails',
          type: {
            name: 'Composite',
            class_name: 'JobErrorDetails',
            model_properties: {
              description: {
                required: false,
                read_only: true,
                serialized_name: 'description',
                type: {
                  name: 'String'
                }
              },
              details: {
                required: false,
                read_only: true,
                serialized_name: 'details',
                type: {
                  name: 'String'
                }
              },
              end_offset: {
                required: false,
                read_only: true,
                serialized_name: 'endOffset',
                type: {
                  name: 'Number'
                }
              },
              error_id: {
                required: false,
                read_only: true,
                serialized_name: 'errorId',
                type: {
                  name: 'String'
                }
              },
              file_path: {
                required: false,
                read_only: true,
                serialized_name: 'filePath',
                type: {
                  name: 'String'
                }
              },
              help_link: {
                required: false,
                read_only: true,
                serialized_name: 'helpLink',
                type: {
                  name: 'String'
                }
              },
              internal_diagnostics: {
                required: false,
                read_only: true,
                serialized_name: 'internalDiagnostics',
                type: {
                  name: 'String'
                }
              },
              line_number: {
                required: false,
                read_only: true,
                serialized_name: 'lineNumber',
                type: {
                  name: 'Number'
                }
              },
              message: {
                required: false,
                read_only: true,
                serialized_name: 'message',
                type: {
                  name: 'String'
                }
              },
              resolution: {
                required: false,
                read_only: true,
                serialized_name: 'resolution',
                type: {
                  name: 'String'
                }
              },
              inner_error: {
                required: false,
                read_only: true,
                serialized_name: 'innerError',
                type: {
                  name: 'Composite',
                  class_name: 'JobInnerError'
                }
              },
              severity: {
                required: false,
                read_only: true,
                serialized_name: 'severity',
                type: {
                  name: 'Enum',
                  module: 'SeverityTypes'
                }
              },
              source: {
                required: false,
                read_only: true,
                serialized_name: 'source',
                type: {
                  name: 'String'
                }
              },
              start_offset: {
                required: false,
                read_only: true,
                serialized_name: 'startOffset',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
