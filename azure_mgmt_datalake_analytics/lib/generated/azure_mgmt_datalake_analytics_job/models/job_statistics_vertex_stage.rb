# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::DataLakeAnalytics::Job
  module Models
    #
    # The Data Lake Analytics job statistics vertex stage information.
    #
    class JobStatisticsVertexStage

      include MsRestAzure

      # @return [Integer] the amount of data read, in bytes.
      attr_accessor :data_read

      # @return [Integer] the amount of data read across multiple pods, in
      # bytes.
      attr_accessor :data_read_cross_pod

      # @return [Integer] the amount of data read in one pod, in bytes.
      attr_accessor :data_read_intra_pod

      # @return [Integer] the amount of data remaining to be read, in bytes.
      attr_accessor :data_to_read

      # @return [Integer] the amount of data written, in bytes.
      attr_accessor :data_written

      # @return [Integer] the number of duplicates that were discarded.
      attr_accessor :duplicate_discard_count

      # @return [Integer] the number of failures that occured in this stage.
      attr_accessor :failed_count

      # @return [Integer] the maximum amount of data read in a single vertex,
      # in bytes.
      attr_accessor :max_vertex_data_read

      # @return [Integer] the minimum amount of data read in a single vertex,
      # in bytes.
      attr_accessor :min_vertex_data_read

      # @return [Integer] the number of read failures in this stage.
      attr_accessor :read_failure_count

      # @return [Integer] the number of vertices that were revoked during this
      # stage.
      attr_accessor :revocation_count

      # @return [Integer] the number of currently running vertices in this
      # stage.
      attr_accessor :running_count

      # @return [Integer] the number of currently scheduled vertices in this
      # stage
      attr_accessor :scheduled_count

      # @return [String] the name of this stage in job execution.
      attr_accessor :stage_name

      # @return [Integer] the number of vertices that succeeded in this stage.
      attr_accessor :succeeded_count

      # @return [Integer] the amount of temporary data written, in bytes.
      attr_accessor :temp_data_written

      # @return [Integer] the total vertex count for this stage.
      attr_accessor :total_count

      # @return [Duration] the amount of time that failed vertices took up in
      # this stage.
      attr_accessor :total_failed_time

      # @return [Integer] the current progress of this stage, as a percentage.
      attr_accessor :total_progress

      # @return [Duration] the amount of time all successful vertices took in
      # this stage.
      attr_accessor :total_succeeded_time


      #
      # Mapper for JobStatisticsVertexStage class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'JobStatisticsVertexStage',
          type: {
            name: 'Composite',
            class_name: 'JobStatisticsVertexStage',
            model_properties: {
              data_read: {
                required: false,
                read_only: true,
                serialized_name: 'dataRead',
                type: {
                  name: 'Number'
                }
              },
              data_read_cross_pod: {
                required: false,
                read_only: true,
                serialized_name: 'dataReadCrossPod',
                type: {
                  name: 'Number'
                }
              },
              data_read_intra_pod: {
                required: false,
                read_only: true,
                serialized_name: 'dataReadIntraPod',
                type: {
                  name: 'Number'
                }
              },
              data_to_read: {
                required: false,
                read_only: true,
                serialized_name: 'dataToRead',
                type: {
                  name: 'Number'
                }
              },
              data_written: {
                required: false,
                read_only: true,
                serialized_name: 'dataWritten',
                type: {
                  name: 'Number'
                }
              },
              duplicate_discard_count: {
                required: false,
                read_only: true,
                serialized_name: 'duplicateDiscardCount',
                type: {
                  name: 'Number'
                }
              },
              failed_count: {
                required: false,
                read_only: true,
                serialized_name: 'failedCount',
                type: {
                  name: 'Number'
                }
              },
              max_vertex_data_read: {
                required: false,
                read_only: true,
                serialized_name: 'maxVertexDataRead',
                type: {
                  name: 'Number'
                }
              },
              min_vertex_data_read: {
                required: false,
                read_only: true,
                serialized_name: 'minVertexDataRead',
                type: {
                  name: 'Number'
                }
              },
              read_failure_count: {
                required: false,
                read_only: true,
                serialized_name: 'readFailureCount',
                type: {
                  name: 'Number'
                }
              },
              revocation_count: {
                required: false,
                read_only: true,
                serialized_name: 'revocationCount',
                type: {
                  name: 'Number'
                }
              },
              running_count: {
                required: false,
                read_only: true,
                serialized_name: 'runningCount',
                type: {
                  name: 'Number'
                }
              },
              scheduled_count: {
                required: false,
                read_only: true,
                serialized_name: 'scheduledCount',
                type: {
                  name: 'Number'
                }
              },
              stage_name: {
                required: false,
                read_only: true,
                serialized_name: 'stageName',
                type: {
                  name: 'String'
                }
              },
              succeeded_count: {
                required: false,
                read_only: true,
                serialized_name: 'succeededCount',
                type: {
                  name: 'Number'
                }
              },
              temp_data_written: {
                required: false,
                read_only: true,
                serialized_name: 'tempDataWritten',
                type: {
                  name: 'Number'
                }
              },
              total_count: {
                required: false,
                read_only: true,
                serialized_name: 'totalCount',
                type: {
                  name: 'Number'
                }
              },
              total_failed_time: {
                required: false,
                read_only: true,
                serialized_name: 'totalFailedTime',
                type: {
                  name: 'TimeSpan'
                }
              },
              total_progress: {
                required: false,
                read_only: true,
                serialized_name: 'totalProgress',
                type: {
                  name: 'Number'
                }
              },
              total_succeeded_time: {
                required: false,
                read_only: true,
                serialized_name: 'totalSucceededTime',
                type: {
                  name: 'TimeSpan'
                }
              }
            }
          }
        }
      end
    end
  end
end
