# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::DataLakeAnalytics::Job
  module Models
    #
    # The common Data Lake Analytics job information properties.
    #
    class JobInformation

      include MsRestAzure

      # @return the job's unique identifier (a GUID).
      attr_accessor :job_id

      # @return [String] the friendly name of the job.
      attr_accessor :name

      # @return [JobType] the job type of the current job (Hive or USql).
      # Possible values include: 'USql', 'Hive'
      attr_accessor :type

      # @return [String] the user or account that submitted the job.
      attr_accessor :submitter

      # @return [Array<JobErrorDetails>] the error message details for the
      # job, if the job failed.
      attr_accessor :error_message

      # @return [Integer] the degree of parallelism used for this job. This
      # must be greater than 0.
      attr_accessor :degree_of_parallelism

      # @return [Integer] the priority value for the current job. Lower
      # numbers have a higher priority. By default, a job has a priority of
      # 1000. This must be greater than 0.
      attr_accessor :priority

      # @return [DateTime] the time the job was submitted to the service.
      attr_accessor :submit_time

      # @return [DateTime] the start time of the job.
      attr_accessor :start_time

      # @return [DateTime] the completion time of the job.
      attr_accessor :end_time

      # @return [JobState] the job state. When the job is in the Ended state,
      # refer to Result and ErrorMessage for details. Possible values
      # include: 'Accepted', 'Compiling', 'Ended', 'New', 'Queued',
      # 'Running', 'Scheduling', 'Starting', 'Paused', 'WaitingForCapacity'
      attr_accessor :state

      # @return [JobResult] the result of job execution or the current result
      # of the running job. Possible values include: 'None', 'Succeeded',
      # 'Cancelled', 'Failed'
      attr_accessor :result

      # @return [String] the log folder path to use in the following format:
      # adl://<accountName>.azuredatalakestore.net/system/jobservice/jobs/Usql/2016/03/13/17/18/5fe51957-93bc-4de0-8ddc-c5a4753b068b/logs/.
      attr_accessor :log_folder

      # @return [Array<String>] the list of log file name patterns to find in
      # the logFolder. '*' is the only matching character allowed. Example
      # format: jobExecution*.log or *mylog*.txt
      attr_accessor :log_file_patterns

      # @return [Array<JobStateAuditRecord>] the job state audit records,
      # indicating when various operations have been performed on this job.
      attr_accessor :state_audit_records

      # @return [JobProperties] the job specific properties.
      attr_accessor :properties


      #
      # Mapper for JobInformation class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'JobInformation',
          type: {
            name: 'Composite',
            class_name: 'JobInformation',
            model_properties: {
              job_id: {
                required: false,
                serialized_name: 'jobId',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: true,
                serialized_name: 'type',
                type: {
                  name: 'Enum',
                  module: 'JobType'
                }
              },
              submitter: {
                required: false,
                serialized_name: 'submitter',
                type: {
                  name: 'String'
                }
              },
              error_message: {
                required: false,
                read_only: true,
                serialized_name: 'errorMessage',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'JobErrorDetailsElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'JobErrorDetails'
                      }
                  }
                }
              },
              degree_of_parallelism: {
                required: false,
                serialized_name: 'degreeOfParallelism',
                type: {
                  name: 'Number'
                }
              },
              priority: {
                required: false,
                serialized_name: 'priority',
                type: {
                  name: 'Number'
                }
              },
              submit_time: {
                required: false,
                read_only: true,
                serialized_name: 'submitTime',
                type: {
                  name: 'DateTime'
                }
              },
              start_time: {
                required: false,
                read_only: true,
                serialized_name: 'startTime',
                type: {
                  name: 'DateTime'
                }
              },
              end_time: {
                required: false,
                read_only: true,
                serialized_name: 'endTime',
                type: {
                  name: 'DateTime'
                }
              },
              state: {
                required: false,
                read_only: true,
                serialized_name: 'state',
                type: {
                  name: 'Enum',
                  module: 'JobState'
                }
              },
              result: {
                required: false,
                read_only: true,
                serialized_name: 'result',
                type: {
                  name: 'Enum',
                  module: 'JobResult'
                }
              },
              log_folder: {
                required: false,
                read_only: true,
                serialized_name: 'logFolder',
                type: {
                  name: 'String'
                }
              },
              log_file_patterns: {
                required: false,
                serialized_name: 'logFilePatterns',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              state_audit_records: {
                required: false,
                read_only: true,
                serialized_name: 'stateAuditRecords',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'JobStateAuditRecordElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'JobStateAuditRecord'
                      }
                  }
                }
              },
              properties: {
                required: true,
                serialized_name: 'properties',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: 'type',
                  uber_parent: 'JobProperties',
                  class_name: 'JobProperties'
                }
              }
            }
          }
        }
      end
    end
  end
end
