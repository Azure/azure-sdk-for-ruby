# encoding: utf-8
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.

<%- if @individual_gem_profile -%>
require 'profiles/<%= @profile_name.downcase %>/<%= @module_definition_file_name.gsub('.rb','') %>'
<%- @file_names.each do |file_name| -%>
require 'profiles/<%= @profile_name.downcase %>/modules/<%= file_name %>'
<%- end -%>
require 'profiles/common/configurable'
require 'profiles/common/default'
<%- else -%>
require '<%= @profile_name.downcase %>/<%= @module_definition_file_name.gsub('.rb','') %>'
<%- @file_names.each do |file_name| -%>
require '<%= @profile_name.downcase %>/modules/<%= file_name %>'
<%- end -%>
require 'common/configurable'
require 'common/default'
<%- end -%>

<%- if @individual_gem_profile -%>
module Azure::<%= @class_name %>::Profiles::<%= @profile_name %>::Mgmt
<%- else -%>
module Azure::Profiles::<%= @profile_name %>::Mgmt
<%- end -%>
  #
  # Client class for the <%= @profile_name %> profile SDK.
  #
  <%- if @individual_gem_profile -%>
  class Client < <%= "#{@class_names[0]}" %>Class
  <%- else -%>
  class Client
  <%- end -%>
    include Azure::Common::Configurable

    <%- if !@individual_gem_profile -%>
    attr_reader <% @class_names.each_with_index do |class_name, index| %> :<%= class_name.gsub(/([a-z\d])([A-Z])/,'\1_\2').downcase %><% if index != @class_names.length - 1 %>,<% end %><% end %>
    <%- end -%>

    def initialize(options = {})
      <%- if @individual_gem_profile -%>
      super(options)
      <%- else -%>
      if options.is_a?(Hash) && options.length == 0
        @options = setup_options
      else
        @options = options
      end

      reset!(options)

      <%- @class_names.each do |class_name| -%>
      @<%= class_name.gsub(/([a-z\d])([A-Z])/,'\1_\2').downcase %> = Azure::Profiles::<%= @profile_name %>::<%= "#{class_name}::Mgmt::#{class_name}" %>Class.new(self)
      <%- end -%>
      <%- end -%>
    end

    def credentials
      if @credentials.nil?
        self.active_directory_settings ||= Azure::Common::Default.active_directory_settings

        @credentials = MsRest::TokenCredentials.new(
                    MsRestAzure::ApplicationTokenProvider.new(
                        self.tenant_id, self.client_id, self.client_secret, self.active_directory_settings))
      end
      @credentials
    end
  end
end
