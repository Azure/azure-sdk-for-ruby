# encoding: utf-8
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.

<%- @module_requires.each do |module_require| -%>
require '<%= module_require %>'
<%- end -%>

module Azure::Profiles::<%= @profile_name %>
  module <%= @module_name %>
  <%- if(@data_mode) -%>
    <%- @data_operation_types.each do |operation_type| -%>
    <%- if(operation_type[:operation_name_ruby] != 'DO_NOT_ADD') -%>
    <%= operation_type[:operation_name] %> = <%= operation_type[:operation_body] %>
    <%- end -%>
    <%- end -%>

    module Models
      <%- @data_model_types.each do |data_model_type| -%>
      <%= data_model_type[:model_name] %> = <%= data_model_type[:model_body] %>
      <%- end -%>
    end

    class <%= @data_class_name %>
      attr_reader <%- @data_operation_types.each do |operation_type| -%><%- if(operation_type[:operation_name_ruby] != 'DO_NOT_ADD') -%>:<%= operation_type[:operation_name_ruby] %>, <%- end -%><%- end -%>:configurable, :base_url, :options, :model_classes

      def initialize(configurable, base_url=nil, options=nil)
        @configurable, @base_url, @options = configurable, base_url, options

        <%- @data_clients_ops_mapper.each_with_index do |(key, value), index| -%>
        <%- if(@base_url_to_be_included) -%>
        client_<%= index %> = <%= key %>.new(configurable.credentials, base_url, options)
        <%- else -%>
        client_<%= index %> = <%= key %>.new(configurable.credentials, options)
        <%- end -%>
        if(client_<%= index %>.respond_to?(:subscription_id))
          client_<%= index %>.subscription_id = configurable.subscription_id
        end
        add_telemetry(client_<%= index %>)
        <%- value.each do |operation_type| -%>
        <%- if(operation_type[:operation_name_ruby] != 'DO_NOT_ADD') -%>
        @<%= operation_type[:operation_name_ruby] %> = client_<%= index %>.<%= operation_type[:operation_name_ruby] %>
        <%- end -%>
        <%- end -%>

        <%- end -%>
        @model_classes = ModelClasses.new
      end

      def add_telemetry(client)
        profile_information = 'Profiles/azure_sdk/<%= @profile_name %>/<%= @module_name %>'
        client.add_user_agent_information(profile_information)
      end

      class ModelClasses
        <%- @data_model_types.each do |model_type| -%>
        def <%= model_type[:method_name] %>
          <%= model_type[:model_body] %>
        end
      <%- end -%>
      end
    end
  <%- end -%>
  <%- if(@management_mode) -%>
    module Mgmt
      <%- @management_operation_types.each do |operation_type| -%>
      <%- if(operation_type[:operation_name_ruby] != 'DO_NOT_ADD') -%>
      <%= operation_type[:operation_name] %> = <%= operation_type[:operation_body] %>
      <%- end -%>
      <%- end -%>

      module Models
        <%- @management_model_types.each do |management_model_type| -%>
        <%= management_model_type[:model_name] %> = <%= management_model_type[:model_body] %>
        <%- end -%>
      end

      class <%= @management_class_name %>
        attr_reader <%- @management_operation_types.each do |operation_type| -%><%- if(operation_type[:operation_name_ruby] != 'DO_NOT_ADD') -%>:<%= operation_type[:operation_name_ruby] %>, <%- end -%><%- end -%>:configurable, :base_url, :options, :model_classes

        def initialize(configurable, base_url=nil, options=nil)
          @configurable, @base_url, @options = configurable, base_url, options

          <%- @management_clients_ops_mapper.each_with_index do |(key, value), index| -%>
          client_<%= index %> = <%= key %>.new(configurable.credentials, base_url, options)
          if(client_<%= index %>.respond_to?(:subscription_id))
            client_<%= index %>.subscription_id = configurable.subscription_id
          end
          add_telemetry(client_<%= index %>)
          <%- value.each do |operation_type| -%>
          <%- if(operation_type[:operation_name_ruby] != 'DO_NOT_ADD') -%>
          @<%= operation_type[:operation_name_ruby] %> = client_<%= index %>.<%= operation_type[:operation_name_ruby] %>
          <%- end -%>
          <%- end -%>

          <%- end -%>
          @model_classes = ModelClasses.new
        end

        def add_telemetry(client)
          profile_information = 'Profiles/azure_sdk/<%= @profile_name %>/<%= @module_name %>/Mgmt'
          client.add_user_agent_information(profile_information)
        end

        class ModelClasses
          <%- @management_model_types.each do |model_type| -%>
          def <%= model_type[:method_name] %>
            <%= model_type[:model_body] %>
          end
          <%- end -%>
        end
      end
    end
  <%- end -%>
  end
end
