# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Microsoft.VMwareCloudSimple
  module Models
    #
    # Virtual machine template model
    #
    class VirtualMachineTemplate

      include MsRestAzure

      # @return [String] virtual machine template id (privateCloudId:vsphereId)
      attr_accessor :id

      # @return [String] Azure region
      attr_accessor :location

      # @return [String] {virtualMachineTemplateName}
      attr_accessor :name

      # @return [Integer] The amout of memory
      attr_accessor :amount_of_ram

      # @return [Array<VirtualDiskController>] The list of Virtual Disk
      # Controllers
      attr_accessor :controllers

      # @return [String] The description of Virtual Machine Template
      attr_accessor :description

      # @return [Array<VirtualDisk>] The list of Virtual Disks
      attr_accessor :disks

      # @return [Boolean] Expose Guest OS or not
      attr_accessor :expose_to_guest_vm

      # @return [String] The Guest OS
      attr_accessor :guest_os

      # @return [String] The Guest OS types
      attr_accessor :guest_ostype

      # @return [Array<VirtualNic>] The list of Virtual NICs
      attr_accessor :nics

      # @return [Integer] The number of CPU cores
      attr_accessor :number_of_cores

      # @return [String] path to folder
      attr_accessor :path

      # @return [String] The Private Cloud Id
      attr_accessor :private_cloud_id

      # @return [Array<String>] The list of VSphere networks
      attr_accessor :v_sphere_networks

      # @return [Array<String>] The tags from VSphere
      attr_accessor :v_sphere_tags

      # @return [String] The VMware tools version
      attr_accessor :vmwaretools

      # @return [String] {resourceProviderNamespace}/{resourceType}
      attr_accessor :type


      #
      # Mapper for VirtualMachineTemplate class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'VirtualMachineTemplate',
          type: {
            name: 'Composite',
            class_name: 'VirtualMachineTemplate',
            model_properties: {
              id: {
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              location: {
                required: false,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              amount_of_ram: {
                required: false,
                serialized_name: 'properties.amountOfRam',
                type: {
                  name: 'Number'
                }
              },
              controllers: {
                required: false,
                serialized_name: 'properties.controllers',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'VirtualDiskControllerElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'VirtualDiskController'
                      }
                  }
                }
              },
              description: {
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              disks: {
                required: false,
                serialized_name: 'properties.disks',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'VirtualDiskElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'VirtualDisk'
                      }
                  }
                }
              },
              expose_to_guest_vm: {
                required: false,
                serialized_name: 'properties.exposeToGuestVM',
                type: {
                  name: 'Boolean'
                }
              },
              guest_os: {
                required: true,
                serialized_name: 'properties.guestOS',
                type: {
                  name: 'String'
                }
              },
              guest_ostype: {
                required: true,
                serialized_name: 'properties.guestOSType',
                type: {
                  name: 'String'
                }
              },
              nics: {
                required: false,
                serialized_name: 'properties.nics',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'VirtualNicElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'VirtualNic'
                      }
                  }
                }
              },
              number_of_cores: {
                required: false,
                serialized_name: 'properties.numberOfCores',
                type: {
                  name: 'Number'
                }
              },
              path: {
                required: false,
                serialized_name: 'properties.path',
                type: {
                  name: 'String'
                }
              },
              private_cloud_id: {
                required: true,
                serialized_name: 'properties.privateCloudId',
                type: {
                  name: 'String'
                }
              },
              v_sphere_networks: {
                required: false,
                serialized_name: 'properties.vSphereNetworks',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              v_sphere_tags: {
                required: false,
                serialized_name: 'properties.vSphereTags',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              vmwaretools: {
                required: false,
                read_only: true,
                serialized_name: 'properties.vmwaretools',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
