# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::NotificationHubs
  module Models
    #
    # Namespace properties.
    #
    class NamespaceProperties

      include MsRestAzure

      # @return [String] The name of the namespace.
      attr_accessor :name

      # @return [String] Gets or sets provisioning state of the Namespace.
      attr_accessor :provisioning_state

      # @return [String] Specifies the targeted region in which the namespace
      # should be created. It can be any of the following values: Australia
      # EastAustralia SoutheastCentral USEast USEast US 2West USNorth Central
      # USSouth Central USEast AsiaSoutheast AsiaBrazil SouthJapan EastJapan
      # WestNorth EuropeWest Europe
      attr_accessor :region

      # @return [String] Status of the namespace. It can be any of these
      # values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
      attr_accessor :status

      # @return [DateTime] The time the namespace was created.
      attr_accessor :created_at

      # @return [String] Endpoint you can use to perform NotificationHub
      # operations.
      attr_accessor :service_bus_endpoint

      # @return [String] The Id of the Azure subscription associated with the
      # namespace.
      attr_accessor :subscription_id

      # @return [String] ScaleUnit where the namespace gets created
      attr_accessor :scale_unit

      # @return [Boolean] Whether or not the namespace is currently enabled.
      attr_accessor :enabled

      # @return [Boolean] Whether or not the namespace is set as Critical.
      attr_accessor :critical

      # @return [NamespaceType] Gets or sets the namespace type. Possible
      # values include: 'Messaging', 'NotificationHub'
      attr_accessor :namespace_type


      #
      # Mapper for NamespaceProperties class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'NamespaceProperties',
          type: {
            name: 'Composite',
            class_name: 'NamespaceProperties',
            model_properties: {
              name: {
                required: false,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              provisioning_state: {
                required: false,
                serialized_name: 'provisioningState',
                type: {
                  name: 'String'
                }
              },
              region: {
                required: false,
                serialized_name: 'region',
                type: {
                  name: 'String'
                }
              },
              status: {
                required: false,
                serialized_name: 'status',
                type: {
                  name: 'String'
                }
              },
              created_at: {
                required: false,
                serialized_name: 'createdAt',
                type: {
                  name: 'DateTime'
                }
              },
              service_bus_endpoint: {
                required: false,
                serialized_name: 'serviceBusEndpoint',
                type: {
                  name: 'String'
                }
              },
              subscription_id: {
                required: false,
                serialized_name: 'subscriptionId',
                type: {
                  name: 'String'
                }
              },
              scale_unit: {
                required: false,
                serialized_name: 'scaleUnit',
                type: {
                  name: 'String'
                }
              },
              enabled: {
                required: false,
                serialized_name: 'enabled',
                type: {
                  name: 'Boolean'
                }
              },
              critical: {
                required: false,
                serialized_name: 'critical',
                type: {
                  name: 'Boolean'
                }
              },
              namespace_type: {
                required: false,
                serialized_name: 'namespaceType',
                type: {
                  name: 'Enum',
                  module: 'NamespaceType'
                }
              }
            }
          }
        }
      end
    end
  end
end
