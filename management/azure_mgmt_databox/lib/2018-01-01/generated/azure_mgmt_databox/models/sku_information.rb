# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Compute::Mgmt::V2018_01_01
  module Models
    #
    # Information of the sku.
    #
    class SkuInformation

      include MsRestAzure

      # @return [Sku] The Sku.
      attr_accessor :sku

      # @return [Boolean] The sku is enabled or not.
      attr_accessor :enabled

      # @return [Array<DestinationToServiceLocationMap>] The map of destination
      # location to service location.
      attr_accessor :destination_to_service_location_map

      # @return [SkuCapacity] Capacity of the Sku.
      attr_accessor :capacity

      # @return [Array<SkuCost>] Cost of the Sku.
      attr_accessor :costs

      # @return [Array<String>] Api versions that support this Sku.
      attr_accessor :api_versions

      # @return [SkuDisabledReason] Reason why the Sku is disabled. Possible
      # values include: 'None', 'Country', 'Region', 'Feature', 'OfferType',
      # 'NoSubscriptionInfo'
      attr_accessor :disabled_reason

      # @return [String] Message for why the Sku is disabled.
      attr_accessor :disabled_reason_message

      # @return [String] Required feature to access the sku.
      attr_accessor :required_feature


      #
      # Mapper for SkuInformation class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'SkuInformation',
          type: {
            name: 'Composite',
            class_name: 'SkuInformation',
            model_properties: {
              sku: {
                required: false,
                read_only: true,
                serialized_name: 'sku',
                type: {
                  name: 'Composite',
                  class_name: 'Sku'
                }
              },
              enabled: {
                required: false,
                read_only: true,
                serialized_name: 'enabled',
                type: {
                  name: 'Boolean'
                }
              },
              destination_to_service_location_map: {
                required: false,
                read_only: true,
                serialized_name: 'properties.destinationToServiceLocationMap',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'DestinationToServiceLocationMapElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'DestinationToServiceLocationMap'
                      }
                  }
                }
              },
              capacity: {
                required: false,
                read_only: true,
                serialized_name: 'properties.capacity',
                type: {
                  name: 'Composite',
                  class_name: 'SkuCapacity'
                }
              },
              costs: {
                required: false,
                read_only: true,
                serialized_name: 'properties.costs',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'SkuCostElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'SkuCost'
                      }
                  }
                }
              },
              api_versions: {
                required: false,
                read_only: true,
                serialized_name: 'properties.apiVersions',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              disabled_reason: {
                required: false,
                read_only: true,
                serialized_name: 'properties.disabledReason',
                type: {
                  name: 'Enum',
                  module: 'SkuDisabledReason'
                }
              },
              disabled_reason_message: {
                required: false,
                read_only: true,
                serialized_name: 'properties.disabledReasonMessage',
                type: {
                  name: 'String'
                }
              },
              required_feature: {
                required: false,
                read_only: true,
                serialized_name: 'properties.requiredFeature',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
