# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataFactory::Mgmt::V2018_06_01
  module Models
    #
    # Request body structure for data flow debug command.
    #
    class DataFlowDebugCommandRequest

      include MsRestAzure

      # @return [String] The ID of data flow debug session.
      attr_accessor :session_id

      # @return [DataFlowDebugCommandType] The command type. Possible values
      # include: 'executePreviewQuery', 'executeStatisticsQuery',
      # 'executeExpressionQuery'
      attr_accessor :command

      # @return [DataFlowDebugCommandPayload] The command payload object.
      attr_accessor :command_payload


      #
      # Mapper for DataFlowDebugCommandRequest class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DataFlowDebugCommandRequest',
          type: {
            name: 'Composite',
            class_name: 'DataFlowDebugCommandRequest',
            model_properties: {
              session_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'sessionId',
                type: {
                  name: 'String'
                }
              },
              command: {
                client_side_validation: true,
                required: false,
                serialized_name: 'command',
                type: {
                  name: 'String'
                }
              },
              command_payload: {
                client_side_validation: true,
                required: false,
                serialized_name: 'commandPayload',
                type: {
                  name: 'Composite',
                  class_name: 'DataFlowDebugCommandPayload'
                }
              }
            }
          }
        }
      end
    end
  end
end
