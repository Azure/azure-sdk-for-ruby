# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataFactory::Mgmt::V2018_06_01
  module Models
    #
    # HDFS read settings.
    #
    class HdfsReadSettings < StoreReadSettings

      include MsRestAzure


      def initialize
        @type = "HdfsReadSettings"
      end

      attr_accessor :type

      # @return If true, files under the folder path will be read recursively.
      # Default is true. Type: boolean (or Expression with resultType boolean).
      attr_accessor :recursive

      # @return HDFS wildcardFolderPath. Type: string (or Expression with
      # resultType string).
      attr_accessor :wildcard_folder_path

      # @return HDFS wildcardFileName. Type: string (or Expression with
      # resultType string).
      attr_accessor :wildcard_file_name

      # @return Point to a text file that lists each file (relative path to the
      # path configured in the dataset) that you want to copy. Type: string (or
      # Expression with resultType string).
      attr_accessor :file_list_path

      # @return [Boolean] Indicates whether to enable partition discovery.
      attr_accessor :enable_partition_discovery

      # @return Specify the root path where partition discovery starts from.
      # Type: string (or Expression with resultType string).
      attr_accessor :partition_root_path

      # @return The start of file's modified datetime. Type: string (or
      # Expression with resultType string).
      attr_accessor :modified_datetime_start

      # @return The end of file's modified datetime. Type: string (or
      # Expression with resultType string).
      attr_accessor :modified_datetime_end

      # @return [DistcpSettings] Specifies Distcp-related settings.
      attr_accessor :distcp_settings

      # @return Indicates whether the source files need to be deleted after
      # copy completion. Default is false. Type: boolean (or Expression with
      # resultType boolean).
      attr_accessor :delete_files_after_completion


      #
      # Mapper for HdfsReadSettings class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'HdfsReadSettings',
          type: {
            name: 'Composite',
            class_name: 'HdfsReadSettings',
            model_properties: {
              additional_properties: {
                client_side_validation: true,
                required: false,
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              max_concurrent_connections: {
                client_side_validation: true,
                required: false,
                serialized_name: 'maxConcurrentConnections',
                type: {
                  name: 'Object'
                }
              },
              type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              recursive: {
                client_side_validation: true,
                required: false,
                serialized_name: 'recursive',
                type: {
                  name: 'Object'
                }
              },
              wildcard_folder_path: {
                client_side_validation: true,
                required: false,
                serialized_name: 'wildcardFolderPath',
                type: {
                  name: 'Object'
                }
              },
              wildcard_file_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'wildcardFileName',
                type: {
                  name: 'Object'
                }
              },
              file_list_path: {
                client_side_validation: true,
                required: false,
                serialized_name: 'fileListPath',
                type: {
                  name: 'Object'
                }
              },
              enable_partition_discovery: {
                client_side_validation: true,
                required: false,
                serialized_name: 'enablePartitionDiscovery',
                type: {
                  name: 'Boolean'
                }
              },
              partition_root_path: {
                client_side_validation: true,
                required: false,
                serialized_name: 'partitionRootPath',
                type: {
                  name: 'Object'
                }
              },
              modified_datetime_start: {
                client_side_validation: true,
                required: false,
                serialized_name: 'modifiedDatetimeStart',
                type: {
                  name: 'Object'
                }
              },
              modified_datetime_end: {
                client_side_validation: true,
                required: false,
                serialized_name: 'modifiedDatetimeEnd',
                type: {
                  name: 'Object'
                }
              },
              distcp_settings: {
                client_side_validation: true,
                required: false,
                serialized_name: 'distcpSettings',
                type: {
                  name: 'Composite',
                  class_name: 'DistcpSettings'
                }
              },
              delete_files_after_completion: {
                client_side_validation: true,
                required: false,
                serialized_name: 'deleteFilesAfterCompletion',
                type: {
                  name: 'Object'
                }
              }
            }
          }
        }
      end
    end
  end
end
