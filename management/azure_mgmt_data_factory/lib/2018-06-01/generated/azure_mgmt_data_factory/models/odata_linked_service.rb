# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataFactory::Mgmt::V2018_06_01
  module Models
    #
    # Open Data Protocol (OData) linked service.
    #
    class ODataLinkedService < LinkedService

      include MsRestAzure


      def initialize
        @type = "OData"
      end

      attr_accessor :type

      # @return The URL of the OData service endpoint. Type: string (or
      # Expression with resultType string).
      attr_accessor :url

      # @return [ODataAuthenticationType] Type of authentication used to
      # connect to the OData service. Possible values include: 'Basic',
      # 'Anonymous', 'Windows', 'AadServicePrincipal', 'ManagedServiceIdentity'
      attr_accessor :authentication_type

      # @return User name of the OData service. Type: string (or Expression
      # with resultType string).
      attr_accessor :user_name

      # @return [SecretBase] Password of the OData service.
      attr_accessor :password

      # @return Specify the tenant information (domain name or tenant ID) under
      # which your application resides. Type: string (or Expression with
      # resultType string).
      attr_accessor :tenant

      # @return Specify the application id of your application registered in
      # Azure Active Directory. Type: string (or Expression with resultType
      # string).
      attr_accessor :service_principal_id

      # @return Indicates the azure cloud type of the service principle auth.
      # Allowed values are AzurePublic, AzureChina, AzureUsGovernment,
      # AzureGermany. Default value is the data factory regionsâ€™ cloud type.
      # Type: string (or Expression with resultType string).
      attr_accessor :azure_cloud_type

      # @return Specify the resource you are requesting authorization to use
      # Directory. Type: string (or Expression with resultType string).
      attr_accessor :aad_resource_id

      # @return [ODataAadServicePrincipalCredentialType] Specify the credential
      # type (key or cert) is used for service principal. Possible values
      # include: 'ServicePrincipalKey', 'ServicePrincipalCert'
      attr_accessor :aad_service_principal_credential_type

      # @return [SecretBase] Specify the secret of your application registered
      # in Azure Active Directory. Type: string (or Expression with resultType
      # string).
      attr_accessor :service_principal_key

      # @return [SecretBase] Specify the base64 encoded certificate of your
      # application registered in Azure Active Directory. Type: string (or
      # Expression with resultType string).
      attr_accessor :service_principal_embedded_cert

      # @return [SecretBase] Specify the password of your certificate if your
      # certificate has a password and you are using AadServicePrincipal
      # authentication. Type: string (or Expression with resultType string).
      attr_accessor :service_principal_embedded_cert_password

      # @return The encrypted credential used for authentication. Credentials
      # are encrypted using the integration runtime credential manager. Type:
      # string (or Expression with resultType string).
      attr_accessor :encrypted_credential


      #
      # Mapper for ODataLinkedService class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'OData',
          type: {
            name: 'Composite',
            class_name: 'ODataLinkedService',
            model_properties: {
              additional_properties: {
                client_side_validation: true,
                required: false,
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              connect_via: {
                client_side_validation: true,
                required: false,
                serialized_name: 'connectVia',
                type: {
                  name: 'Composite',
                  class_name: 'IntegrationRuntimeReference'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'description',
                type: {
                  name: 'String'
                }
              },
              parameters: {
                client_side_validation: true,
                required: false,
                serialized_name: 'parameters',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ParameterSpecificationElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ParameterSpecification'
                      }
                  }
                }
              },
              annotations: {
                client_side_validation: true,
                required: false,
                serialized_name: 'annotations',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              url: {
                client_side_validation: true,
                required: true,
                serialized_name: 'typeProperties.url',
                type: {
                  name: 'Object'
                }
              },
              authentication_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.authenticationType',
                type: {
                  name: 'String'
                }
              },
              user_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.userName',
                type: {
                  name: 'Object'
                }
              },
              password: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.password',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: 'type',
                  uber_parent: 'SecretBase',
                  class_name: 'SecretBase'
                }
              },
              tenant: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.tenant',
                type: {
                  name: 'Object'
                }
              },
              service_principal_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.servicePrincipalId',
                type: {
                  name: 'Object'
                }
              },
              azure_cloud_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.azureCloudType',
                type: {
                  name: 'Object'
                }
              },
              aad_resource_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.aadResourceId',
                type: {
                  name: 'Object'
                }
              },
              aad_service_principal_credential_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.aadServicePrincipalCredentialType',
                type: {
                  name: 'String'
                }
              },
              service_principal_key: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.servicePrincipalKey',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: 'type',
                  uber_parent: 'SecretBase',
                  class_name: 'SecretBase'
                }
              },
              service_principal_embedded_cert: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.servicePrincipalEmbeddedCert',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: 'type',
                  uber_parent: 'SecretBase',
                  class_name: 'SecretBase'
                }
              },
              service_principal_embedded_cert_password: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.servicePrincipalEmbeddedCertPassword',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: 'type',
                  uber_parent: 'SecretBase',
                  class_name: 'SecretBase'
                }
              },
              encrypted_credential: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.encryptedCredential',
                type: {
                  name: 'Object'
                }
              }
            }
          }
        }
      end
    end
  end
end
