# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataFactory::Mgmt::V2018_06_01
  module Models
    #
    # Azure File Storage linked service.
    #
    class AzureFileStorageLinkedService < LinkedService

      include MsRestAzure


      def initialize
        @type = "AzureFileStorage"
      end

      attr_accessor :type

      # @return Host name of the server. Type: string (or Expression with
      # resultType string).
      attr_accessor :host

      # @return User ID to logon the server. Type: string (or Expression with
      # resultType string).
      attr_accessor :user_id

      # @return [SecretBase] Password to logon the server.
      attr_accessor :password

      # @return The connection string. It is mutually exclusive with sasUri
      # property. Type: string, SecureString or AzureKeyVaultSecretReference.
      attr_accessor :connection_string

      # @return [AzureKeyVaultSecretReference] The Azure key vault secret
      # reference of accountKey in connection string.
      attr_accessor :account_key

      # @return SAS URI of the Azure File resource. It is mutually exclusive
      # with connectionString property. Type: string, SecureString or
      # AzureKeyVaultSecretReference.
      attr_accessor :sas_uri

      # @return [AzureKeyVaultSecretReference] The Azure key vault secret
      # reference of sasToken in sas uri.
      attr_accessor :sas_token

      # @return The azure file share name. It is required when auth with
      # accountKey/sasToken. Type: string (or Expression with resultType
      # string).
      attr_accessor :file_share

      # @return The encrypted credential used for authentication. Credentials
      # are encrypted using the integration runtime credential manager. Type:
      # string (or Expression with resultType string).
      attr_accessor :encrypted_credential


      #
      # Mapper for AzureFileStorageLinkedService class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'AzureFileStorage',
          type: {
            name: 'Composite',
            class_name: 'AzureFileStorageLinkedService',
            model_properties: {
              additional_properties: {
                client_side_validation: true,
                required: false,
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              connect_via: {
                client_side_validation: true,
                required: false,
                serialized_name: 'connectVia',
                type: {
                  name: 'Composite',
                  class_name: 'IntegrationRuntimeReference'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'description',
                type: {
                  name: 'String'
                }
              },
              parameters: {
                client_side_validation: true,
                required: false,
                serialized_name: 'parameters',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ParameterSpecificationElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ParameterSpecification'
                      }
                  }
                }
              },
              annotations: {
                client_side_validation: true,
                required: false,
                serialized_name: 'annotations',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              host: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.host',
                type: {
                  name: 'Object'
                }
              },
              user_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.userId',
                type: {
                  name: 'Object'
                }
              },
              password: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.password',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: 'type',
                  uber_parent: 'SecretBase',
                  class_name: 'SecretBase'
                }
              },
              connection_string: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.connectionString',
                type: {
                  name: 'Object'
                }
              },
              account_key: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.accountKey',
                type: {
                  name: 'Composite',
                  class_name: 'AzureKeyVaultSecretReference'
                }
              },
              sas_uri: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.sasUri',
                type: {
                  name: 'Object'
                }
              },
              sas_token: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.sasToken',
                type: {
                  name: 'Composite',
                  class_name: 'AzureKeyVaultSecretReference'
                }
              },
              file_share: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.fileShare',
                type: {
                  name: 'Object'
                }
              },
              encrypted_credential: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.encryptedCredential',
                type: {
                  name: 'Object'
                }
              }
            }
          }
        }
      end
    end
  end
end
