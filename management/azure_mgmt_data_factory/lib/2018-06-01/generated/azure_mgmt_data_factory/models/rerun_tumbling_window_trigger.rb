# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataFactory::Mgmt::V2018_06_01
  module Models
    #
    # Trigger that schedules pipeline reruns for all fixed time interval
    # windows from a requested start time to requested end time.
    #
    class RerunTumblingWindowTrigger < Trigger

      include MsRestAzure


      def initialize
        @type = "RerunTumblingWindowTrigger"
      end

      attr_accessor :type

      # @return The parent trigger reference.
      attr_accessor :parent_trigger

      # @return [DateTime] The start time for the time period for which
      # restatement is initiated. Only UTC time is currently supported.
      attr_accessor :requested_start_time

      # @return [DateTime] The end time for the time period for which
      # restatement is initiated. Only UTC time is currently supported.
      attr_accessor :requested_end_time

      # @return [Integer] The max number of parallel time windows (ready for
      # execution) for which a rerun is triggered.
      attr_accessor :rerun_concurrency


      #
      # Mapper for RerunTumblingWindowTrigger class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'RerunTumblingWindowTrigger',
          type: {
            name: 'Composite',
            class_name: 'RerunTumblingWindowTrigger',
            model_properties: {
              additional_properties: {
                client_side_validation: true,
                required: false,
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'description',
                type: {
                  name: 'String'
                }
              },
              runtime_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'runtimeState',
                type: {
                  name: 'String'
                }
              },
              annotations: {
                client_side_validation: true,
                required: false,
                serialized_name: 'annotations',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              parent_trigger: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.parentTrigger',
                type: {
                  name: 'Object'
                }
              },
              requested_start_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.requestedStartTime',
                type: {
                  name: 'DateTime'
                }
              },
              requested_end_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.requestedEndTime',
                type: {
                  name: 'DateTime'
                }
              },
              rerun_concurrency: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.rerunConcurrency',
                constraints: {
                  InclusiveMaximum: 50,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
