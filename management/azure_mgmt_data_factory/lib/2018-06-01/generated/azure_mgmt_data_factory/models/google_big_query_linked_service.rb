# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataFactory::Mgmt::V2018_06_01
  module Models
    #
    # Google BigQuery service linked service.
    #
    class GoogleBigQueryLinkedService < LinkedService

      include MsRestAzure


      def initialize
        @type = "GoogleBigQuery"
      end

      attr_accessor :type

      # @return The default BigQuery project to query against.
      attr_accessor :project

      # @return A comma-separated list of public BigQuery projects to access.
      attr_accessor :additional_projects

      # @return Whether to request access to Google Drive. Allowing Google
      # Drive access enables support for federated tables that combine BigQuery
      # data with data from Google Drive. The default value is false.
      attr_accessor :request_google_drive_scope

      # @return [GoogleBigQueryAuthenticationType] The OAuth 2.0 authentication
      # mechanism used for authentication. ServiceAuthentication can only be
      # used on self-hosted IR. Possible values include:
      # 'ServiceAuthentication', 'UserAuthentication'
      attr_accessor :authentication_type

      # @return [SecretBase] The refresh token obtained from Google for
      # authorizing access to BigQuery for UserAuthentication.
      attr_accessor :refresh_token

      # @return The client id of the google application used to acquire the
      # refresh token. Type: string (or Expression with resultType string).
      attr_accessor :client_id

      # @return [SecretBase] The client secret of the google application used
      # to acquire the refresh token.
      attr_accessor :client_secret

      # @return The service account email ID that is used for
      # ServiceAuthentication and can only be used on self-hosted IR.
      attr_accessor :email

      # @return The full path to the .p12 key file that is used to authenticate
      # the service account email address and can only be used on self-hosted
      # IR.
      attr_accessor :key_file_path

      # @return The full path of the .pem file containing trusted CA
      # certificates for verifying the server when connecting over SSL. This
      # property can only be set when using SSL on self-hosted IR. The default
      # value is the cacerts.pem file installed with the IR.
      attr_accessor :trusted_cert_path

      # @return Specifies whether to use a CA certificate from the system trust
      # store or from a specified PEM file. The default value is false.
      attr_accessor :use_system_trust_store

      # @return The encrypted credential used for authentication. Credentials
      # are encrypted using the integration runtime credential manager. Type:
      # string (or Expression with resultType string).
      attr_accessor :encrypted_credential


      #
      # Mapper for GoogleBigQueryLinkedService class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'GoogleBigQuery',
          type: {
            name: 'Composite',
            class_name: 'GoogleBigQueryLinkedService',
            model_properties: {
              additional_properties: {
                client_side_validation: true,
                required: false,
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              connect_via: {
                client_side_validation: true,
                required: false,
                serialized_name: 'connectVia',
                type: {
                  name: 'Composite',
                  class_name: 'IntegrationRuntimeReference'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'description',
                type: {
                  name: 'String'
                }
              },
              parameters: {
                client_side_validation: true,
                required: false,
                serialized_name: 'parameters',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ParameterSpecificationElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ParameterSpecification'
                      }
                  }
                }
              },
              annotations: {
                client_side_validation: true,
                required: false,
                serialized_name: 'annotations',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              project: {
                client_side_validation: true,
                required: true,
                serialized_name: 'typeProperties.project',
                type: {
                  name: 'Object'
                }
              },
              additional_projects: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.additionalProjects',
                type: {
                  name: 'Object'
                }
              },
              request_google_drive_scope: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.requestGoogleDriveScope',
                type: {
                  name: 'Object'
                }
              },
              authentication_type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'typeProperties.authenticationType',
                type: {
                  name: 'String'
                }
              },
              refresh_token: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.refreshToken',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: 'type',
                  uber_parent: 'SecretBase',
                  class_name: 'SecretBase'
                }
              },
              client_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.clientId',
                type: {
                  name: 'Object'
                }
              },
              client_secret: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.clientSecret',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: 'type',
                  uber_parent: 'SecretBase',
                  class_name: 'SecretBase'
                }
              },
              email: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.email',
                type: {
                  name: 'Object'
                }
              },
              key_file_path: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.keyFilePath',
                type: {
                  name: 'Object'
                }
              },
              trusted_cert_path: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.trustedCertPath',
                type: {
                  name: 'Object'
                }
              },
              use_system_trust_store: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.useSystemTrustStore',
                type: {
                  name: 'Object'
                }
              },
              encrypted_credential: {
                client_side_validation: true,
                required: false,
                serialized_name: 'typeProperties.encryptedCredential',
                type: {
                  name: 'Object'
                }
              }
            }
          }
        }
      end
    end
  end
end
