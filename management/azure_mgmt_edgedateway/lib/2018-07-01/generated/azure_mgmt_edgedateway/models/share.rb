# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Compute::Mgmt::V2018_07_01
  module Models
    #
    # Represents a share on the  Data Box Edge/Gateway device.
    #
    class Share < ARMBaseModel

      include MsRestAzure

      # @return [String] Description for the share.
      attr_accessor :description

      # @return [ShareStatus] Current status of the share. Possible values
      # include: 'Online', 'Offline'
      attr_accessor :share_status

      # @return [MonitoringStatus] Current monitoring status of the share.
      # Possible values include: 'Enabled', 'Disabled'
      attr_accessor :monitoring_status

      # @return [AzureContainerInfo] Azure container mapping for the share.
      attr_accessor :azure_container_info

      # @return [ShareAccessProtocol] Access protocol to be used by the share.
      # Possible values include: 'SMB', 'NFS'
      attr_accessor :access_protocol

      # @return [Array<UserAccessRight>] Mapping of Users and corresponding
      # access rights on the share (mandatory for SMB protocol).
      attr_accessor :user_access_rights

      # @return [Array<ClientAccessRight>] List of IP addresses and
      # corresponding access rights on the share(mandatory for NFS protocol).
      attr_accessor :client_access_rights

      # @return [RefreshDetails] Details of the refresh job on this share.
      attr_accessor :refresh_details

      # @return [Array<MountPointMap>] Share mount point to the role.
      attr_accessor :share_mappings

      # @return [DataPolicy] Data policy of the share. Possible values include:
      # 'Cloud', 'Local'
      attr_accessor :data_policy


      #
      # Mapper for Share class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'Share',
          type: {
            name: 'Composite',
            class_name: 'Share',
            model_properties: {
              id: {
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              description: {
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              share_status: {
                required: true,
                serialized_name: 'properties.shareStatus',
                type: {
                  name: 'String'
                }
              },
              monitoring_status: {
                required: true,
                serialized_name: 'properties.monitoringStatus',
                type: {
                  name: 'String'
                }
              },
              azure_container_info: {
                required: false,
                serialized_name: 'properties.azureContainerInfo',
                type: {
                  name: 'Composite',
                  class_name: 'AzureContainerInfo'
                }
              },
              access_protocol: {
                required: true,
                serialized_name: 'properties.accessProtocol',
                type: {
                  name: 'String'
                }
              },
              user_access_rights: {
                required: false,
                serialized_name: 'properties.userAccessRights',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'UserAccessRightElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'UserAccessRight'
                      }
                  }
                }
              },
              client_access_rights: {
                required: false,
                serialized_name: 'properties.clientAccessRights',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'ClientAccessRightElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ClientAccessRight'
                      }
                  }
                }
              },
              refresh_details: {
                required: false,
                serialized_name: 'properties.refreshDetails',
                type: {
                  name: 'Composite',
                  class_name: 'RefreshDetails'
                }
              },
              share_mappings: {
                required: false,
                read_only: true,
                serialized_name: 'properties.shareMappings',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'MountPointMapElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MountPointMap'
                      }
                  }
                }
              },
              data_policy: {
                required: false,
                serialized_name: 'properties.dataPolicy',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
