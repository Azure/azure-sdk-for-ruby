# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Network::Mgmt::V2015_05_01_preview
  module Models
    #
    # ExpressRouteCircuit resource
    #
    class ExpressRouteCircuit < Resource

      include MsRestAzure

      # @return [ExpressRouteCircuitSku] Gets or sets sku
      attr_accessor :sku

      # @return [String] Gets or sets CircuitProvisioningState state of the
      # resource
      attr_accessor :circuit_provisioning_state

      # @return [ServiceProviderProvisioningState] Gets or sets
      # ServiceProviderProvisioningState state of the resource. Possible values
      # include: 'NotProvisioned', 'Provisioning', 'Provisioned',
      # 'Deprovisioning'
      attr_accessor :service_provider_provisioning_state

      # @return [Array<ExpressRouteCircuitAuthorization>] Gets or sets list of
      # authorizations
      attr_accessor :authorizations

      # @return [Array<ExpressRouteCircuitPeering>] Gets or sets list of
      # peerings
      attr_accessor :peerings

      # @return [String] Gets or sets ServiceKey
      attr_accessor :service_key

      # @return [String] Gets or sets ServiceProviderNotes
      attr_accessor :service_provider_notes

      # @return [ExpressRouteCircuitServiceProviderProperties] Gets or sets
      # ServiceProviderProperties
      attr_accessor :service_provider_properties

      # @return [String] Gets or sets Provisioning state of the PublicIP
      # resource Updating/Deleting/Failed
      attr_accessor :provisioning_state

      # @return [String] Gets a unique read-only string that changes whenever
      # the resource is updated
      attr_accessor :etag


      #
      # Mapper for ExpressRouteCircuit class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ExpressRouteCircuit',
          type: {
            name: 'Composite',
            class_name: 'ExpressRouteCircuit',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              location: {
                client_side_validation: true,
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              sku: {
                client_side_validation: true,
                required: false,
                serialized_name: 'sku',
                type: {
                  name: 'Composite',
                  class_name: 'ExpressRouteCircuitSku'
                }
              },
              circuit_provisioning_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.circuitProvisioningState',
                type: {
                  name: 'String'
                }
              },
              service_provider_provisioning_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.serviceProviderProvisioningState',
                type: {
                  name: 'String'
                }
              },
              authorizations: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.authorizations',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ExpressRouteCircuitAuthorizationElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ExpressRouteCircuitAuthorization'
                      }
                  }
                }
              },
              peerings: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.peerings',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ExpressRouteCircuitPeeringElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ExpressRouteCircuitPeering'
                      }
                  }
                }
              },
              service_key: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.serviceKey',
                type: {
                  name: 'String'
                }
              },
              service_provider_notes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.serviceProviderNotes',
                type: {
                  name: 'String'
                }
              },
              service_provider_properties: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.serviceProviderProperties',
                type: {
                  name: 'Composite',
                  class_name: 'ExpressRouteCircuitServiceProviderProperties'
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              etag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
