# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Network::Mgmt::V2020_06_01
  module Models
    #
    # Properties of the rule collection.
    #
    class FirewallPolicyRuleCollection

      include MsRestAzure

      @@discriminatorMap = Hash.new
      @@discriminatorMap["FirewallPolicyNatRuleCollection"] = "FirewallPolicyNatRuleCollection"
      @@discriminatorMap["FirewallPolicyFilterRuleCollection"] = "FirewallPolicyFilterRuleCollection"

      def initialize
        @ruleCollectionType = "FirewallPolicyRuleCollection"
      end

      attr_accessor :ruleCollectionType

      # @return [String] The name of the rule collection.
      attr_accessor :name

      # @return [Integer] Priority of the Firewall Policy Rule Collection
      # resource.
      attr_accessor :priority


      #
      # Mapper for FirewallPolicyRuleCollection class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'FirewallPolicyRuleCollection',
          type: {
            name: 'Composite',
            polymorphic_discriminator: 'ruleCollectionType',
            uber_parent: 'FirewallPolicyRuleCollection',
            class_name: 'FirewallPolicyRuleCollection',
            model_properties: {
              name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              priority: {
                client_side_validation: true,
                required: false,
                serialized_name: 'priority',
                constraints: {
                  InclusiveMaximum: 65000,
                  InclusiveMinimum: 100
                },
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
