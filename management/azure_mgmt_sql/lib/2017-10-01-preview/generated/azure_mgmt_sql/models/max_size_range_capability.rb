# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SQL::Mgmt::V2017_10_01_preview
  module Models
    #
    # The maximum size range capability.
    #
    class MaxSizeRangeCapability

      include MsRestAzure

      # @return [MaxSizeCapability] Minimum value.
      attr_accessor :min_value

      # @return [MaxSizeCapability] Maximum value.
      attr_accessor :max_value

      # @return [MaxSizeCapability] Scale/step size for discrete values between
      # the minimum value and the maximum value.
      attr_accessor :scale_size

      # @return [LogSizeCapability] Size of transaction log.
      attr_accessor :log_size

      # @return [CapabilityStatus] The status of the capability. Possible
      # values include: 'Visible', 'Available', 'Default', 'Disabled'
      attr_accessor :status

      # @return [String] The reason for the capability not being available.
      attr_accessor :reason


      #
      # Mapper for MaxSizeRangeCapability class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'MaxSizeRangeCapability',
          type: {
            name: 'Composite',
            class_name: 'MaxSizeRangeCapability',
            model_properties: {
              min_value: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'minValue',
                type: {
                  name: 'Composite',
                  class_name: 'MaxSizeCapability'
                }
              },
              max_value: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'maxValue',
                type: {
                  name: 'Composite',
                  class_name: 'MaxSizeCapability'
                }
              },
              scale_size: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'scaleSize',
                type: {
                  name: 'Composite',
                  class_name: 'MaxSizeCapability'
                }
              },
              log_size: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'logSize',
                type: {
                  name: 'Composite',
                  class_name: 'LogSizeCapability'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'status',
                type: {
                  name: 'Enum',
                  module: 'CapabilityStatus'
                }
              },
              reason: {
                client_side_validation: true,
                required: false,
                serialized_name: 'reason',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
