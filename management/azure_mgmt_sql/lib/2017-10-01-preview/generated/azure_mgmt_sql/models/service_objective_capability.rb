# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SQL::Mgmt::V2017_10_01_preview
  module Models
    #
    # The service objectives capability.
    #
    class ServiceObjectiveCapability

      include MsRestAzure

      # @return The unique ID of the service objective.
      attr_accessor :id

      # @return [String] The service objective name.
      attr_accessor :name

      # @return [Array<MaxSizeRangeCapability>] The list of supported maximum
      # database sizes.
      attr_accessor :supported_max_sizes

      # @return [PerformanceLevelCapability] The performance level.
      attr_accessor :performance_level

      # @return [Sku] The sku.
      attr_accessor :sku

      # @return [Array<LicenseTypeCapability>] List of supported license types.
      attr_accessor :supported_license_types

      # @return [MaxSizeCapability] The included (free) max size.
      attr_accessor :included_max_size

      # @return [CapabilityStatus] The status of the capability. Possible
      # values include: 'Visible', 'Available', 'Default', 'Disabled'
      attr_accessor :status

      # @return [String] The reason for the capability not being available.
      attr_accessor :reason


      #
      # Mapper for ServiceObjectiveCapability class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ServiceObjectiveCapability',
          type: {
            name: 'Composite',
            class_name: 'ServiceObjectiveCapability',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              supported_max_sizes: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'supportedMaxSizes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MaxSizeRangeCapabilityElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MaxSizeRangeCapability'
                      }
                  }
                }
              },
              performance_level: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'performanceLevel',
                type: {
                  name: 'Composite',
                  class_name: 'PerformanceLevelCapability'
                }
              },
              sku: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'sku',
                type: {
                  name: 'Composite',
                  class_name: 'Sku'
                }
              },
              supported_license_types: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'supportedLicenseTypes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'LicenseTypeCapabilityElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'LicenseTypeCapability'
                      }
                  }
                }
              },
              included_max_size: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'includedMaxSize',
                type: {
                  name: 'Composite',
                  class_name: 'MaxSizeCapability'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'status',
                type: {
                  name: 'Enum',
                  module: 'CapabilityStatus'
                }
              },
              reason: {
                client_side_validation: true,
                required: false,
                serialized_name: 'reason',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
