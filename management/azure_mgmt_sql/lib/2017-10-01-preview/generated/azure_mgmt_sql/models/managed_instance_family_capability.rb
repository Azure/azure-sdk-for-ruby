# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SQL::Mgmt::V2017_10_01_preview
  module Models
    #
    # The managed server family capability.
    #
    class ManagedInstanceFamilyCapability

      include MsRestAzure

      # @return [String] Family name.
      attr_accessor :name

      # @return [String] SKU name.
      attr_accessor :sku

      # @return [Array<LicenseTypeCapability>] List of supported license types.
      attr_accessor :supported_license_types

      # @return [Array<ManagedInstanceVcoresCapability>] List of supported
      # virtual cores values.
      attr_accessor :supported_vcores_values

      # @return [MaxSizeCapability] Included size.
      attr_accessor :included_max_size

      # @return [Array<MaxSizeRangeCapability>] Storage size ranges.
      attr_accessor :supported_storage_sizes

      # @return [CapabilityStatus] The status of the capability. Possible
      # values include: 'Visible', 'Available', 'Default', 'Disabled'
      attr_accessor :status

      # @return [String] The reason for the capability not being available.
      attr_accessor :reason


      #
      # Mapper for ManagedInstanceFamilyCapability class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ManagedInstanceFamilyCapability',
          type: {
            name: 'Composite',
            class_name: 'ManagedInstanceFamilyCapability',
            model_properties: {
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              sku: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'sku',
                type: {
                  name: 'String'
                }
              },
              supported_license_types: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'supportedLicenseTypes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'LicenseTypeCapabilityElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'LicenseTypeCapability'
                      }
                  }
                }
              },
              supported_vcores_values: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'supportedVcoresValues',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ManagedInstanceVcoresCapabilityElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ManagedInstanceVcoresCapability'
                      }
                  }
                }
              },
              included_max_size: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'includedMaxSize',
                type: {
                  name: 'Composite',
                  class_name: 'MaxSizeCapability'
                }
              },
              supported_storage_sizes: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'supportedStorageSizes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MaxSizeRangeCapabilityElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MaxSizeRangeCapability'
                      }
                  }
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'status',
                type: {
                  name: 'Enum',
                  module: 'CapabilityStatus'
                }
              },
              reason: {
                client_side_validation: true,
                required: false,
                serialized_name: 'reason',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
