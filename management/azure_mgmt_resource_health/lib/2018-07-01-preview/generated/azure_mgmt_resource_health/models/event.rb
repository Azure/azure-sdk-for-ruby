# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ResourceHealth::Mgmt::V2018_08_01_preview
  module Models
    #
    # Service health event
    #
    class Event < Resource

      include MsRestAzure

      # @return [EventTypeValues] Type of event. Possible values include:
      # 'ServiceIssue', 'PlannedMaintenance', 'HealthAdvisory', 'RCA'
      attr_accessor :event_type

      # @return [EventSourceValues] Source of event. Possible values include:
      # 'ResourceHealth', 'ServiceHealth'
      attr_accessor :event_source

      # @return [EventStatusValues] Current status of event. Possible values
      # include: 'Active', 'Resolved'
      attr_accessor :status

      # @return [String] Title text of event.
      attr_accessor :title

      # @return [String] Summary text of event.
      attr_accessor :summary

      # @return [String] Header text of event.
      attr_accessor :header

      # @return [LevelValues] Level of insight. Possible values include:
      # 'Critical', 'Warning'
      attr_accessor :level

      # @return [EventLevelValues] Level of event. Possible values include:
      # 'Critical', 'Warning', 'Informational'
      attr_accessor :event_level

      # @return [EventPropertiesArticle] Article of event.
      attr_accessor :article

      # @return [Array<Link>] Useful links of event.
      attr_accessor :links

      # @return [DateTime] It provides the Timestamp for when the health
      # impacting event started.
      attr_accessor :impact_start_time

      # @return [DateTime] It provides the Timestamp for when the health
      # impacting event resolved.
      attr_accessor :impact_mitigation_time

      # @return [Array<Impact>] List services impacted by the service health
      # event.
      attr_accessor :impact

      # @return [EventPropertiesRecommendedActions] Recommended actions of
      # event.
      attr_accessor :recommended_actions

      # @return [Array<Faq>] Frequently asked questions for the service health
      # event.
      attr_accessor :faqs

      # @return [Boolean] It provides information if the event is High incident
      # rate event or not.
      attr_accessor :is_hir

      # @return [Boolean] Tells if we want to enable or disable Microsoft
      # Support for this event.
      attr_accessor :enable_microsoft_support

      # @return [Boolean] Tells if we want to enable or disable Microsoft
      # Support for this event.
      attr_accessor :enable_chat_with_us

      # @return [Integer] Priority level of the event.
      attr_accessor :priority

      # @return [DateTime] It provides the Timestamp for when the health
      # impacting event was last updated.
      attr_accessor :last_update_time

      # @return [String] Stage for HIR Document
      attr_accessor :hir_stage


      #
      # Mapper for Event class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'event',
          type: {
            name: 'Composite',
            class_name: 'Event',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              event_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.eventType',
                type: {
                  name: 'String'
                }
              },
              event_source: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.eventSource',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.status',
                type: {
                  name: 'String'
                }
              },
              title: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.title',
                type: {
                  name: 'String'
                }
              },
              summary: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.summary',
                type: {
                  name: 'String'
                }
              },
              header: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.header',
                type: {
                  name: 'String'
                }
              },
              level: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.level',
                type: {
                  name: 'String'
                }
              },
              event_level: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.eventLevel',
                type: {
                  name: 'String'
                }
              },
              article: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.article',
                type: {
                  name: 'Composite',
                  class_name: 'EventPropertiesArticle'
                }
              },
              links: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.links',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'LinkElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'Link'
                      }
                  }
                }
              },
              impact_start_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.impactStartTime',
                type: {
                  name: 'DateTime'
                }
              },
              impact_mitigation_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.impactMitigationTime',
                type: {
                  name: 'DateTime'
                }
              },
              impact: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.impact',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ImpactElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'Impact'
                      }
                  }
                }
              },
              recommended_actions: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.recommendedActions',
                type: {
                  name: 'Composite',
                  class_name: 'EventPropertiesRecommendedActions'
                }
              },
              faqs: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.faqs',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'FaqElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'Faq'
                      }
                  }
                }
              },
              is_hir: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.isHIR',
                type: {
                  name: 'Boolean'
                }
              },
              enable_microsoft_support: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.enableMicrosoftSupport',
                type: {
                  name: 'Boolean'
                }
              },
              enable_chat_with_us: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.enableChatWithUs',
                type: {
                  name: 'Boolean'
                }
              },
              priority: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.priority',
                type: {
                  name: 'Number'
                }
              },
              last_update_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.lastUpdateTime',
                type: {
                  name: 'DateTime'
                }
              },
              hir_stage: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.hirStage',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
