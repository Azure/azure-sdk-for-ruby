# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Logic::Mgmt::V2018_07_01_preview
  module Models
    #
    # Model object.
    #
    #
    class ExpressionRoot < Expression

      include MsRestAzure

      # @return [String] The path.
      attr_accessor :path


      #
      # Mapper for ExpressionRoot class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'ExpressionRoot',
          type: {
            name: 'Composite',
            class_name: 'ExpressionRoot',
            model_properties: {
              text: {
                required: false,
                serialized_name: 'text',
                type: {
                  name: 'String'
                }
              },
              value: {
                required: false,
                serialized_name: 'value',
                type: {
                  name: 'Object'
                }
              },
              subexpressions: {
                required: false,
                serialized_name: 'subexpressions',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'ExpressionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'Expression'
                      }
                  }
                }
              },
              error: {
                required: false,
                serialized_name: 'error',
                type: {
                  name: 'Composite',
                  class_name: 'AzureResourceErrorInfo'
                }
              },
              path: {
                required: false,
                serialized_name: 'path',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
