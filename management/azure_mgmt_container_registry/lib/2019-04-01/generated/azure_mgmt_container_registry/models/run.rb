# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ContainerRegistry::Mgmt::V2019_04_01
  module Models
    #
    # Run resource properties
    #
    class Run < ProxyResource

      include MsRestAzure

      # @return [String] The unique identifier for the run.
      attr_accessor :run_id

      # @return [RunStatus] The current status of the run. Possible values
      # include: 'Queued', 'Started', 'Running', 'Succeeded', 'Failed',
      # 'Canceled', 'Error', 'Timeout'
      attr_accessor :status

      # @return [DateTime] The last updated time for the run.
      attr_accessor :last_updated_time

      # @return [RunType] The type of run. Possible values include:
      # 'QuickBuild', 'QuickRun', 'AutoBuild', 'AutoRun'
      attr_accessor :run_type

      # @return [DateTime] The time the run was scheduled.
      attr_accessor :create_time

      # @return [DateTime] The time the run started.
      attr_accessor :start_time

      # @return [DateTime] The time the run finished.
      attr_accessor :finish_time

      # @return [Array<ImageDescriptor>] The list of all images that were
      # generated from the run. This is applicable if the run generates base
      # image dependencies.
      attr_accessor :output_images

      # @return [String] The task against which run was scheduled.
      attr_accessor :task

      # @return [ImageUpdateTrigger] The image update trigger that caused the
      # run. This is applicable if the task has base image trigger configured.
      attr_accessor :image_update_trigger

      # @return [SourceTriggerDescriptor] The source trigger that caused the
      # run.
      attr_accessor :source_trigger

      # @return [PlatformProperties] The platform properties against which the
      # run will happen.
      attr_accessor :platform

      # @return [AgentProperties] The machine configuration of the run agent.
      attr_accessor :agent_configuration

      # @return [String] The scope of the credentials that were used to login
      # to the source registry during this run.
      attr_accessor :source_registry_auth

      # @return [Array<String>] The list of custom registries that were logged
      # in during this run.
      attr_accessor :custom_registries

      # @return [String] The error message received from backend systems after
      # the run is scheduled.
      attr_accessor :run_error_message

      # @return [ProvisioningState] The provisioning state of a run. Possible
      # values include: 'Creating', 'Updating', 'Deleting', 'Succeeded',
      # 'Failed', 'Canceled'
      attr_accessor :provisioning_state

      # @return [Boolean] The value that indicates whether archiving is enabled
      # or not. Default value: false .
      attr_accessor :is_archive_enabled

      # @return [TimerTriggerDescriptor] The timer trigger that caused the run.
      attr_accessor :timer_trigger


      #
      # Mapper for Run class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Run',
          type: {
            name: 'Composite',
            class_name: 'Run',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              run_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.runId',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.status',
                type: {
                  name: 'String'
                }
              },
              last_updated_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.lastUpdatedTime',
                type: {
                  name: 'DateTime'
                }
              },
              run_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.runType',
                type: {
                  name: 'String'
                }
              },
              create_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.createTime',
                type: {
                  name: 'DateTime'
                }
              },
              start_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.startTime',
                type: {
                  name: 'DateTime'
                }
              },
              finish_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.finishTime',
                type: {
                  name: 'DateTime'
                }
              },
              output_images: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.outputImages',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ImageDescriptorElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ImageDescriptor'
                      }
                  }
                }
              },
              task: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.task',
                type: {
                  name: 'String'
                }
              },
              image_update_trigger: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.imageUpdateTrigger',
                type: {
                  name: 'Composite',
                  class_name: 'ImageUpdateTrigger'
                }
              },
              source_trigger: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.sourceTrigger',
                type: {
                  name: 'Composite',
                  class_name: 'SourceTriggerDescriptor'
                }
              },
              platform: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.platform',
                type: {
                  name: 'Composite',
                  class_name: 'PlatformProperties'
                }
              },
              agent_configuration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.agentConfiguration',
                type: {
                  name: 'Composite',
                  class_name: 'AgentProperties'
                }
              },
              source_registry_auth: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.sourceRegistryAuth',
                type: {
                  name: 'String'
                }
              },
              custom_registries: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.customRegistries',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              run_error_message: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.runErrorMessage',
                type: {
                  name: 'String'
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              is_archive_enabled: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.isArchiveEnabled',
                default_value: false,
                type: {
                  name: 'Boolean'
                }
              },
              timer_trigger: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.timerTrigger',
                type: {
                  name: 'Composite',
                  class_name: 'TimerTriggerDescriptor'
                }
              }
            }
          }
        }
      end
    end
  end
end
