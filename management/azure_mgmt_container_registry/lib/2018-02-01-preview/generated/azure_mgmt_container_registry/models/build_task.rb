# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ContainerRegistry::Mgmt::V2018_02_01_preview
  module Models
    #
    # The build task that has the resource properties and all build items. The
    # build task will have all information to schedule a build against it.
    #
    class BuildTask < Resource

      include MsRestAzure

      # @return [ProvisioningState] The provisioning state of the build task.
      # Possible values include: 'Creating', 'Updating', 'Deleting',
      # 'Succeeded', 'Failed', 'Canceled'
      attr_accessor :provisioning_state

      # @return [DateTime] The creation date of build task.
      attr_accessor :creation_date

      # @return [String] The alternative updatable name for a build task.
      attr_accessor :alias_property

      # @return [BuildTaskStatus] The current status of build task. Possible
      # values include: 'Disabled', 'Enabled'
      attr_accessor :status

      # @return [SourceRepositoryProperties] The properties that describes the
      # source(code) for the build task.
      attr_accessor :source_repository

      # @return [PlatformProperties] The platform properties against which the
      # build has to happen.
      attr_accessor :platform

      # @return [Integer] Build timeout in seconds. Default value: 3600 .
      attr_accessor :timeout


      #
      # Mapper for BuildTask class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'BuildTask',
          type: {
            name: 'Composite',
            class_name: 'BuildTask',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              location: {
                client_side_validation: true,
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              creation_date: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.creationDate',
                type: {
                  name: 'DateTime'
                }
              },
              alias_property: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.alias',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.status',
                type: {
                  name: 'String'
                }
              },
              source_repository: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.sourceRepository',
                type: {
                  name: 'Composite',
                  class_name: 'SourceRepositoryProperties'
                }
              },
              platform: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.platform',
                type: {
                  name: 'Composite',
                  class_name: 'PlatformProperties'
                }
              },
              timeout: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.timeout',
                default_value: 3600,
                constraints: {
                  InclusiveMaximum: 28800,
                  InclusiveMinimum: 300
                },
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
