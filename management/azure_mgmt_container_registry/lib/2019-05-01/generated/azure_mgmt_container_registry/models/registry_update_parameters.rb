# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ContainerRegistry::Mgmt::V2019_05_01
  module Models
    #
    # The parameters for updating a container registry.
    #
    class RegistryUpdateParameters

      include MsRestAzure

      # @return [Hash{String => String}] The tags for the container registry.
      attr_accessor :tags

      # @return [Sku] The SKU of the container registry.
      attr_accessor :sku

      # @return [Boolean] The value that indicates whether the admin user is
      # enabled.
      attr_accessor :admin_user_enabled

      # @return [NetworkRuleSet] The network rule set for a container registry.
      attr_accessor :network_rule_set

      # @return [Policies] The policies for a container registry.
      attr_accessor :policies


      #
      # Mapper for RegistryUpdateParameters class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'RegistryUpdateParameters',
          type: {
            name: 'Composite',
            class_name: 'RegistryUpdateParameters',
            model_properties: {
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              sku: {
                client_side_validation: true,
                required: false,
                serialized_name: 'sku',
                type: {
                  name: 'Composite',
                  class_name: 'Sku'
                }
              },
              admin_user_enabled: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.adminUserEnabled',
                type: {
                  name: 'Boolean'
                }
              },
              network_rule_set: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.networkRuleSet',
                type: {
                  name: 'Composite',
                  class_name: 'NetworkRuleSet'
                }
              },
              policies: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.policies',
                type: {
                  name: 'Composite',
                  class_name: 'Policies'
                }
              }
            }
          }
        }
      end
    end
  end
end
