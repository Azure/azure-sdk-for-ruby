# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ContainerService::Mgmt::V2019_04_30
  module Models
    #
    # OpenShift Managed cluster.
    #
    class OpenShiftManagedCluster < Resource

      include MsRestAzure

      # @return [PurchasePlan] Define the resource plan as required by ARM for
      # billing purposes
      attr_accessor :plan

      # @return [String] The current deployment or provisioning state, which
      # only appears in the response.
      attr_accessor :provisioning_state

      # @return [String] Version of OpenShift specified when creating the
      # cluster.
      attr_accessor :open_shift_version

      # @return [String] Version of OpenShift specified when creating the
      # cluster.
      attr_accessor :cluster_version

      # @return [String] Service generated FQDN for OpenShift API server.
      attr_accessor :public_hostname

      # @return [String] Service generated FQDN for OpenShift API server
      # loadbalancer internal hostname.
      attr_accessor :fqdn

      # @return [NetworkProfile] Configuration for OpenShift networking.
      attr_accessor :network_profile

      # @return [Array<OpenShiftRouterProfile>] Configuration for OpenShift
      # router(s).
      attr_accessor :router_profiles

      # @return [OpenShiftManagedClusterMasterPoolProfile] Configuration for
      # OpenShift master VMs.
      attr_accessor :master_pool_profile

      # @return [Array<OpenShiftManagedClusterAgentPoolProfile>] Configuration
      # of OpenShift cluster VMs.
      attr_accessor :agent_pool_profiles

      # @return [OpenShiftManagedClusterAuthProfile] Configures OpenShift
      # authentication.
      attr_accessor :auth_profile


      #
      # Mapper for OpenShiftManagedCluster class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'OpenShiftManagedCluster',
          type: {
            name: 'Composite',
            class_name: 'OpenShiftManagedCluster',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              location: {
                client_side_validation: true,
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              plan: {
                client_side_validation: true,
                required: false,
                serialized_name: 'plan',
                type: {
                  name: 'Composite',
                  class_name: 'PurchasePlan'
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              open_shift_version: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.openShiftVersion',
                type: {
                  name: 'String'
                }
              },
              cluster_version: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.clusterVersion',
                type: {
                  name: 'String'
                }
              },
              public_hostname: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.publicHostname',
                type: {
                  name: 'String'
                }
              },
              fqdn: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.fqdn',
                type: {
                  name: 'String'
                }
              },
              network_profile: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.networkProfile',
                type: {
                  name: 'Composite',
                  class_name: 'NetworkProfile'
                }
              },
              router_profiles: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.routerProfiles',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'OpenShiftRouterProfileElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'OpenShiftRouterProfile'
                      }
                  }
                }
              },
              master_pool_profile: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.masterPoolProfile',
                type: {
                  name: 'Composite',
                  class_name: 'OpenShiftManagedClusterMasterPoolProfile'
                }
              },
              agent_pool_profiles: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.agentPoolProfiles',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'OpenShiftManagedClusterAgentPoolProfileElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'OpenShiftManagedClusterAgentPoolProfile'
                      }
                  }
                }
              },
              auth_profile: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.authProfile',
                type: {
                  name: 'Composite',
                  class_name: 'OpenShiftManagedClusterAuthProfile'
                }
              }
            }
          }
        }
      end
    end
  end
end
