# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ContainerService::Mgmt::V2017_08_31
  module Models
    #
    # Managed cluster.
    #
    class ManagedCluster < Resource

      include MsRestAzure

      # @return [String] The current deployment or provisioning state, which
      # only appears in the response.
      attr_accessor :provisioning_state

      # @return [String] DNS prefix specified when creating the managed
      # cluster.
      attr_accessor :dns_prefix

      # @return [String] FDQN for the master pool.
      attr_accessor :fqdn

      # @return [String] Version of Kubernetes specified when creating the
      # managed cluster.
      attr_accessor :kubernetes_version

      # @return [Array<ContainerServiceAgentPoolProfile>] Properties of the
      # agent pool.
      attr_accessor :agent_pool_profiles

      # @return [ContainerServiceLinuxProfile] Profile for Linux VMs in the
      # container service cluster.
      attr_accessor :linux_profile

      # @return [ContainerServiceServicePrincipalProfile] Information about a
      # service principal identity for the cluster to use for manipulating
      # Azure APIs. Either secret or keyVaultSecretRef must be specified.
      attr_accessor :service_principal_profile


      #
      # Mapper for ManagedCluster class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ManagedCluster',
          type: {
            name: 'Composite',
            class_name: 'ManagedCluster',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              location: {
                client_side_validation: true,
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              dns_prefix: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.dnsPrefix',
                type: {
                  name: 'String'
                }
              },
              fqdn: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.fqdn',
                type: {
                  name: 'String'
                }
              },
              kubernetes_version: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.kubernetesVersion',
                type: {
                  name: 'String'
                }
              },
              agent_pool_profiles: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.agentPoolProfiles',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ContainerServiceAgentPoolProfileElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ContainerServiceAgentPoolProfile'
                      }
                  }
                }
              },
              linux_profile: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.linuxProfile',
                type: {
                  name: 'Composite',
                  class_name: 'ContainerServiceLinuxProfile'
                }
              },
              service_principal_profile: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.servicePrincipalProfile',
                type: {
                  name: 'Composite',
                  class_name: 'ContainerServiceServicePrincipalProfile'
                }
              }
            }
          }
        }
      end
    end
  end
end
