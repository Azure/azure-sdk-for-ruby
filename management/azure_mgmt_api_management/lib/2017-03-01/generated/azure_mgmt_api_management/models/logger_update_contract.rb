# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::ApiManagement::Api_2017_03_01
  module Models
    #
    # Logger update contract.
    #
    class LoggerUpdateContract

      include MsRestAzure

      include MsRest::JSONable
      # @return [LoggerType] Logger type. Possible values include:
      # 'azureEventHub'
      attr_accessor :logger_type

      # @return [String] Logger description.
      attr_accessor :description

      # @return [Hash{String => String}] Logger credentials.
      attr_accessor :credentials

      # @return [Boolean] Whether records are buffered in the logger before
      # publishing. Default is assumed to be true.
      attr_accessor :is_buffered


      #
      # Mapper for LoggerUpdateContract class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'LoggerUpdateContract',
          type: {
            name: 'Composite',
            class_name: 'LoggerUpdateContract',
            model_properties: {
              logger_type: {
                required: false,
                serialized_name: 'properties.loggerType',
                type: {
                  name: 'Enum',
                  module: 'LoggerType'
                }
              },
              description: {
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              credentials: {
                required: false,
                serialized_name: 'properties.credentials',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              is_buffered: {
                required: false,
                serialized_name: 'properties.isBuffered',
                type: {
                  name: 'Boolean'
                }
              }
            }
          }
        }
      end
    end
  end
end
