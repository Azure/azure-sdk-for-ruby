# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::CognitiveServices::Mgmt::V2017_04_18
  module Models
    #
    # A set of rules governing the network accessibility.
    #
    class NetworkRuleSet

      include MsRestAzure

      # @return [NetworkRuleAction] The default action when no rule from
      # ipRules and from virtualNetworkRules match. This is only used after the
      # bypass property has been evaluated. Possible values include: 'Allow',
      # 'Deny'
      attr_accessor :default_action

      # @return [Array<IpRule>] The list of IP address rules.
      attr_accessor :ip_rules

      # @return [Array<VirtualNetworkRule>] The list of virtual network rules.
      attr_accessor :virtual_network_rules


      #
      # Mapper for NetworkRuleSet class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'NetworkRuleSet',
          type: {
            name: 'Composite',
            class_name: 'NetworkRuleSet',
            model_properties: {
              default_action: {
                client_side_validation: true,
                required: false,
                serialized_name: 'defaultAction',
                type: {
                  name: 'String'
                }
              },
              ip_rules: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ipRules',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'IpRuleElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'IpRule'
                      }
                  }
                }
              },
              virtual_network_rules: {
                client_side_validation: true,
                required: false,
                serialized_name: 'virtualNetworkRules',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'VirtualNetworkRuleElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'VirtualNetworkRule'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
