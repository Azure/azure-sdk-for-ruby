# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::StorageSync::Mgmt::V2018_10_01
  module Models
    #
    # Sync Session status object.
    #
    class SyncProgressStatus

      include MsRestAzure

      # @return [DateTime] Progress timestamp
      attr_accessor :progress_timestamp

      # @return [Enum] Sync direction. Possible values include: 'none',
      # 'initialize', 'download', 'upload', 'recall'
      attr_accessor :sync_direction

      # @return [Integer] Per item error count
      attr_accessor :per_item_error_count

      # @return [Integer] Applied item count.
      attr_accessor :applied_item_count

      # @return [Integer] Total item count
      attr_accessor :total_item_count

      # @return [Integer] Applied bytes
      attr_accessor :applied_bytes

      # @return [Integer] Total bytes
      attr_accessor :total_bytes


      #
      # Mapper for SyncProgressStatus class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'SyncProgressStatus',
          type: {
            name: 'Composite',
            class_name: 'SyncProgressStatus',
            model_properties: {
              progress_timestamp: {
                client_side_validation: true,
                required: false,
                serialized_name: 'progressTimestamp',
                type: {
                  name: 'DateTime'
                }
              },
              sync_direction: {
                client_side_validation: true,
                required: false,
                serialized_name: 'syncDirection',
                type: {
                  name: 'String'
                }
              },
              per_item_error_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'perItemErrorCount',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 0
                },
                type: {
                  name: 'Number'
                }
              },
              applied_item_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'appliedItemCount',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 0
                },
                type: {
                  name: 'Number'
                }
              },
              total_item_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'totalItemCount',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 0
                },
                type: {
                  name: 'Number'
                }
              },
              applied_bytes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'appliedBytes',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 0
                },
                type: {
                  name: 'Number'
                }
              },
              total_bytes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'totalBytes',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 0
                },
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
