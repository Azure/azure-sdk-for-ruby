# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataShare::Mgmt::V2018_11_01_preview
  module Models
    #
    # A consumer side dataSet data transfer object.
    #
    class ConsumerSourceDataSet < ProxyDto

      include MsRestAzure

      # @return [String] DataSet Id
      attr_accessor :data_set_id

      # @return [String] DataSet name
      attr_accessor :data_set_name

      # @return [DataSetType] Type of dataSet. Possible values include: 'Blob',
      # 'Container', 'BlobFolder', 'AdlsGen2FileSystem', 'AdlsGen2Folder',
      # 'AdlsGen2File', 'AdlsGen1Folder', 'AdlsGen1File', 'SqlDBTable',
      # 'SqlDWTable'
      attr_accessor :data_set_type


      #
      # Mapper for ConsumerSourceDataSet class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ConsumerSourceDataSet',
          type: {
            name: 'Composite',
            class_name: 'ConsumerSourceDataSet',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              data_set_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.dataSetId',
                type: {
                  name: 'String'
                }
              },
              data_set_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.dataSetName',
                type: {
                  name: 'String'
                }
              },
              data_set_type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.dataSetType',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
