# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataShare::Mgmt::V2018_11_01_preview
  module Models
    #
    # Synchronization details at dataset level
    #
    class SynchronizationDetails

      include MsRestAzure

      # @return [String] id of dataSet
      attr_accessor :data_set_id

      # @return [DataSetType] type of DataSet. Possible values include: 'Blob',
      # 'Container', 'BlobFolder', 'AdlsGen2FileSystem', 'AdlsGen2Folder',
      # 'AdlsGen2File', 'AdlsGen1Folder', 'AdlsGen1File', 'SqlDBTable',
      # 'SqlDWTable'
      attr_accessor :data_set_type

      # @return [Integer] duration of dataset level copy
      attr_accessor :duration_ms

      # @return [DateTime] End time of dataset level copy
      attr_accessor :end_time

      # @return [Integer] The number of files read from the source dataset.
      attr_accessor :files_read

      # @return [Integer] The number of files written into the sink dataset.
      attr_accessor :files_written

      # @return [String] Error Message if any
      attr_accessor :message

      # @return [String] name of dataSet
      attr_accessor :name

      # @return [Integer] The number of files copied into the sink dataset.
      attr_accessor :rows_copied

      # @return [Integer] The number of rows read from the source dataset.
      attr_accessor :rows_read

      # @return [Integer] The size of the data read from the source dataset in
      # bytes.
      attr_accessor :size_read

      # @return [Integer] The size of the data written into the sink dataset in
      # bytes.
      attr_accessor :size_written

      # @return [DateTime] start time of dataset level copy
      attr_accessor :start_time

      # @return [String] Raw Status
      attr_accessor :status

      # @return [Integer] The vCore units consumed for the dataset
      # synchronization.
      attr_accessor :v_core


      #
      # Mapper for SynchronizationDetails class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'SynchronizationDetails',
          type: {
            name: 'Composite',
            class_name: 'SynchronizationDetails',
            model_properties: {
              data_set_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'dataSetId',
                type: {
                  name: 'String'
                }
              },
              data_set_type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'dataSetType',
                type: {
                  name: 'String'
                }
              },
              duration_ms: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'durationMs',
                type: {
                  name: 'Number'
                }
              },
              end_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'endTime',
                type: {
                  name: 'DateTime'
                }
              },
              files_read: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'filesRead',
                type: {
                  name: 'Number'
                }
              },
              files_written: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'filesWritten',
                type: {
                  name: 'Number'
                }
              },
              message: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'message',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              rows_copied: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'rowsCopied',
                type: {
                  name: 'Number'
                }
              },
              rows_read: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'rowsRead',
                type: {
                  name: 'Number'
                }
              },
              size_read: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'sizeRead',
                type: {
                  name: 'Number'
                }
              },
              size_written: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'sizeWritten',
                type: {
                  name: 'Number'
                }
              },
              start_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'startTime',
                type: {
                  name: 'DateTime'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'status',
                type: {
                  name: 'String'
                }
              },
              v_core: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'vCore',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
