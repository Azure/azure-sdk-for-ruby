# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::OperationalInsights::Mgmt::V2020_03_01_preview
  module Models
    #
    # Datasources under OMS Workspace.
    #
    class DataSource < ProxyResource

      include MsRestAzure

      # @return The data source properties in raw json format, each kind of
      # data source have it's own schema.
      attr_accessor :properties

      # @return [String] The ETag of the data source.
      attr_accessor :etag

      # @return [DataSourceKind] Possible values include: 'WindowsEvent',
      # 'WindowsPerformanceCounter', 'IISLogs', 'LinuxSyslog',
      # 'LinuxSyslogCollection', 'LinuxPerformanceObject',
      # 'LinuxPerformanceCollection', 'CustomLog', 'CustomLogCollection',
      # 'AzureAuditLog', 'AzureActivityLog', 'GenericDataSource',
      # 'ChangeTrackingCustomPath', 'ChangeTrackingPath',
      # 'ChangeTrackingServices', 'ChangeTrackingDataTypeConfiguration',
      # 'ChangeTrackingDefaultRegistry', 'ChangeTrackingRegistry',
      # 'ChangeTrackingLinuxPath', 'LinuxChangeTrackingPath',
      # 'ChangeTrackingContentLocation', 'WindowsTelemetry', 'Office365',
      # 'SecurityWindowsBaselineConfiguration',
      # 'SecurityCenterSecurityWindowsBaselineConfiguration',
      # 'SecurityEventCollectionConfiguration',
      # 'SecurityInsightsSecurityEventCollectionConfiguration',
      # 'ImportComputerGroup', 'NetworkMonitoring', 'Itsm', 'DnsAnalytics',
      # 'ApplicationInsights', 'SqlDataClassification'
      attr_accessor :kind

      # @return [Hash{String => String}] Resource tags.
      attr_accessor :tags


      #
      # Mapper for DataSource class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DataSource',
          type: {
            name: 'Composite',
            class_name: 'DataSource',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              properties: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties',
                type: {
                  name: 'Object'
                }
              },
              etag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              },
              kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'kind',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
