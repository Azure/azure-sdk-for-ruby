# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::OperationalInsights::Mgmt::V2020_08_01
  module Models
    #
    # The daily volume cap for ingestion.
    #
    class WorkspaceCapping

      include MsRestAzure

      # @return [Float] The workspace daily quota for ingestion.
      attr_accessor :daily_quota_gb

      # @return [String] The time when the quota will be rest.
      attr_accessor :quota_next_reset_time

      # @return [DataIngestionStatus] The status of data ingestion for this
      # workspace. Possible values include: 'RespectQuota', 'ForceOn',
      # 'ForceOff', 'OverQuota', 'SubscriptionSuspended', 'ApproachingQuota'
      attr_accessor :data_ingestion_status


      #
      # Mapper for WorkspaceCapping class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'WorkspaceCapping',
          type: {
            name: 'Composite',
            class_name: 'WorkspaceCapping',
            model_properties: {
              daily_quota_gb: {
                client_side_validation: true,
                required: false,
                serialized_name: 'dailyQuotaGb',
                type: {
                  name: 'Double'
                }
              },
              quota_next_reset_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'quotaNextResetTime',
                type: {
                  name: 'String'
                }
              },
              data_ingestion_status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'dataIngestionStatus',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
