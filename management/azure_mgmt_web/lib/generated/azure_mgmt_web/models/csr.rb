# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Web
  module Models
    #
    # Certificate signing request.
    #
    class Csr < MsRestAzure::Resource

      include MsRestAzure

      # @return [String] Name used to locate CSR object.
      attr_accessor :csr_name

      # @return [String] Distinguished name of certificate to be created.
      attr_accessor :distinguished_name

      # @return [String] Actual CSR string created.
      attr_accessor :csr_string

      # @return [String] PFX certifcate of created certificate.
      attr_accessor :pfx_blob

      # @return [String] PFX password.
      attr_accessor :password

      # @return [String] Hash of the certificate's public key.
      attr_accessor :public_key_hash

      # @return [String] App Service Environment.
      attr_accessor :hosting_environment


      #
      # Mapper for Csr class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'Csr',
          type: {
            name: 'Composite',
            class_name: 'Csr',
            model_properties: {
              id: {
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: false,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              kind: {
                required: false,
                serialized_name: 'kind',
                type: {
                  name: 'String'
                }
              },
              location: {
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: false,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              tags: {
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              csr_name: {
                required: false,
                serialized_name: 'properties.name',
                type: {
                  name: 'String'
                }
              },
              distinguished_name: {
                required: false,
                serialized_name: 'properties.distinguishedName',
                type: {
                  name: 'String'
                }
              },
              csr_string: {
                required: false,
                serialized_name: 'properties.csrString',
                type: {
                  name: 'String'
                }
              },
              pfx_blob: {
                required: false,
                serialized_name: 'properties.pfxBlob',
                type: {
                  name: 'String'
                }
              },
              password: {
                required: false,
                serialized_name: 'properties.password',
                type: {
                  name: 'String'
                }
              },
              public_key_hash: {
                required: false,
                serialized_name: 'properties.publicKeyHash',
                type: {
                  name: 'String'
                }
              },
              hosting_environment: {
                required: false,
                serialized_name: 'properties.hostingEnvironment',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
