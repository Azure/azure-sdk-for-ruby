# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Web::Mgmt::V2016_03_01
  module Models
    #
    # Class representing Diagnostic Metric
    #
    class DiagnosticMetricSample

      include MsRestAzure

      # @return [DateTime] Time at which metric is measured
      attr_accessor :timestamp

      # @return [String] Role Instance. Null if this counter is not per
      # instance
      # This is returned and should be whichever instance name we desire to be
      # returned
      # i.e. CPU and Memory return RDWORKERNAME (LargeDed..._IN_0)
      # where RDWORKERNAME is Machine name below and RoleInstance name in
      # parenthesis
      attr_accessor :role_instance

      # @return [Float] Total value of the metric. If multiple measurements are
      # made this will have sum of all.
      attr_accessor :total

      # @return [Float] Maximum of the metric sampled during the time period
      attr_accessor :maximum

      # @return [Float] Minimum of the metric sampled during the time period
      attr_accessor :minimum

      # @return [Boolean] Whether the values are aggregates across all workers
      # or not
      attr_accessor :is_aggregated


      #
      # Mapper for DiagnosticMetricSample class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'DiagnosticMetricSample',
          type: {
            name: 'Composite',
            class_name: 'DiagnosticMetricSample',
            model_properties: {
              timestamp: {
                required: false,
                serialized_name: 'timestamp',
                type: {
                  name: 'DateTime'
                }
              },
              role_instance: {
                required: false,
                serialized_name: 'roleInstance',
                type: {
                  name: 'String'
                }
              },
              total: {
                required: false,
                serialized_name: 'total',
                type: {
                  name: 'Double'
                }
              },
              maximum: {
                required: false,
                serialized_name: 'maximum',
                type: {
                  name: 'Double'
                }
              },
              minimum: {
                required: false,
                serialized_name: 'minimum',
                type: {
                  name: 'Double'
                }
              },
              is_aggregated: {
                required: false,
                serialized_name: 'isAggregated',
                type: {
                  name: 'Boolean'
                }
              }
            }
          }
        }
      end
    end
  end
end
