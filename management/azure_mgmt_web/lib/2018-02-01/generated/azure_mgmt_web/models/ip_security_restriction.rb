# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Web::Mgmt::V2018_02_01
  module Models
    #
    # IP security restriction on an app.
    #
    class IpSecurityRestriction

      include MsRestAzure

      # @return [String] IP address the security restriction is valid for.
      # It can be in form of pure ipv4 address (required SubnetMask property)
      # or
      # CIDR notation such as ipv4/mask (leading bit match). For CIDR,
      # SubnetMask property must not be specified.
      attr_accessor :ip_address

      # @return [String] Subnet mask for the range of IP addresses the
      # restriction is valid for.
      attr_accessor :subnet_mask

      # @return [String] Allow or Deny access for this IP range.
      attr_accessor :action

      # @return [IpFilterTag] Defines what this IP filter will be used for.
      # This is to support IP filtering on proxies. Possible values include:
      # 'Default', 'XffProxy'
      attr_accessor :tag

      # @return [Integer] Priority of IP restriction rule.
      attr_accessor :priority

      # @return [String] IP restriction rule name.
      attr_accessor :name

      # @return [String] IP restriction rule description.
      attr_accessor :description


      #
      # Mapper for IpSecurityRestriction class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'IpSecurityRestriction',
          type: {
            name: 'Composite',
            class_name: 'IpSecurityRestriction',
            model_properties: {
              ip_address: {
                client_side_validation: true,
                required: true,
                serialized_name: 'ipAddress',
                type: {
                  name: 'String'
                }
              },
              subnet_mask: {
                client_side_validation: true,
                required: false,
                serialized_name: 'subnetMask',
                type: {
                  name: 'String'
                }
              },
              action: {
                client_side_validation: true,
                required: false,
                serialized_name: 'action',
                type: {
                  name: 'String'
                }
              },
              tag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tag',
                type: {
                  name: 'Enum',
                  module: 'IpFilterTag'
                }
              },
              priority: {
                client_side_validation: true,
                required: false,
                serialized_name: 'priority',
                type: {
                  name: 'Number'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'description',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
