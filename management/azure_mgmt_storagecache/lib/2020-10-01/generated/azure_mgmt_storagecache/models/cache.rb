# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::StorageCache::Mgmt::V2020_10_01
  module Models
    #
    # A Cache instance. Follows Azure Resource Manager standards:
    # https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
    #
    class Cache

      include MsRestAzure

      # @return ARM tags as name/value pairs.
      attr_accessor :tags

      # @return [String] Resource ID of the Cache.
      attr_accessor :id

      # @return [String] Region name string.
      attr_accessor :location

      # @return [String] Name of Cache.
      attr_accessor :name

      # @return [String] Type of the Cache; Microsoft.StorageCache/Cache
      attr_accessor :type

      # @return [CacheIdentity] The identity of the cache, if configured.
      attr_accessor :identity

      # @return [SystemData] The system meta data relating to this resource.
      attr_accessor :system_data

      # @return [Integer] The size of this Cache, in GB.
      attr_accessor :cache_size_gb

      # @return [CacheHealth] Health of the Cache.
      attr_accessor :health

      # @return [Array<String>] Array of IP addresses that can be used by
      # clients mounting this Cache.
      attr_accessor :mount_addresses

      # @return [ProvisioningStateType] ARM provisioning state, see
      # https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property.
      # Possible values include: 'Succeeded', 'Failed', 'Cancelled',
      # 'Creating', 'Deleting', 'Updating'
      attr_accessor :provisioning_state

      # @return [String] Subnet used for the Cache.
      attr_accessor :subnet

      # @return [CacheUpgradeStatus] Upgrade status of the Cache.
      attr_accessor :upgrade_status

      # @return [CacheNetworkSettings] Specifies network settings of the cache.
      attr_accessor :network_settings

      # @return [CacheEncryptionSettings] Specifies encryption settings of the
      # cache.
      attr_accessor :encryption_settings

      # @return [CacheSecuritySettings] Specifies security settings of the
      # cache.
      attr_accessor :security_settings

      # @return [CacheDirectorySettings] Specifies Directory Services settings
      # of the cache.
      attr_accessor :directory_services_settings

      # @return [CacheSku] SKU for the Cache.
      attr_accessor :sku


      #
      # Mapper for Cache class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Cache',
          type: {
            name: 'Composite',
            class_name: 'Cache',
            model_properties: {
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Object'
                }
              },
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              location: {
                client_side_validation: true,
                required: false,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              identity: {
                client_side_validation: true,
                required: false,
                serialized_name: 'identity',
                type: {
                  name: 'Composite',
                  class_name: 'CacheIdentity'
                }
              },
              system_data: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'systemData',
                type: {
                  name: 'Composite',
                  class_name: 'SystemData'
                }
              },
              cache_size_gb: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.cacheSizeGB',
                type: {
                  name: 'Number'
                }
              },
              health: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.health',
                type: {
                  name: 'Composite',
                  class_name: 'CacheHealth'
                }
              },
              mount_addresses: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.mountAddresses',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              subnet: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.subnet',
                type: {
                  name: 'String'
                }
              },
              upgrade_status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.upgradeStatus',
                type: {
                  name: 'Composite',
                  class_name: 'CacheUpgradeStatus'
                }
              },
              network_settings: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.networkSettings',
                type: {
                  name: 'Composite',
                  class_name: 'CacheNetworkSettings'
                }
              },
              encryption_settings: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.encryptionSettings',
                type: {
                  name: 'Composite',
                  class_name: 'CacheEncryptionSettings'
                }
              },
              security_settings: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.securitySettings',
                type: {
                  name: 'Composite',
                  class_name: 'CacheSecuritySettings'
                }
              },
              directory_services_settings: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.directoryServicesSettings',
                type: {
                  name: 'Composite',
                  class_name: 'CacheDirectorySettings'
                }
              },
              sku: {
                client_side_validation: true,
                required: false,
                serialized_name: 'sku',
                type: {
                  name: 'Composite',
                  class_name: 'CacheSku'
                }
              }
            }
          }
        }
      end
    end
  end
end
