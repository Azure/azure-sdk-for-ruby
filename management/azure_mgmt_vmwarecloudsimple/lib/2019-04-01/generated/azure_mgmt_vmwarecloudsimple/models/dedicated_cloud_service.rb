# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::VMwareCloudSimple::Mgmt::V2019-04-01
  module Models
    #
    # Dedicated cloud service model
    #
    class DedicatedCloudService

      include MsRestAzure

      # @return [String]
      # /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
      attr_accessor :id

      # @return [String] Azure region
      attr_accessor :location

      # @return [String] {dedicatedCloudServiceName}
      attr_accessor :name

      # @return [OnboardingStatus] indicates whether account onboarded or not
      # in a given region. Possible values include: 'notOnBoarded',
      # 'onBoarded', 'onBoardingFailed', 'onBoarding'
      attr_accessor :account_onboarding_state

      # @return [String] gateway Subnet for the account. It will collect the
      # subnet address and always treat it as /28
      attr_accessor :gateway_subnet

      # @return [Integer] total nodes purchased
      attr_accessor :nodes

      # @return [String] link to a service management web portal
      attr_accessor :service_url

      # @return [Hash{String => String}] The list of tags
      attr_accessor :tags

      # @return [String] {resourceProviderNamespace}/{resourceType}
      attr_accessor :type


      #
      # Mapper for DedicatedCloudService class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'DedicatedCloudService',
          type: {
            name: 'Composite',
            class_name: 'DedicatedCloudService',
            model_properties: {
              id: {
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              location: {
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: false,
                read_only: true,
                serialized_name: 'name',
                constraints: {
                  Pattern: '^[-a-zA-Z0-9]+$'
                },
                type: {
                  name: 'String'
                }
              },
              account_onboarding_state: {
                required: false,
                read_only: true,
                serialized_name: 'properties.accountOnboardingState',
                type: {
                  name: 'Enum',
                  module: 'OnboardingStatus'
                }
              },
              gateway_subnet: {
                required: true,
                serialized_name: 'properties.gatewaySubnet',
                type: {
                  name: 'String'
                }
              },
              nodes: {
                required: false,
                serialized_name: 'properties.nodes',
                type: {
                  name: 'Number'
                }
              },
              service_url: {
                required: false,
                serialized_name: 'properties.serviceURL',
                type: {
                  name: 'String'
                }
              },
              tags: {
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              type: {
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
