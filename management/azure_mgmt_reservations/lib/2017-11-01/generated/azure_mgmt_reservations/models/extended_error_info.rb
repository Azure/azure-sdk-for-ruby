# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Reservations::Mgmt::V2017_11_01
  module Models
    #
    # Model object.
    #
    #
    class ExtendedErrorInfo

      include MsRestAzure

      # @return [Enum] Possible values include: 'NotSpecified',
      # 'InternalServerError', 'ServerTimeout', 'AuthorizationFailed',
      # 'BadRequest', 'ClientCertificateThumbprintNotSet',
      # 'InvalidRequestContent', 'OperationFailed', 'HttpMethodNotSupported',
      # 'InvalidRequestUri', 'MissingTenantId', 'InvalidTenantId',
      # 'InvalidReservationOrderId', 'InvalidReservationId',
      # 'ReservationIdNotInReservationOrder', 'ReservationOrderNotFound',
      # 'InvalidSubscriptionId', 'InvalidAccessToken', 'InvalidLocationId',
      # 'UnauthenticatedRequestsThrottled', 'InvalidHealthCheckType',
      # 'Forbidden', 'BillingScopeIdCannotBeChanged',
      # 'AppliedScopesNotAssociatedWithCommerceAccount',
      # 'AppliedScopesSameAsExisting', 'RoleAssignmentCreationFailed',
      # 'ReservationOrderCreationFailed', 'ReservationOrderNotEnabled',
      # 'CapacityUpdateScopesFailed', 'UnsupportedReservationTerm',
      # 'ReservationOrderIdAlreadyExists', 'RiskCheckFailed',
      # 'CreateQuoteFailed', 'ActivateQuoteFailed', 'NonsupportedAccountId',
      # 'PaymentInstrumentNotFound', 'MissingAppliedScopesForSingle',
      # 'NoValidReservationsToReRate', 'ReRateOnlyAllowedForEA',
      # 'OperationCannotBePerformedInCurrentState',
      # 'InvalidSingleAppliedScopesCount',
      # 'InvalidFulfillmentRequestParameters', 'NotSupportedCountry',
      # 'InvalidRefundQuantity', 'PurchaseError', 'BillingCustomerInputError',
      # 'BillingPaymentInstrumentSoftError',
      # 'BillingPaymentInstrumentHardError', 'BillingTransientError',
      # 'BillingError', 'FulfillmentConfigurationError',
      # 'FulfillmentOutOfStockError', 'FulfillmentTransientError',
      # 'FulfillmentError', 'CalculatePriceFailed'
      attr_accessor :code

      # @return [String]
      attr_accessor :message


      #
      # Mapper for ExtendedErrorInfo class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ExtendedErrorInfo',
          type: {
            name: 'Composite',
            class_name: 'ExtendedErrorInfo',
            model_properties: {
              code: {
                client_side_validation: true,
                required: false,
                serialized_name: 'code',
                type: {
                  name: 'String'
                }
              },
              message: {
                client_side_validation: true,
                required: false,
                serialized_name: 'message',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
