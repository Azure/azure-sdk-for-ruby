# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::MediaServices::Mgmt::V2019_05_01_preview
  module Models
    #
    # Describes the transcription tracks in the output of a Live Event,
    # generated using speech-to-text transcription.
    #
    class LiveEventTranscription

      include MsRestAzure

      # @return [String] Specifies the language (locale) used for
      # speech-to-text transcription ï¿½ it should match the spoken language in
      # the audio track. The value should be in BCP-47 format of 'language
      # tag-region' (e.g: 'en-US'). The list of supported languages are 'en-US'
      # and 'en-GB'.
      attr_accessor :language

      # @return [Array<LiveEventInputTrackSelection>] Provides a mechanism to
      # select the audio track in the input live feed, to which speech-to-text
      # transcription is applied.
      attr_accessor :input_track_selection

      # @return [LiveEventOutputTranscriptionTrack] Describes a transcription
      # track in the output of a Live Event, generated using speech-to-text
      # transcription.
      attr_accessor :output_transcription_track


      #
      # Mapper for LiveEventTranscription class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'LiveEventTranscription',
          type: {
            name: 'Composite',
            class_name: 'LiveEventTranscription',
            model_properties: {
              language: {
                client_side_validation: true,
                required: false,
                serialized_name: 'language',
                type: {
                  name: 'String'
                }
              },
              input_track_selection: {
                client_side_validation: true,
                required: false,
                serialized_name: 'inputTrackSelection',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'LiveEventInputTrackSelectionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'LiveEventInputTrackSelection'
                      }
                  }
                }
              },
              output_transcription_track: {
                client_side_validation: true,
                required: false,
                serialized_name: 'outputTranscriptionTrack',
                type: {
                  name: 'Composite',
                  class_name: 'LiveEventOutputTranscriptionTrack'
                }
              }
            }
          }
        }
      end
    end
  end
end
