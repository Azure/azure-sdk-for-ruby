# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::MediaServices::Mgmt::V2018_06_01_preview
  module Models
    #
    # The PlayReady license
    #
    class ContentKeyPolicyPlayReadyLicense

      include MsRestAzure

      # @return [Boolean] A flag indicating whether test devices can use the
      # license.
      attr_accessor :allow_test_devices

      # @return [DateTime] The begin date of license
      attr_accessor :begin_date

      # @return [DateTime] The expiration date of license.
      attr_accessor :expiration_date

      # @return [Duration] The relative begin date of license.
      attr_accessor :relative_begin_date

      # @return [Duration] The relative expiration date of license.
      attr_accessor :relative_expiration_date

      # @return [Duration] The grace period of license.
      attr_accessor :grace_period

      # @return [ContentKeyPolicyPlayReadyPlayRight] The license PlayRight
      attr_accessor :play_right

      # @return [ContentKeyPolicyPlayReadyLicenseType] The license type.
      # Possible values include: 'Unknown', 'NonPersistent', 'Persistent'
      attr_accessor :license_type

      # @return [ContentKeyPolicyPlayReadyContentKeyLocation] The content key
      # location.
      attr_accessor :content_key_location

      # @return [ContentKeyPolicyPlayReadyContentType] The PlayReady content
      # type. Possible values include: 'Unknown', 'Unspecified',
      # 'UltraVioletDownload', 'UltraVioletStreaming'
      attr_accessor :content_type


      #
      # Mapper for ContentKeyPolicyPlayReadyLicense class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'ContentKeyPolicyPlayReadyLicense',
          type: {
            name: 'Composite',
            class_name: 'ContentKeyPolicyPlayReadyLicense',
            model_properties: {
              allow_test_devices: {
                required: true,
                serialized_name: 'allowTestDevices',
                type: {
                  name: 'Boolean'
                }
              },
              begin_date: {
                required: false,
                serialized_name: 'beginDate',
                type: {
                  name: 'DateTime'
                }
              },
              expiration_date: {
                required: false,
                serialized_name: 'expirationDate',
                type: {
                  name: 'DateTime'
                }
              },
              relative_begin_date: {
                required: false,
                serialized_name: 'relativeBeginDate',
                type: {
                  name: 'TimeSpan'
                }
              },
              relative_expiration_date: {
                required: false,
                serialized_name: 'relativeExpirationDate',
                type: {
                  name: 'TimeSpan'
                }
              },
              grace_period: {
                required: false,
                serialized_name: 'gracePeriod',
                type: {
                  name: 'TimeSpan'
                }
              },
              play_right: {
                required: false,
                serialized_name: 'playRight',
                type: {
                  name: 'Composite',
                  class_name: 'ContentKeyPolicyPlayReadyPlayRight'
                }
              },
              license_type: {
                required: true,
                serialized_name: 'licenseType',
                type: {
                  name: 'Enum',
                  module: 'ContentKeyPolicyPlayReadyLicenseType'
                }
              },
              content_key_location: {
                required: true,
                serialized_name: 'contentKeyLocation',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: '@odata.type',
                  uber_parent: 'ContentKeyPolicyPlayReadyContentKeyLocation',
                  class_name: 'ContentKeyPolicyPlayReadyContentKeyLocation'
                }
              },
              content_type: {
                required: true,
                serialized_name: 'contentType',
                type: {
                  name: 'Enum',
                  module: 'ContentKeyPolicyPlayReadyContentType'
                }
              }
            }
          }
        }
      end
    end
  end
end
