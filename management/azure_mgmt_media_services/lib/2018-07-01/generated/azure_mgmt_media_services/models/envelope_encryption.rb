# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::MediaServices::Mgmt::V2018_07_01
  module Models
    #
    # Class for EnvelopeEncryption encryption scheme
    #
    class EnvelopeEncryption

      include MsRestAzure

      # @return [EnabledProtocols] Representing supported protocols
      attr_accessor :enabled_protocols

      # @return [Array<TrackSelection>] Representing which tracks should not be
      # encrypted
      attr_accessor :clear_tracks

      # @return [StreamingPolicyContentKeys] Representing default content key
      # for each encryption scheme and separate content keys for specific
      # tracks
      attr_accessor :content_keys

      # @return [String] KeyAcquisitionUrlTemplate is used to point to user
      # specified service to delivery content keys
      attr_accessor :custom_key_acquisition_url_template


      #
      # Mapper for EnvelopeEncryption class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'EnvelopeEncryption',
          type: {
            name: 'Composite',
            class_name: 'EnvelopeEncryption',
            model_properties: {
              enabled_protocols: {
                required: false,
                serialized_name: 'enabledProtocols',
                type: {
                  name: 'Composite',
                  class_name: 'EnabledProtocols'
                }
              },
              clear_tracks: {
                required: false,
                serialized_name: 'clearTracks',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'TrackSelectionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'TrackSelection'
                      }
                  }
                }
              },
              content_keys: {
                required: false,
                serialized_name: 'contentKeys',
                type: {
                  name: 'Composite',
                  class_name: 'StreamingPolicyContentKeys'
                }
              },
              custom_key_acquisition_url_template: {
                required: false,
                serialized_name: 'customKeyAcquisitionUrlTemplate',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
