# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::MediaServices::Mgmt::V2018_07_01
  module Models
    #
    # Describes all the settings to be used when analyzing a video in order to
    # detect all the faces present.
    #
    class FaceDetectorPreset < Preset

      include MsRestAzure


      def initialize
        @odatatype = "#Microsoft.Media.FaceDetectorPreset"
      end

      attr_accessor :odatatype

      # @return [AnalysisResolution] Specifies the maximum resolution at which
      # your video is analyzed. The default behavior is "SourceResolution,"
      # which will keep the input video at its original resolution when
      # analyzed. Using "StandardDefinition" will resize input videos to
      # standard definition while preserving the appropriate aspect ratio. It
      # will only resize if the video is of higher resolution. For example, a
      # 1920x1080 input would be scaled to 640x360 before processing. Switching
      # to "StandardDefinition" will reduce the time it takes to process high
      # resolution video. It may also reduce the cost of using this component
      # (see
      # https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics
      # for details). However, faces that end up being too small in the resized
      # video may not be detected. Possible values include: 'SourceResolution',
      # 'StandardDefinition'
      attr_accessor :resolution

      # @return [Hash{String => String}] Dictionary containing key value pairs
      # for parameters not exposed in the preset itself
      attr_accessor :experimental_options


      #
      # Mapper for FaceDetectorPreset class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: '#Microsoft.Media.FaceDetectorPreset',
          type: {
            name: 'Composite',
            class_name: 'FaceDetectorPreset',
            model_properties: {
              odatatype: {
                client_side_validation: true,
                required: true,
                serialized_name: '@odata\\.type',
                type: {
                  name: 'String'
                }
              },
              resolution: {
                client_side_validation: true,
                required: false,
                serialized_name: 'resolution',
                type: {
                  name: 'String'
                }
              },
              experimental_options: {
                client_side_validation: true,
                required: false,
                serialized_name: 'experimentalOptions',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
