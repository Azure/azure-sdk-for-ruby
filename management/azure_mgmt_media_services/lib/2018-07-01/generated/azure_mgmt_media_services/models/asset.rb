# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::MediaServices::Mgmt::V2018_07_01
  module Models
    #
    # An Asset.
    #
    class Asset < ProxyResource

      include MsRestAzure

      # @return The Asset ID.
      attr_accessor :asset_id

      # @return [DateTime] The creation date of the Asset.
      attr_accessor :created

      # @return [DateTime] The last modified date of the Asset.
      attr_accessor :last_modified

      # @return [String] The alternate ID of the Asset.
      attr_accessor :alternate_id

      # @return [String] The Asset description.
      attr_accessor :description

      # @return [String] The name of the asset blob container.
      attr_accessor :container

      # @return [String] The name of the storage account.
      attr_accessor :storage_account_name

      # @return [AssetStorageEncryptionFormat] The Asset encryption format. One
      # of None or MediaStorageEncryption. Possible values include: 'None',
      # 'MediaStorageClientEncryption'
      attr_accessor :storage_encryption_format


      #
      # Mapper for Asset class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'Asset',
          type: {
            name: 'Composite',
            class_name: 'Asset',
            model_properties: {
              id: {
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              asset_id: {
                required: false,
                read_only: true,
                serialized_name: 'properties.assetId',
                type: {
                  name: 'String'
                }
              },
              created: {
                required: false,
                read_only: true,
                serialized_name: 'properties.created',
                type: {
                  name: 'DateTime'
                }
              },
              last_modified: {
                required: false,
                read_only: true,
                serialized_name: 'properties.lastModified',
                type: {
                  name: 'DateTime'
                }
              },
              alternate_id: {
                required: false,
                serialized_name: 'properties.alternateId',
                type: {
                  name: 'String'
                }
              },
              description: {
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              container: {
                required: false,
                serialized_name: 'properties.container',
                type: {
                  name: 'String'
                }
              },
              storage_account_name: {
                required: false,
                serialized_name: 'properties.storageAccountName',
                type: {
                  name: 'String'
                }
              },
              storage_encryption_format: {
                required: false,
                read_only: true,
                serialized_name: 'properties.storageEncryptionFormat',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
