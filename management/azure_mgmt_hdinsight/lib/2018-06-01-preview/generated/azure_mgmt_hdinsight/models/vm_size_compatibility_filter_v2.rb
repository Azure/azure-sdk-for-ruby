# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Hdinsight::Mgmt::V2018_06_01_preview
  module Models
    #
    # This class represent a single filter object that defines a
    # multidimensional set. The dimensions of this set are Regions,
    # ClusterFlavors, NodeTypes and ClusterVersions. The constraint should be
    # defined based on the following: FilterMode (Exclude vs Include), VMSizes
    # (the vm sizes in affect of exclusion/inclusion) and the ordering of the
    # Filters. Later filters override previous settings if conflicted.
    #
    class VmSizeCompatibilityFilterV2

      include MsRestAzure

      # @return [FilterMode] The filtering mode. Effectively this can enabling
      # or disabling the VM sizes in a particular set. Possible values include:
      # 'Exclude', 'Include', 'Recommend', 'Default'
      attr_accessor :filter_mode

      # @return [Array<String>] The list of regions under the effect of the
      # filter.
      attr_accessor :regions

      # @return [Array<String>] The list of cluster flavors under the effect of
      # the filter.
      attr_accessor :cluster_flavors

      # @return [Array<String>] The list of node types affected by the filter.
      attr_accessor :node_types

      # @return [Array<String>] The list of cluster versions affected in
      # Major.Minor format.
      attr_accessor :cluster_versions

      # @return [Array<OSType>] The OSType affected, Windows or Linux.
      attr_accessor :os_type

      # @return [Array<String>] The list of virtual machine sizes to include or
      # exclude.
      attr_accessor :vm_sizes


      #
      # Mapper for VmSizeCompatibilityFilterV2 class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'VmSizeCompatibilityFilterV2',
          type: {
            name: 'Composite',
            class_name: 'VmSizeCompatibilityFilterV2',
            model_properties: {
              filter_mode: {
                client_side_validation: true,
                required: false,
                serialized_name: 'filterMode',
                type: {
                  name: 'String'
                }
              },
              regions: {
                client_side_validation: true,
                required: false,
                serialized_name: 'regions',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              cluster_flavors: {
                client_side_validation: true,
                required: false,
                serialized_name: 'clusterFlavors',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              node_types: {
                client_side_validation: true,
                required: false,
                serialized_name: 'nodeTypes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              cluster_versions: {
                client_side_validation: true,
                required: false,
                serialized_name: 'clusterVersions',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              os_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'osType',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'OSTypeElementType',
                      type: {
                        name: 'Enum',
                        module: 'OSType'
                      }
                  }
                }
              },
              vm_sizes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'vmSizes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
