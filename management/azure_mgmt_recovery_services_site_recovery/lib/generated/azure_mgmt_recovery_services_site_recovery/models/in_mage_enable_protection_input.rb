# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::RecoveryServicesSiteRecovery
  module Models
    #
    # VMware Azure specific enable protection input.
    #
    class InMageEnableProtectionInput < EnableProtectionProviderSpecificInput

      include MsRestAzure


      def initialize
        @instanceType = "InMage"
      end

      attr_accessor :instanceType

      # @return [String] The Vm Name.
      attr_accessor :vm_friendly_name

      # @return [String] The Master Target Id.
      attr_accessor :master_target_id

      # @return [String] The Process Server Id.
      attr_accessor :process_server_id

      # @return [String] The retention drive to use on the MT.
      attr_accessor :retention_drive

      # @return [String] The CS account Id.
      attr_accessor :run_as_account_id

      # @return [String] The multi vm group Id.
      attr_accessor :multi_vm_group_id

      # @return [String] The multi vm group name.
      attr_accessor :multi_vm_group_name

      # @return [String] The target datastore name.
      attr_accessor :datastore_name

      # @return [InMageDiskExclusionInput] The enable disk exclusion input.
      attr_accessor :disk_exclusion_input

      # @return [Array<String>] The disks to include list.
      attr_accessor :disks_to_include


      #
      # Mapper for InMageEnableProtectionInput class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'InMage',
          type: {
            name: 'Composite',
            class_name: 'InMageEnableProtectionInput',
            model_properties: {
              instanceType: {
                required: true,
                serialized_name: 'instanceType',
                type: {
                  name: 'String'
                }
              },
              vm_friendly_name: {
                required: false,
                serialized_name: 'vmFriendlyName',
                type: {
                  name: 'String'
                }
              },
              master_target_id: {
                required: true,
                serialized_name: 'masterTargetId',
                type: {
                  name: 'String'
                }
              },
              process_server_id: {
                required: true,
                serialized_name: 'processServerId',
                type: {
                  name: 'String'
                }
              },
              retention_drive: {
                required: true,
                serialized_name: 'retentionDrive',
                type: {
                  name: 'String'
                }
              },
              run_as_account_id: {
                required: false,
                serialized_name: 'runAsAccountId',
                type: {
                  name: 'String'
                }
              },
              multi_vm_group_id: {
                required: true,
                serialized_name: 'multiVmGroupId',
                type: {
                  name: 'String'
                }
              },
              multi_vm_group_name: {
                required: true,
                serialized_name: 'multiVmGroupName',
                type: {
                  name: 'String'
                }
              },
              datastore_name: {
                required: false,
                serialized_name: 'datastoreName',
                type: {
                  name: 'String'
                }
              },
              disk_exclusion_input: {
                required: false,
                serialized_name: 'diskExclusionInput',
                type: {
                  name: 'Composite',
                  class_name: 'InMageDiskExclusionInput'
                }
              },
              disks_to_include: {
                required: false,
                serialized_name: 'disksToInclude',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
