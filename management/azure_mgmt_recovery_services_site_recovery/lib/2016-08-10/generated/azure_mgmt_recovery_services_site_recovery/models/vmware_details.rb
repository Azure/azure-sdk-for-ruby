# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::RecoveryServicesSiteRecovery::Mgmt::V2016_08_10
  module Models
    #
    # Store the fabric details specific to the VMware fabric.
    #
    class VMwareDetails < FabricSpecificDetails

      include MsRestAzure


      def initialize
        @instanceType = "VMware"
      end

      attr_accessor :instanceType

      # @return [Array<ProcessServer>] The list of Process Servers associated
      # with the fabric.
      attr_accessor :process_servers

      # @return [Array<MasterTargetServer>] The list of Master Target servers
      # associated with the fabric.
      attr_accessor :master_target_servers

      # @return [Array<RunAsAccount>] The list of run as accounts created on
      # the server.
      attr_accessor :run_as_accounts

      # @return [String] The number of replication pairs configured in this CS.
      attr_accessor :replication_pair_count

      # @return [String] The number of process servers.
      attr_accessor :process_server_count

      # @return [String] The number of source and target servers configured to
      # talk to this CS.
      attr_accessor :agent_count

      # @return [String] The number of protected servers.
      attr_accessor :protected_servers

      # @return [String] The percentage of the system load.
      attr_accessor :system_load

      # @return [String] The system load status.
      attr_accessor :system_load_status

      # @return [String] The percentage of the CPU load.
      attr_accessor :cpu_load

      # @return [String] The CPU load status.
      attr_accessor :cpu_load_status

      # @return [Integer] The total memory.
      attr_accessor :total_memory_in_bytes

      # @return [Integer] The available memory.
      attr_accessor :available_memory_in_bytes

      # @return [String] The memory usage status.
      attr_accessor :memory_usage_status

      # @return [Integer] The total space.
      attr_accessor :total_space_in_bytes

      # @return [Integer] The available space.
      attr_accessor :available_space_in_bytes

      # @return [String] The space usage status.
      attr_accessor :space_usage_status

      # @return [String] The web load.
      attr_accessor :web_load

      # @return [String] The web load status.
      attr_accessor :web_load_status

      # @return [String] The database server load.
      attr_accessor :database_server_load

      # @return [String] The database server load status.
      attr_accessor :database_server_load_status

      # @return [String] The CS service status.
      attr_accessor :cs_service_status

      # @return [String] The IP address.
      attr_accessor :ip_address

      # @return [String] The agent Version.
      attr_accessor :agent_version

      # @return [String] The host name.
      attr_accessor :host_name

      # @return [DateTime] The last heartbeat received from CS server.
      attr_accessor :last_heartbeat

      # @return [String] Version status
      attr_accessor :version_status

      # @return [DateTime] CS SSL cert expiry date.
      attr_accessor :ssl_cert_expiry_date

      # @return [Integer] CS SSL cert expiry date.
      attr_accessor :ssl_cert_expiry_remaining_days

      # @return [String] PS template version.
      attr_accessor :ps_template_version


      #
      # Mapper for VMwareDetails class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'VMware',
          type: {
            name: 'Composite',
            class_name: 'VMwareDetails',
            model_properties: {
              instanceType: {
                required: true,
                serialized_name: 'instanceType',
                type: {
                  name: 'String'
                }
              },
              process_servers: {
                required: false,
                serialized_name: 'processServers',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'ProcessServerElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ProcessServer'
                      }
                  }
                }
              },
              master_target_servers: {
                required: false,
                serialized_name: 'masterTargetServers',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'MasterTargetServerElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MasterTargetServer'
                      }
                  }
                }
              },
              run_as_accounts: {
                required: false,
                serialized_name: 'runAsAccounts',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'RunAsAccountElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'RunAsAccount'
                      }
                  }
                }
              },
              replication_pair_count: {
                required: false,
                serialized_name: 'replicationPairCount',
                type: {
                  name: 'String'
                }
              },
              process_server_count: {
                required: false,
                serialized_name: 'processServerCount',
                type: {
                  name: 'String'
                }
              },
              agent_count: {
                required: false,
                serialized_name: 'agentCount',
                type: {
                  name: 'String'
                }
              },
              protected_servers: {
                required: false,
                serialized_name: 'protectedServers',
                type: {
                  name: 'String'
                }
              },
              system_load: {
                required: false,
                serialized_name: 'systemLoad',
                type: {
                  name: 'String'
                }
              },
              system_load_status: {
                required: false,
                serialized_name: 'systemLoadStatus',
                type: {
                  name: 'String'
                }
              },
              cpu_load: {
                required: false,
                serialized_name: 'cpuLoad',
                type: {
                  name: 'String'
                }
              },
              cpu_load_status: {
                required: false,
                serialized_name: 'cpuLoadStatus',
                type: {
                  name: 'String'
                }
              },
              total_memory_in_bytes: {
                required: false,
                serialized_name: 'totalMemoryInBytes',
                type: {
                  name: 'Number'
                }
              },
              available_memory_in_bytes: {
                required: false,
                serialized_name: 'availableMemoryInBytes',
                type: {
                  name: 'Number'
                }
              },
              memory_usage_status: {
                required: false,
                serialized_name: 'memoryUsageStatus',
                type: {
                  name: 'String'
                }
              },
              total_space_in_bytes: {
                required: false,
                serialized_name: 'totalSpaceInBytes',
                type: {
                  name: 'Number'
                }
              },
              available_space_in_bytes: {
                required: false,
                serialized_name: 'availableSpaceInBytes',
                type: {
                  name: 'Number'
                }
              },
              space_usage_status: {
                required: false,
                serialized_name: 'spaceUsageStatus',
                type: {
                  name: 'String'
                }
              },
              web_load: {
                required: false,
                serialized_name: 'webLoad',
                type: {
                  name: 'String'
                }
              },
              web_load_status: {
                required: false,
                serialized_name: 'webLoadStatus',
                type: {
                  name: 'String'
                }
              },
              database_server_load: {
                required: false,
                serialized_name: 'databaseServerLoad',
                type: {
                  name: 'String'
                }
              },
              database_server_load_status: {
                required: false,
                serialized_name: 'databaseServerLoadStatus',
                type: {
                  name: 'String'
                }
              },
              cs_service_status: {
                required: false,
                serialized_name: 'csServiceStatus',
                type: {
                  name: 'String'
                }
              },
              ip_address: {
                required: false,
                serialized_name: 'ipAddress',
                type: {
                  name: 'String'
                }
              },
              agent_version: {
                required: false,
                serialized_name: 'agentVersion',
                type: {
                  name: 'String'
                }
              },
              host_name: {
                required: false,
                serialized_name: 'hostName',
                type: {
                  name: 'String'
                }
              },
              last_heartbeat: {
                required: false,
                serialized_name: 'lastHeartbeat',
                type: {
                  name: 'DateTime'
                }
              },
              version_status: {
                required: false,
                serialized_name: 'versionStatus',
                type: {
                  name: 'String'
                }
              },
              ssl_cert_expiry_date: {
                required: false,
                serialized_name: 'sslCertExpiryDate',
                type: {
                  name: 'DateTime'
                }
              },
              ssl_cert_expiry_remaining_days: {
                required: false,
                serialized_name: 'sslCertExpiryRemainingDays',
                type: {
                  name: 'Number'
                }
              },
              ps_template_version: {
                required: false,
                serialized_name: 'psTemplateVersion',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
