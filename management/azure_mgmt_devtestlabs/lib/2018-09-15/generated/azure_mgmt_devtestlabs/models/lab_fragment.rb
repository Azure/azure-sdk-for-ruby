# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DevTestLabs::Mgmt::V2018_09_15
  module Models
    #
    # A lab.
    #
    class LabFragment < UpdateResource

      include MsRestAzure

      # @return [StorageType] Type of storage used by the lab. It can be either
      # Premium or Standard. Default is Premium. Possible values include:
      # 'Standard', 'Premium'
      attr_accessor :lab_storage_type

      # @return [Array<String>] The ordered list of artifact resource IDs that
      # should be applied on all Linux VM creations by default, prior to the
      # artifacts specified by the user.
      attr_accessor :mandatory_artifacts_resource_ids_linux

      # @return [Array<String>] The ordered list of artifact resource IDs that
      # should be applied on all Windows VM creations by default, prior to the
      # artifacts specified by the user.
      attr_accessor :mandatory_artifacts_resource_ids_windows

      # @return [PremiumDataDisk] The setting to enable usage of premium data
      # disks.
      # When its value is 'Enabled', creation of standard or premium data disks
      # is allowed.
      # When its value is 'Disabled', only creation of standard data disks is
      # allowed. Possible values include: 'Disabled', 'Enabled'
      attr_accessor :premium_data_disks

      # @return [EnvironmentPermission] The access rights to be granted to the
      # user when provisioning an environment. Possible values include:
      # 'Reader', 'Contributor'
      attr_accessor :environment_permission

      # @return [LabAnnouncementPropertiesFragment] The properties of any lab
      # announcement associated with this lab
      attr_accessor :announcement

      # @return [LabSupportPropertiesFragment] The properties of any lab
      # support message associated with this lab
      attr_accessor :support

      # @return [Hash{String => String}] Extended properties of the lab used
      # for experimental features
      attr_accessor :extended_properties


      #
      # Mapper for LabFragment class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'LabFragment',
          type: {
            name: 'Composite',
            class_name: 'LabFragment',
            model_properties: {
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              lab_storage_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.labStorageType',
                type: {
                  name: 'String'
                }
              },
              mandatory_artifacts_resource_ids_linux: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.mandatoryArtifactsResourceIdsLinux',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              mandatory_artifacts_resource_ids_windows: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.mandatoryArtifactsResourceIdsWindows',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              premium_data_disks: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.premiumDataDisks',
                type: {
                  name: 'String'
                }
              },
              environment_permission: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.environmentPermission',
                type: {
                  name: 'String'
                }
              },
              announcement: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.announcement',
                type: {
                  name: 'Composite',
                  class_name: 'LabAnnouncementPropertiesFragment'
                }
              },
              support: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.support',
                type: {
                  name: 'Composite',
                  class_name: 'LabSupportPropertiesFragment'
                }
              },
              extended_properties: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.extendedProperties',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
