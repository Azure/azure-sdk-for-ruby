# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DevTestLabs::Mgmt::V2018_09_15
  module Models
    #
    # A Policy.
    #
    class PolicyFragment < UpdateResource

      include MsRestAzure

      # @return [String] The description of the policy.
      attr_accessor :description

      # @return [PolicyStatus] The status of the policy. Possible values
      # include: 'Enabled', 'Disabled'
      attr_accessor :status

      # @return [PolicyFactName] The fact name of the policy (e.g. LabVmCount,
      # LabVmSize, MaxVmsAllowedPerLab, etc. Possible values include:
      # 'UserOwnedLabVmCount', 'UserOwnedLabPremiumVmCount', 'LabVmCount',
      # 'LabPremiumVmCount', 'LabVmSize', 'GalleryImage',
      # 'UserOwnedLabVmCountInSubnet', 'LabTargetCost', 'EnvironmentTemplate',
      # 'ScheduleEditPermission'
      attr_accessor :fact_name

      # @return [String] The fact data of the policy.
      attr_accessor :fact_data

      # @return [String] The threshold of the policy (i.e. a number for
      # MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
      attr_accessor :threshold

      # @return [PolicyEvaluatorType] The evaluator type of the policy (i.e.
      # AllowedValuesPolicy, MaxValuePolicy). Possible values include:
      # 'AllowedValuesPolicy', 'MaxValuePolicy'
      attr_accessor :evaluator_type


      #
      # Mapper for PolicyFragment class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'PolicyFragment',
          type: {
            name: 'Composite',
            class_name: 'PolicyFragment',
            model_properties: {
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.status',
                type: {
                  name: 'String'
                }
              },
              fact_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.factName',
                type: {
                  name: 'String'
                }
              },
              fact_data: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.factData',
                type: {
                  name: 'String'
                }
              },
              threshold: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.threshold',
                type: {
                  name: 'String'
                }
              },
              evaluator_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.evaluatorType',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
