# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DevTestLabs::Mgmt::V2018_09_15
  module Models
    #
    # A notification.
    #
    class NotificationChannelFragment < UpdateResource

      include MsRestAzure

      # @return [String] The webhook URL to send notifications to.
      attr_accessor :web_hook_url

      # @return [String] The email recipient to send notifications to (can be a
      # list of semi-colon separated email addresses).
      attr_accessor :email_recipient

      # @return [String] The locale to use when sending a notification
      # (fallback for unsupported languages is EN).
      attr_accessor :notification_locale

      # @return [String] Description of notification.
      attr_accessor :description

      # @return [Array<EventFragment>] The list of event for which this
      # notification is enabled.
      attr_accessor :events


      #
      # Mapper for NotificationChannelFragment class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'NotificationChannelFragment',
          type: {
            name: 'Composite',
            class_name: 'NotificationChannelFragment',
            model_properties: {
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              web_hook_url: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.webHookUrl',
                type: {
                  name: 'String'
                }
              },
              email_recipient: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.emailRecipient',
                type: {
                  name: 'String'
                }
              },
              notification_locale: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.notificationLocale',
                type: {
                  name: 'String'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              events: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.events',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'EventFragmentElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'EventFragment'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
