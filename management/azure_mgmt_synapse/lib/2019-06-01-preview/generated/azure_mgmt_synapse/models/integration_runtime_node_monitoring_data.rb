# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Synapse::Mgmt::V2019_06_01_preview
  module Models
    #
    # Monitoring data for integration runtime node.
    #
    class IntegrationRuntimeNodeMonitoringData

      include MsRestAzure

      # @return Unmatched properties from the message are deserialized this
      # collection
      attr_accessor :additional_properties

      # @return [String] Name of the integration runtime node.
      attr_accessor :node_name

      # @return [Integer] Available memory (MB) on the integration runtime
      # node.
      attr_accessor :available_memory_in_mb

      # @return [Integer] CPU percentage on the integration runtime node.
      attr_accessor :cpu_utilization

      # @return [Integer] Maximum concurrent jobs on the integration runtime
      # node.
      attr_accessor :concurrent_jobs_limit

      # @return [Integer] The number of jobs currently running on the
      # integration runtime node.
      attr_accessor :concurrent_jobs_running

      # @return [Integer] The maximum concurrent jobs in this integration
      # runtime.
      attr_accessor :max_concurrent_jobs

      # @return [Float] Sent bytes on the integration runtime node.
      attr_accessor :sent_bytes

      # @return [Float] Received bytes on the integration runtime node.
      attr_accessor :received_bytes


      #
      # Mapper for IntegrationRuntimeNodeMonitoringData class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'IntegrationRuntimeNodeMonitoringData',
          type: {
            name: 'Composite',
            class_name: 'IntegrationRuntimeNodeMonitoringData',
            model_properties: {
              additional_properties: {
                client_side_validation: true,
                required: false,
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              node_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'nodeName',
                type: {
                  name: 'String'
                }
              },
              available_memory_in_mb: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'availableMemoryInMB',
                type: {
                  name: 'Number'
                }
              },
              cpu_utilization: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'cpuUtilization',
                type: {
                  name: 'Number'
                }
              },
              concurrent_jobs_limit: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'concurrentJobsLimit',
                type: {
                  name: 'Number'
                }
              },
              concurrent_jobs_running: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'concurrentJobsRunning',
                type: {
                  name: 'Number'
                }
              },
              max_concurrent_jobs: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'maxConcurrentJobs',
                type: {
                  name: 'Number'
                }
              },
              sent_bytes: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'sentBytes',
                type: {
                  name: 'Double'
                }
              },
              received_bytes: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'receivedBytes',
                type: {
                  name: 'Double'
                }
              }
            }
          }
        }
      end
    end
  end
end
