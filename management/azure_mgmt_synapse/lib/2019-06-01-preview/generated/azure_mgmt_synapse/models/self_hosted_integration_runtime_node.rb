# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Synapse::Mgmt::V2019_06_01_preview
  module Models
    #
    # Properties of Self-hosted integration runtime node.
    #
    class SelfHostedIntegrationRuntimeNode

      include MsRestAzure

      # @return [String] Name of the integration runtime node.
      attr_accessor :node_name

      # @return [String] Machine name of the integration runtime node.
      attr_accessor :machine_name

      # @return [String] URI for the host machine of the integration runtime.
      attr_accessor :host_service_uri

      # @return [SelfHostedIntegrationRuntimeNodeStatus] Status of the
      # integration runtime node. Possible values include: 'NeedRegistration',
      # 'Online', 'Limited', 'Offline', 'Upgrading', 'Initializing',
      # 'InitializeFailed'
      attr_accessor :status

      # @return [Hash{String => String}] The integration runtime capabilities
      # dictionary
      attr_accessor :capabilities

      # @return [String] Status of the integration runtime node version.
      attr_accessor :version_status

      # @return [String] Version of the integration runtime node.
      attr_accessor :version

      # @return [DateTime] The time at which the integration runtime node was
      # registered in ISO8601 format.
      attr_accessor :register_time

      # @return [DateTime] The most recent time at which the integration
      # runtime was connected in ISO8601 format.
      attr_accessor :last_connect_time

      # @return [DateTime] The time at which the integration runtime will
      # expire in ISO8601 format.
      attr_accessor :expiry_time

      # @return [DateTime] The time the node last started up.
      attr_accessor :last_start_time

      # @return [DateTime] The integration runtime node last stop time.
      attr_accessor :last_stop_time

      # @return [IntegrationRuntimeUpdateResult] The result of the last
      # integration runtime node update. Possible values include: 'None',
      # 'Succeed', 'Fail'
      attr_accessor :last_update_result

      # @return [DateTime] The last time for the integration runtime node
      # update start.
      attr_accessor :last_start_update_time

      # @return [DateTime] The last time for the integration runtime node
      # update end.
      attr_accessor :last_end_update_time

      # @return [Boolean] Indicates whether this node is the active dispatcher
      # for integration runtime requests.
      attr_accessor :is_active_dispatcher

      # @return [Integer] Maximum concurrent jobs on the integration runtime
      # node.
      attr_accessor :concurrent_jobs_limit

      # @return [Integer] The maximum concurrent jobs in this integration
      # runtime.
      attr_accessor :max_concurrent_jobs


      #
      # Mapper for SelfHostedIntegrationRuntimeNode class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'SelfHostedIntegrationRuntimeNode',
          type: {
            name: 'Composite',
            class_name: 'SelfHostedIntegrationRuntimeNode',
            model_properties: {
              node_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'nodeName',
                type: {
                  name: 'String'
                }
              },
              machine_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'machineName',
                type: {
                  name: 'String'
                }
              },
              host_service_uri: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'hostServiceUri',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'status',
                type: {
                  name: 'String'
                }
              },
              capabilities: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'capabilities',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              version_status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'versionStatus',
                type: {
                  name: 'String'
                }
              },
              version: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'version',
                type: {
                  name: 'String'
                }
              },
              register_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'registerTime',
                type: {
                  name: 'DateTime'
                }
              },
              last_connect_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'lastConnectTime',
                type: {
                  name: 'DateTime'
                }
              },
              expiry_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'expiryTime',
                type: {
                  name: 'DateTime'
                }
              },
              last_start_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'lastStartTime',
                type: {
                  name: 'DateTime'
                }
              },
              last_stop_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'lastStopTime',
                type: {
                  name: 'DateTime'
                }
              },
              last_update_result: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'lastUpdateResult',
                type: {
                  name: 'String'
                }
              },
              last_start_update_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'lastStartUpdateTime',
                type: {
                  name: 'DateTime'
                }
              },
              last_end_update_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'lastEndUpdateTime',
                type: {
                  name: 'DateTime'
                }
              },
              is_active_dispatcher: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'isActiveDispatcher',
                type: {
                  name: 'Boolean'
                }
              },
              concurrent_jobs_limit: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'concurrentJobsLimit',
                type: {
                  name: 'Number'
                }
              },
              max_concurrent_jobs: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'maxConcurrentJobs',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
