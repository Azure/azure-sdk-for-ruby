# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Synapse::Mgmt::V2019_06_01_preview
  module Models
    #
    # A vulnerability assessment scan record.
    #
    class VulnerabilityAssessmentScanRecord < ProxyResource

      include MsRestAzure

      # @return [String] The scan ID.
      attr_accessor :scan_id

      # @return [VulnerabilityAssessmentScanTriggerType] The scan trigger type.
      # Possible values include: 'OnDemand', 'Recurring'
      attr_accessor :trigger_type

      # @return [VulnerabilityAssessmentScanState] The scan status. Possible
      # values include: 'Passed', 'Failed', 'FailedToRun', 'InProgress'
      attr_accessor :state

      # @return [DateTime] The scan start time (UTC).
      attr_accessor :start_time

      # @return [DateTime] The scan end time (UTC).
      attr_accessor :end_time

      # @return [Array<VulnerabilityAssessmentScanError>] The scan errors.
      attr_accessor :errors

      # @return [String] The scan results storage container path.
      attr_accessor :storage_container_path

      # @return [Integer] The number of failed security checks.
      attr_accessor :number_of_failed_security_checks


      #
      # Mapper for VulnerabilityAssessmentScanRecord class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'VulnerabilityAssessmentScanRecord',
          type: {
            name: 'Composite',
            class_name: 'VulnerabilityAssessmentScanRecord',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              scan_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.scanId',
                type: {
                  name: 'String'
                }
              },
              trigger_type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.triggerType',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.state',
                type: {
                  name: 'String'
                }
              },
              start_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.startTime',
                type: {
                  name: 'DateTime'
                }
              },
              end_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.endTime',
                type: {
                  name: 'DateTime'
                }
              },
              errors: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.errors',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'VulnerabilityAssessmentScanErrorElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'VulnerabilityAssessmentScanError'
                      }
                  }
                }
              },
              storage_container_path: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.storageContainerPath',
                type: {
                  name: 'String'
                }
              },
              number_of_failed_security_checks: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.numberOfFailedSecurityChecks',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
