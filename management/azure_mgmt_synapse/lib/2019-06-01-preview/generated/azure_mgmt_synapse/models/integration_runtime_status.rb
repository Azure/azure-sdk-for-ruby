# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Synapse::Mgmt::V2019_06_01_preview
  module Models
    #
    # Integration runtime status.
    #
    class IntegrationRuntimeStatus

      include MsRestAzure

      @@discriminatorMap = Hash.new
      @@discriminatorMap["Managed"] = "ManagedIntegrationRuntimeStatus"
      @@discriminatorMap["SelfHosted"] = "SelfHostedIntegrationRuntimeStatus"

      def initialize
        @type = "IntegrationRuntimeStatus"
      end

      attr_accessor :type

      # @return Unmatched properties from the message are deserialized this
      # collection
      attr_accessor :additional_properties

      # @return [String] The workspace name which the integration runtime
      # belong to.
      attr_accessor :data_factory_name

      # @return [IntegrationRuntimeState] The state of integration runtime.
      # Possible values include: 'Initial', 'Stopped', 'Started', 'Starting',
      # 'Stopping', 'NeedRegistration', 'Online', 'Limited', 'Offline',
      # 'AccessDenied'
      attr_accessor :state


      #
      # Mapper for IntegrationRuntimeStatus class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'IntegrationRuntimeStatus',
          type: {
            name: 'Composite',
            polymorphic_discriminator: 'type',
            uber_parent: 'IntegrationRuntimeStatus',
            class_name: 'IntegrationRuntimeStatus',
            model_properties: {
              additional_properties: {
                client_side_validation: true,
                required: false,
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              data_factory_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'dataFactoryName',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'state',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
