# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Monitor::Mgmt::V2016_03_01
  module Models
    #
    # The log profile resource.
    #
    class LogProfileResource < Resource

      include MsRestAzure

      include MsRest::JSONable
      # @return [String] the resource id of the storage account to which you
      # would like to send the Activity Log.
      attr_accessor :storage_account_id

      # @return [String] The service bus rule ID of the service bus namespace
      # in which you would like to have Event Hubs created for streaming the
      # Activity Log. The rule ID is of the format: '{service bus resource
      # ID}/authorizationrules/{key name}'.
      attr_accessor :service_bus_rule_id

      # @return [Array<String>] List of regions for which Activity Log events
      # should be stored or streamed. It is a comma separated list of valid ARM
      # locations including the 'global' location.
      attr_accessor :locations

      # @return [Array<String>] the categories of the logs. These categories
      # are created as is convenient to the user. Some values are: 'Write',
      # 'Delete', and/or 'Action.'
      attr_accessor :categories

      # @return [RetentionPolicy] the retention policy for the events in the
      # log.
      attr_accessor :retention_policy


      #
      # Mapper for LogProfileResource class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'LogProfileResource',
          type: {
            name: 'Composite',
            class_name: 'LogProfileResource',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              location: {
                client_side_validation: true,
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              storage_account_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.storageAccountId',
                type: {
                  name: 'String'
                }
              },
              service_bus_rule_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.serviceBusRuleId',
                type: {
                  name: 'String'
                }
              },
              locations: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.locations',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              categories: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.categories',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              retention_policy: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.retentionPolicy',
                type: {
                  name: 'Composite',
                  class_name: 'RetentionPolicy'
                }
              }
            }
          }
        }
      end
    end
  end
end
