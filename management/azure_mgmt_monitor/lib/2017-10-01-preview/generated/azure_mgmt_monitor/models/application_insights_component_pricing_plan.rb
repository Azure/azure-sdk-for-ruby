# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Monitor::Mgmt::V2017_10_01_preview
  module Models
    #
    # An Application Insights component pricing plan
    #
    class ApplicationInsightsComponentPricingPlan < Resource

      include MsRestAzure

      # @return [String] Pricing Plan Type Name.
      attr_accessor :plan_type

      # @return [Float] Daily data volume cap in GB.
      attr_accessor :cap

      # @return [Integer] Daily data volume cap UTC reset hour.
      attr_accessor :reset_hour

      # @return [Integer] Reserved, not used for now.
      attr_accessor :warning_threshold

      # @return [Boolean] Reserved, not used for now.
      attr_accessor :stop_send_notification_when_hit_threshold

      # @return [Boolean] Do not send a notification email when the daily data
      # volume cap is met.
      attr_accessor :stop_send_notification_when_hit_cap

      # @return [Float] Maximum daily data volume cap that the user can set for
      # this component.
      attr_accessor :max_history_cap


      #
      # Mapper for ApplicationInsightsComponentPricingPlan class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ApplicationInsightsComponentPricingPlan',
          type: {
            name: 'Composite',
            class_name: 'ApplicationInsightsComponentPricingPlan',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              plan_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.planType',
                type: {
                  name: 'String'
                }
              },
              cap: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.cap',
                type: {
                  name: 'Double'
                }
              },
              reset_hour: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.resetHour',
                type: {
                  name: 'Number'
                }
              },
              warning_threshold: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.warningThreshold',
                type: {
                  name: 'Number'
                }
              },
              stop_send_notification_when_hit_threshold: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.stopSendNotificationWhenHitThreshold',
                type: {
                  name: 'Boolean'
                }
              },
              stop_send_notification_when_hit_cap: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.stopSendNotificationWhenHitCap',
                type: {
                  name: 'Boolean'
                }
              },
              max_history_cap: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.maxHistoryCap',
                type: {
                  name: 'Double'
                }
              }
            }
          }
        }
      end
    end
  end
end
