# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Monitor::Mgmt::V2018_04_16
  module Models
    #
    # The Log Search Rule resource.
    #
    class LogSearchRuleResource < Resource

      include MsRestAzure

      # @return [String] The description of the Log Search rule.
      attr_accessor :description

      # @return [Enabled] The flag which indicates whether the Log Search rule
      # is enabled. Value should be true or false. Possible values include:
      # 'true', 'false'
      attr_accessor :enabled

      # @return [DateTime] Last time the rule was updated in IS08601 format.
      attr_accessor :last_updated_time

      # @return [ProvisioningState] Provisioning state of the scheduledquery
      # rule. Possible values include: 'Succeeded', 'Deploying', 'Canceled',
      # 'Failed'
      attr_accessor :provisioning_state

      # @return [Source] Data Source against which rule will Query Data
      attr_accessor :source

      # @return [Schedule] Schedule (Frequnecy, Time Window) for rule.
      attr_accessor :schedule

      # @return [Action] Action needs to be taken on rule execution.
      attr_accessor :action


      #
      # Mapper for LogSearchRuleResource class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'LogSearchRuleResource',
          type: {
            name: 'Composite',
            class_name: 'LogSearchRuleResource',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              location: {
                client_side_validation: true,
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              enabled: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.enabled',
                type: {
                  name: 'String'
                }
              },
              last_updated_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.lastUpdatedTime',
                type: {
                  name: 'DateTime'
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              source: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.source',
                type: {
                  name: 'Composite',
                  class_name: 'Source'
                }
              },
              schedule: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.schedule',
                type: {
                  name: 'Composite',
                  class_name: 'Schedule'
                }
              },
              action: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.action',
                type: {
                  name: 'Composite',
                  polymorphic_discriminator: 'odata.type',
                  uber_parent: 'Action',
                  class_name: 'Action'
                }
              }
            }
          }
        }
      end
    end
  end
end
