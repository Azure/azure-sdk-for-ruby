# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Monitor::Mgmt::V2015_05_01
  module Models
    #
    # An Application Insights component feature capabilities
    #
    class ApplicationInsightsComponentFeatureCapabilities

      include MsRestAzure

      # @return [Boolean] Whether allow to use continuous export feature.
      attr_accessor :support_export_data

      # @return [String] Reserved, not used now.
      attr_accessor :burst_throttle_policy

      # @return [String] Reserved, not used now.
      attr_accessor :metadata_class

      # @return [Boolean] Reserved, not used now.
      attr_accessor :live_stream_metrics

      # @return [Boolean] Reserved, not used now.
      attr_accessor :application_map

      # @return [Boolean] Whether allow to use work item integration feature.
      attr_accessor :work_item_integration

      # @return [Boolean] Reserved, not used now.
      attr_accessor :power_biintegration

      # @return [Boolean] Reserved, not used now.
      attr_accessor :open_schema

      # @return [Boolean] Reserved, not used now.
      attr_accessor :proactive_detection

      # @return [Boolean] Reserved, not used now.
      attr_accessor :analytics_integration

      # @return [Boolean] Whether allow to use multiple steps web test feature.
      attr_accessor :multiple_step_web_test

      # @return [String] Reserved, not used now.
      attr_accessor :api_access_level

      # @return [String] The application insights component used tracking type.
      attr_accessor :tracking_type

      # @return [Float] Daily data volume cap in GB.
      attr_accessor :daily_cap

      # @return [Float] Daily data volume cap UTC reset hour.
      attr_accessor :daily_cap_reset_time

      # @return [Float] Reserved, not used now.
      attr_accessor :throttle_rate


      #
      # Mapper for ApplicationInsightsComponentFeatureCapabilities class as
      # Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ApplicationInsightsComponentFeatureCapabilities',
          type: {
            name: 'Composite',
            class_name: 'ApplicationInsightsComponentFeatureCapabilities',
            model_properties: {
              support_export_data: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'SupportExportData',
                type: {
                  name: 'Boolean'
                }
              },
              burst_throttle_policy: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'BurstThrottlePolicy',
                type: {
                  name: 'String'
                }
              },
              metadata_class: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'MetadataClass',
                type: {
                  name: 'String'
                }
              },
              live_stream_metrics: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'LiveStreamMetrics',
                type: {
                  name: 'Boolean'
                }
              },
              application_map: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'ApplicationMap',
                type: {
                  name: 'Boolean'
                }
              },
              work_item_integration: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'WorkItemIntegration',
                type: {
                  name: 'Boolean'
                }
              },
              power_biintegration: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'PowerBIIntegration',
                type: {
                  name: 'Boolean'
                }
              },
              open_schema: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'OpenSchema',
                type: {
                  name: 'Boolean'
                }
              },
              proactive_detection: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'ProactiveDetection',
                type: {
                  name: 'Boolean'
                }
              },
              analytics_integration: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'AnalyticsIntegration',
                type: {
                  name: 'Boolean'
                }
              },
              multiple_step_web_test: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'MultipleStepWebTest',
                type: {
                  name: 'Boolean'
                }
              },
              api_access_level: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'ApiAccessLevel',
                type: {
                  name: 'String'
                }
              },
              tracking_type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'TrackingType',
                type: {
                  name: 'String'
                }
              },
              daily_cap: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'DailyCap',
                type: {
                  name: 'Double'
                }
              },
              daily_cap_reset_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'DailyCapResetTime',
                type: {
                  name: 'Double'
                }
              },
              throttle_rate: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'ThrottleRate',
                type: {
                  name: 'Double'
                }
              }
            }
          }
        }
      end
    end
  end
end
