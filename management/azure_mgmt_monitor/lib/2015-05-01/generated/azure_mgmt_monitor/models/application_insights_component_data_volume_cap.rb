# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Monitor::Mgmt::V2015_05_01
  module Models
    #
    # An Application Insights component daily data volume cap
    #
    class ApplicationInsightsComponentDataVolumeCap

      include MsRestAzure

      # @return [Float] Daily data volume cap in GB.
      attr_accessor :cap

      # @return [Integer] Daily data volume cap UTC reset hour.
      attr_accessor :reset_time

      # @return [Integer] Reserved, not used for now.
      attr_accessor :warning_threshold

      # @return [Boolean] Reserved, not used for now.
      attr_accessor :stop_send_notification_when_hit_threshold

      # @return [Boolean] Do not send a notification email when the daily data
      # volume cap is met.
      attr_accessor :stop_send_notification_when_hit_cap

      # @return [Float] Maximum daily data volume cap that the user can set for
      # this component.
      attr_accessor :max_history_cap


      #
      # Mapper for ApplicationInsightsComponentDataVolumeCap class as Ruby
      # Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ApplicationInsightsComponentDataVolumeCap',
          type: {
            name: 'Composite',
            class_name: 'ApplicationInsightsComponentDataVolumeCap',
            model_properties: {
              cap: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Cap',
                type: {
                  name: 'Double'
                }
              },
              reset_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'ResetTime',
                type: {
                  name: 'Number'
                }
              },
              warning_threshold: {
                client_side_validation: true,
                required: false,
                serialized_name: 'WarningThreshold',
                type: {
                  name: 'Number'
                }
              },
              stop_send_notification_when_hit_threshold: {
                client_side_validation: true,
                required: false,
                serialized_name: 'StopSendNotificationWhenHitThreshold',
                type: {
                  name: 'Boolean'
                }
              },
              stop_send_notification_when_hit_cap: {
                client_side_validation: true,
                required: false,
                serialized_name: 'StopSendNotificationWhenHitCap',
                type: {
                  name: 'Boolean'
                }
              },
              max_history_cap: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'MaxHistoryCap',
                type: {
                  name: 'Double'
                }
              }
            }
          }
        }
      end
    end
  end
end
