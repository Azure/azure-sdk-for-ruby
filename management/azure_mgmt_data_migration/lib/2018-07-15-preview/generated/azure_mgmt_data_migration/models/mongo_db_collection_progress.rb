# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataMigration::Mgmt::V2018_07_15_preview
  module Models
    #
    # Describes the progress of a collection
    #
    class MongoDbCollectionProgress < MongoDbProgress

      include MsRestAzure


      #
      # Mapper for MongoDbCollectionProgress class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Collection',
          type: {
            name: 'Composite',
            class_name: 'MongoDbCollectionProgress',
            model_properties: {
              bytes_copied: {
                client_side_validation: true,
                required: true,
                serialized_name: 'bytesCopied',
                type: {
                  name: 'Number'
                }
              },
              documents_copied: {
                client_side_validation: true,
                required: true,
                serialized_name: 'documentsCopied',
                type: {
                  name: 'Number'
                }
              },
              elapsed_time: {
                client_side_validation: true,
                required: true,
                serialized_name: 'elapsedTime',
                type: {
                  name: 'String'
                }
              },
              errors: {
                client_side_validation: true,
                required: true,
                serialized_name: 'errors',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MongoDbErrorElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MongoDbError'
                      }
                  }
                }
              },
              events_pending: {
                client_side_validation: true,
                required: true,
                serialized_name: 'eventsPending',
                type: {
                  name: 'Number'
                }
              },
              events_replayed: {
                client_side_validation: true,
                required: true,
                serialized_name: 'eventsReplayed',
                type: {
                  name: 'Number'
                }
              },
              last_event_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'lastEventTime',
                type: {
                  name: 'DateTime'
                }
              },
              last_replay_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'lastReplayTime',
                type: {
                  name: 'DateTime'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              qualified_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'qualifiedName',
                type: {
                  name: 'String'
                }
              },
              result_type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'resultType',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: true,
                serialized_name: 'state',
                type: {
                  name: 'String'
                }
              },
              total_bytes: {
                client_side_validation: true,
                required: true,
                serialized_name: 'totalBytes',
                type: {
                  name: 'Number'
                }
              },
              total_documents: {
                client_side_validation: true,
                required: true,
                serialized_name: 'totalDocuments',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
