# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataMigration::Mgmt::V2018_07_15_preview
  module Models
    #
    # Output for the task that gets the list of tables contained within a
    # provided list of Oracle schemas.
    #
    class GetUserTablesOracleTaskOutput

      include MsRestAzure

      # @return [String] The schema this result is for
      attr_accessor :schema_name

      # @return [Array<DatabaseTable>] List of valid tables found for this
      # schema
      attr_accessor :tables

      # @return [Array<ReportableException>] Validation errors associated with
      # the task
      attr_accessor :validation_errors


      #
      # Mapper for GetUserTablesOracleTaskOutput class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'GetUserTablesOracleTaskOutput',
          type: {
            name: 'Composite',
            class_name: 'GetUserTablesOracleTaskOutput',
            model_properties: {
              schema_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'schemaName',
                type: {
                  name: 'String'
                }
              },
              tables: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'tables',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'DatabaseTableElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'DatabaseTable'
                      }
                  }
                }
              },
              validation_errors: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'validationErrors',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ReportableExceptionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ReportableException'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
