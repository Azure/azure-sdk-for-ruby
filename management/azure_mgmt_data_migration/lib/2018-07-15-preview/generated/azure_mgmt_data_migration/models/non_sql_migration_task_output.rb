# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataMigration::Mgmt::V2018_07_15_preview
  module Models
    #
    # Base class for non sql migration task output
    #
    class NonSqlMigrationTaskOutput

      include MsRestAzure

      # @return [String] Result identifier
      attr_accessor :id

      # @return [DateTime] Migration start time
      attr_accessor :started_on

      # @return [DateTime] Migration end time
      attr_accessor :ended_on

      # @return [MigrationStatus] Current state of migration. Possible values
      # include: 'Default', 'Connecting', 'SourceAndTargetSelected',
      # 'SelectLogins', 'Configured', 'Running', 'Error', 'Stopped',
      # 'Completed', 'CompletedWithWarnings'
      attr_accessor :status

      # @return [Hash{String => NonSqlDataMigrationTableResult}] Results of the
      # migration. The key contains the table name and the value the table
      # result object
      attr_accessor :data_migration_table_results

      # @return [String] Message about the progress of the migration
      attr_accessor :progress_message

      # @return [String] Name of source server
      attr_accessor :source_server_name

      # @return [String] Name of target server
      attr_accessor :target_server_name


      #
      # Mapper for NonSqlMigrationTaskOutput class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'NonSqlMigrationTaskOutput',
          type: {
            name: 'Composite',
            class_name: 'NonSqlMigrationTaskOutput',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              started_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'startedOn',
                type: {
                  name: 'DateTime'
                }
              },
              ended_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'endedOn',
                type: {
                  name: 'DateTime'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'status',
                type: {
                  name: 'String'
                }
              },
              data_migration_table_results: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'dataMigrationTableResults',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'NonSqlDataMigrationTableResultElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'NonSqlDataMigrationTableResult'
                      }
                  }
                }
              },
              progress_message: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'progressMessage',
                type: {
                  name: 'String'
                }
              },
              source_server_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'sourceServerName',
                type: {
                  name: 'String'
                }
              },
              target_server_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'targetServerName',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
