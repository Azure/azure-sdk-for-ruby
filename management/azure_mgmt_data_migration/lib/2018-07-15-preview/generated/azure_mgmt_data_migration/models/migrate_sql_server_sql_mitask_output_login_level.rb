# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataMigration::Mgmt::V2018_07_15_preview
  module Models
    #
    # Model object.
    #
    #
    class MigrateSqlServerSqlMITaskOutputLoginLevel < MigrateSqlServerSqlMITaskOutput

      include MsRestAzure


      def initialize
        @resultType = "LoginLevelOutput"
      end

      attr_accessor :resultType

      # @return [String] Login name.
      attr_accessor :login_name

      # @return [MigrationState] Current state of login. Possible values
      # include: 'None', 'InProgress', 'Failed', 'Warning', 'Completed',
      # 'Skipped', 'Stopped'
      attr_accessor :state

      # @return [LoginMigrationStage] Current stage of login. Possible values
      # include: 'None', 'Initialize', 'LoginMigration',
      # 'EstablishUserMapping', 'AssignRoleMembership', 'AssignRoleOwnership',
      # 'EstablishServerPermissions', 'EstablishObjectPermissions', 'Completed'
      attr_accessor :stage

      # @return [DateTime] Login migration start time
      attr_accessor :started_on

      # @return [DateTime] Login migration end time
      attr_accessor :ended_on

      # @return [String] Login migration progress message
      attr_accessor :message

      # @return [Array<ReportableException>] Login migration errors and
      # warnings per login
      attr_accessor :exceptions_and_warnings


      #
      # Mapper for MigrateSqlServerSqlMITaskOutputLoginLevel class as Ruby
      # Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'LoginLevelOutput',
          type: {
            name: 'Composite',
            class_name: 'MigrateSqlServerSqlMITaskOutputLoginLevel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              resultType: {
                client_side_validation: true,
                required: true,
                serialized_name: 'resultType',
                type: {
                  name: 'String'
                }
              },
              login_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'loginName',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'state',
                type: {
                  name: 'String'
                }
              },
              stage: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'stage',
                type: {
                  name: 'String'
                }
              },
              started_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'startedOn',
                type: {
                  name: 'DateTime'
                }
              },
              ended_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'endedOn',
                type: {
                  name: 'DateTime'
                }
              },
              message: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'message',
                type: {
                  name: 'String'
                }
              },
              exceptions_and_warnings: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'exceptionsAndWarnings',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ReportableExceptionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ReportableException'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
