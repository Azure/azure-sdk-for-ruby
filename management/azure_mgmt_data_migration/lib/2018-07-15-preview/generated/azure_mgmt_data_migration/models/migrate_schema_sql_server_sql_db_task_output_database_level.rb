# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataMigration::Mgmt::V2018_07_15_preview
  module Models
    #
    # Model object.
    #
    #
    class MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel < MigrateSchemaSqlServerSqlDbTaskOutput

      include MsRestAzure


      def initialize
        @resultType = "DatabaseLevelOutput"
      end

      attr_accessor :resultType

      # @return [String] The name of the database
      attr_accessor :database_name

      # @return [MigrationState] State of the schema migration for this
      # database. Possible values include: 'None', 'InProgress', 'Failed',
      # 'Warning', 'Completed', 'Skipped', 'Stopped'
      attr_accessor :state

      # @return [SchemaMigrationStage] Schema migration stage for this
      # database. Possible values include: 'NotStarted', 'ValidatingInputs',
      # 'CollectingObjects', 'DownloadingScript', 'GeneratingScript',
      # 'UploadingScript', 'DeployingSchema', 'Completed',
      # 'CompletedWithWarnings', 'Failed'
      attr_accessor :stage

      # @return [DateTime] Migration start time
      attr_accessor :started_on

      # @return [DateTime] Migration end time
      attr_accessor :ended_on

      # @return [String] Prefix string to use for querying errors for this
      # database
      attr_accessor :database_error_result_prefix

      # @return [String] Prefix string to use for querying schema errors for
      # this database
      attr_accessor :schema_error_result_prefix

      # @return [Integer] Number of successful operations for this database
      attr_accessor :number_of_successful_operations

      # @return [Integer] Number of failed operations for this database
      attr_accessor :number_of_failed_operations

      # @return [String] Identifier for the file resource containing the schema
      # of this database
      attr_accessor :file_id


      #
      # Mapper for MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel class as
      # Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DatabaseLevelOutput',
          type: {
            name: 'Composite',
            class_name: 'MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              resultType: {
                client_side_validation: true,
                required: true,
                serialized_name: 'resultType',
                type: {
                  name: 'String'
                }
              },
              database_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'databaseName',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'state',
                type: {
                  name: 'String'
                }
              },
              stage: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'stage',
                type: {
                  name: 'String'
                }
              },
              started_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'startedOn',
                type: {
                  name: 'DateTime'
                }
              },
              ended_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'endedOn',
                type: {
                  name: 'DateTime'
                }
              },
              database_error_result_prefix: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'databaseErrorResultPrefix',
                type: {
                  name: 'String'
                }
              },
              schema_error_result_prefix: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'schemaErrorResultPrefix',
                type: {
                  name: 'String'
                }
              },
              number_of_successful_operations: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'numberOfSuccessfulOperations',
                type: {
                  name: 'Number'
                }
              },
              number_of_failed_operations: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'numberOfFailedOperations',
                type: {
                  name: 'Number'
                }
              },
              file_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'fileId',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
