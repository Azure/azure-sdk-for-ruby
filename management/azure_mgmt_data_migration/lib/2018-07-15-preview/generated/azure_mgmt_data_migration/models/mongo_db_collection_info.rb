# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataMigration::Mgmt::V2018_07_15_preview
  module Models
    #
    # Describes a supported collection within a MongoDB database
    #
    class MongoDbCollectionInfo < MongoDbObjectInfo

      include MsRestAzure

      # @return [String] The name of the database containing the collection
      attr_accessor :database_name

      # @return [Boolean] Whether the collection is a capped collection (i.e.
      # whether it has a fixed size and acts like a circular buffer)
      attr_accessor :is_capped

      # @return [Boolean] Whether the collection is system collection
      attr_accessor :is_system_collection

      # @return [Boolean] Whether the collection is a view of another
      # collection
      attr_accessor :is_view

      # @return [MongoDbShardKeyInfo] The shard key on the collection, or null
      # if the collection is not sharded
      attr_accessor :shard_key

      # @return [Boolean] Whether the database has sharding enabled. Note that
      # the migration task will enable sharding on the target if necessary.
      attr_accessor :supports_sharding

      # @return [String] The name of the collection that this is a view of, if
      # IsView is true
      attr_accessor :view_of


      #
      # Mapper for MongoDbCollectionInfo class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'MongoDbCollectionInfo',
          type: {
            name: 'Composite',
            class_name: 'MongoDbCollectionInfo',
            model_properties: {
              average_document_size: {
                client_side_validation: true,
                required: true,
                serialized_name: 'averageDocumentSize',
                type: {
                  name: 'Number'
                }
              },
              data_size: {
                client_side_validation: true,
                required: true,
                serialized_name: 'dataSize',
                type: {
                  name: 'Number'
                }
              },
              document_count: {
                client_side_validation: true,
                required: true,
                serialized_name: 'documentCount',
                type: {
                  name: 'Number'
                }
              },
              name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              qualified_name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'qualifiedName',
                type: {
                  name: 'String'
                }
              },
              database_name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'databaseName',
                type: {
                  name: 'String'
                }
              },
              is_capped: {
                client_side_validation: true,
                required: true,
                serialized_name: 'isCapped',
                type: {
                  name: 'Boolean'
                }
              },
              is_system_collection: {
                client_side_validation: true,
                required: true,
                serialized_name: 'isSystemCollection',
                type: {
                  name: 'Boolean'
                }
              },
              is_view: {
                client_side_validation: true,
                required: true,
                serialized_name: 'isView',
                type: {
                  name: 'Boolean'
                }
              },
              shard_key: {
                client_side_validation: true,
                required: false,
                serialized_name: 'shardKey',
                type: {
                  name: 'Composite',
                  class_name: 'MongoDbShardKeyInfo'
                }
              },
              supports_sharding: {
                client_side_validation: true,
                required: true,
                serialized_name: 'supportsSharding',
                type: {
                  name: 'Boolean'
                }
              },
              view_of: {
                client_side_validation: true,
                required: false,
                serialized_name: 'viewOf',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
