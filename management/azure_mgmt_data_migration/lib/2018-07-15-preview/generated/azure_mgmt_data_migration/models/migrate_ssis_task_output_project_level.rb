# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataMigration::Mgmt::V2018_07_15_preview
  module Models
    #
    # Model object.
    #
    #
    class MigrateSsisTaskOutputProjectLevel < MigrateSsisTaskOutput

      include MsRestAzure


      def initialize
        @resultType = "SsisProjectLevelOutput"
      end

      attr_accessor :resultType

      # @return [String] Name of the folder
      attr_accessor :folder_name

      # @return [String] Name of the project
      attr_accessor :project_name

      # @return [MigrationState] Current state of migration. Possible values
      # include: 'None', 'InProgress', 'Failed', 'Warning', 'Completed',
      # 'Skipped', 'Stopped'
      attr_accessor :state

      # @return [SsisMigrationStage] Stage of SSIS migration. Possible values
      # include: 'None', 'Initialize', 'InProgress', 'Completed'
      attr_accessor :stage

      # @return [DateTime] Migration start time
      attr_accessor :started_on

      # @return [DateTime] Migration end time
      attr_accessor :ended_on

      # @return [String] Migration progress message
      attr_accessor :message

      # @return [Array<ReportableException>] Migration exceptions and warnings
      attr_accessor :exceptions_and_warnings


      #
      # Mapper for MigrateSsisTaskOutputProjectLevel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'SsisProjectLevelOutput',
          type: {
            name: 'Composite',
            class_name: 'MigrateSsisTaskOutputProjectLevel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              resultType: {
                client_side_validation: true,
                required: true,
                serialized_name: 'resultType',
                type: {
                  name: 'String'
                }
              },
              folder_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'folderName',
                type: {
                  name: 'String'
                }
              },
              project_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'projectName',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'state',
                type: {
                  name: 'String'
                }
              },
              stage: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'stage',
                type: {
                  name: 'String'
                }
              },
              started_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'startedOn',
                type: {
                  name: 'DateTime'
                }
              },
              ended_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'endedOn',
                type: {
                  name: 'DateTime'
                }
              },
              message: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'message',
                type: {
                  name: 'String'
                }
              },
              exceptions_and_warnings: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'exceptionsAndWarnings',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ReportableExceptionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ReportableException'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
