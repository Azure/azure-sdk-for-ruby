# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataMigration::Mgmt::V2018_03_15_preview
  module Models
    #
    # Output for task that validates migration input for SQL to Azure SQL
    # Managed Instance migrations
    #
    class ValidateMigrationInputSqlServerSqlMITaskOutput

      include MsRestAzure

      # @return [String] Result identifier
      attr_accessor :id

      # @return [String] Name of database
      attr_accessor :name

      # @return [Array<ReportableException>] Errors associated with the
      # RestoreDatabaseName
      attr_accessor :restore_database_name_errors

      # @return [Array<ReportableException>] Errors associated with the
      # BackupFolder path
      attr_accessor :backup_folder_errors

      # @return [Array<ReportableException>] Errors associated with backup
      # share user name and password credentials
      attr_accessor :backup_share_credentials_errors

      # @return [Array<ReportableException>] Errors associated with the storage
      # account provided.
      attr_accessor :backup_storage_account_errors


      #
      # Mapper for ValidateMigrationInputSqlServerSqlMITaskOutput class as Ruby
      # Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ValidateMigrationInputSqlServerSqlMITaskOutput',
          type: {
            name: 'Composite',
            class_name: 'ValidateMigrationInputSqlServerSqlMITaskOutput',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              restore_database_name_errors: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'restoreDatabaseNameErrors',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ReportableExceptionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ReportableException'
                      }
                  }
                }
              },
              backup_folder_errors: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'backupFolderErrors',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ReportableExceptionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ReportableException'
                      }
                  }
                }
              },
              backup_share_credentials_errors: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'backupShareCredentialsErrors',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ReportableExceptionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ReportableException'
                      }
                  }
                }
              },
              backup_storage_account_errors: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'backupStorageAccountErrors',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ReportableExceptionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ReportableException'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
