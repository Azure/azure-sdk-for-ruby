# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataMigration::Mgmt::V2018_04_19
  module Models
    #
    # Model object.
    #
    #
    class MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel < MigrateMySqlAzureDbForMySqlSyncTaskOutput

      include MsRestAzure


      def initialize
        @resultType = "DatabaseLevelOutput"
      end

      attr_accessor :resultType

      # @return [String] Name of the database
      attr_accessor :database_name

      # @return [DateTime] Migration start time
      attr_accessor :started_on

      # @return [DateTime] Migration end time
      attr_accessor :ended_on

      # @return [SyncDatabaseMigrationReportingState] Migration state that this
      # database is in. Possible values include: 'UNDEFINED', 'CONFIGURING',
      # 'INITIALIAZING', 'STARTING', 'RUNNING', 'READY_TO_COMPLETE',
      # 'COMPLETING', 'COMPLETE', 'CANCELLING', 'CANCELLED', 'FAILED'
      attr_accessor :migration_state

      # @return [Integer] Number of incoming changes
      attr_accessor :incoming_changes

      # @return [Integer] Number of applied changes
      attr_accessor :applied_changes

      # @return [Integer] Number of cdc inserts
      attr_accessor :cdc_insert_counter

      # @return [Integer] Number of cdc deletes
      attr_accessor :cdc_delete_counter

      # @return [Integer] Number of cdc updates
      attr_accessor :cdc_update_counter

      # @return [Integer] Number of tables completed in full load
      attr_accessor :full_load_completed_tables

      # @return [Integer] Number of tables loading in full load
      attr_accessor :full_load_loading_tables

      # @return [Integer] Number of tables queued in full load
      attr_accessor :full_load_queued_tables

      # @return [Integer] Number of tables errored in full load
      attr_accessor :full_load_errored_tables

      # @return [Boolean] Indicates if initial load (full load) has been
      # completed
      attr_accessor :initialization_completed

      # @return [Integer] CDC apply latency
      attr_accessor :latency


      #
      # Mapper for MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel class
      # as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DatabaseLevelOutput',
          type: {
            name: 'Composite',
            class_name: 'MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              resultType: {
                client_side_validation: true,
                required: true,
                serialized_name: 'resultType',
                type: {
                  name: 'String'
                }
              },
              database_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'databaseName',
                type: {
                  name: 'String'
                }
              },
              started_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'startedOn',
                type: {
                  name: 'DateTime'
                }
              },
              ended_on: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'endedOn',
                type: {
                  name: 'DateTime'
                }
              },
              migration_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'migrationState',
                type: {
                  name: 'String'
                }
              },
              incoming_changes: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'incomingChanges',
                type: {
                  name: 'Number'
                }
              },
              applied_changes: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'appliedChanges',
                type: {
                  name: 'Number'
                }
              },
              cdc_insert_counter: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'cdcInsertCounter',
                type: {
                  name: 'Number'
                }
              },
              cdc_delete_counter: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'cdcDeleteCounter',
                type: {
                  name: 'Number'
                }
              },
              cdc_update_counter: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'cdcUpdateCounter',
                type: {
                  name: 'Number'
                }
              },
              full_load_completed_tables: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'fullLoadCompletedTables',
                type: {
                  name: 'Number'
                }
              },
              full_load_loading_tables: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'fullLoadLoadingTables',
                type: {
                  name: 'Number'
                }
              },
              full_load_queued_tables: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'fullLoadQueuedTables',
                type: {
                  name: 'Number'
                }
              },
              full_load_errored_tables: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'fullLoadErroredTables',
                type: {
                  name: 'Number'
                }
              },
              initialization_completed: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'initializationCompleted',
                type: {
                  name: 'Boolean'
                }
              },
              latency: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'latency',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
