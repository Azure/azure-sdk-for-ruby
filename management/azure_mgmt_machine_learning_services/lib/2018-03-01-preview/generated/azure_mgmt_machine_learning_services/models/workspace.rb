# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::MachineLearningServices::Mgmt::V2018_03_01_preview
  module Models
    #
    # An object that represents a machine learning workspace.
    #
    class Workspace < Resource

      include MsRestAzure

      # @return [String] The immutable id associated with this workspace.
      attr_accessor :workspace_id

      # @return [String] The description of this workspace.
      attr_accessor :description

      # @return [String] The friendly name for this workspace. This name in
      # mutable
      attr_accessor :friendly_name

      # @return [DateTime] The creation time of the machine learning workspace
      # in ISO8601 format.
      attr_accessor :creation_time

      # @return [String] ARM id of the Batch AI workspace associated with this
      # workspace. This cannot be changed once the workspace has been created
      attr_accessor :batchai_workspace

      # @return [String] ARM id of the key vault associated with this
      # workspace. This cannot be changed once the workspace has been created
      attr_accessor :key_vault

      # @return [String] ARM id of the application insights associated with
      # this workspace. This cannot be changed once the workspace has been
      # created
      attr_accessor :application_insights

      # @return [String] ARM id of the container registry associated with this
      # workspace. This cannot be changed once the workspace has been created
      attr_accessor :container_registry

      # @return [String] ARM id of the storage account associated with this
      # workspace. This cannot be changed once the workspace has been created
      attr_accessor :storage_account

      # @return [String] Url for the discovery service to identify regional
      # endpoints for machine learning experimentation services
      attr_accessor :discovery_url

      # @return [ProvisioningState] The current deployment state of workspace
      # resource. The provisioningState is to indicate states for resource
      # provisioning. Possible values include: 'Unknown', 'Updating',
      # 'Creating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'
      attr_accessor :provisioning_state


      #
      # Mapper for Workspace class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Workspace',
          type: {
            name: 'Composite',
            class_name: 'Workspace',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              identity: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'identity',
                type: {
                  name: 'Composite',
                  class_name: 'Identity'
                }
              },
              location: {
                client_side_validation: true,
                required: false,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              workspace_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.workspaceId',
                type: {
                  name: 'String'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              friendly_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.friendlyName',
                type: {
                  name: 'String'
                }
              },
              creation_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.creationTime',
                type: {
                  name: 'DateTime'
                }
              },
              batchai_workspace: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.batchaiWorkspace',
                type: {
                  name: 'String'
                }
              },
              key_vault: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.keyVault',
                type: {
                  name: 'String'
                }
              },
              application_insights: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.applicationInsights',
                type: {
                  name: 'String'
                }
              },
              container_registry: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.containerRegistry',
                type: {
                  name: 'String'
                }
              },
              storage_account: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.storageAccount',
                type: {
                  name: 'String'
                }
              },
              discovery_url: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.discoveryUrl',
                type: {
                  name: 'String'
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
