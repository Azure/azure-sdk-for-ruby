# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::StorSimple8000Series
  module Models
    #
    # The volume container.
    #
    class VolumeContainer < BaseModel

      include MsRestAzure

      # @return [AsymmetricEncryptedSecret] The key used to encrypt data in the
      # volume container. It is required when property 'EncryptionStatus' is
      # "Enabled".
      attr_accessor :encryption_key

      # @return [EncryptionStatus] The flag to denote whether encryption is
      # enabled or not. Possible values include: 'Enabled', 'Disabled'
      attr_accessor :encryption_status

      # @return [Integer] The number of volumes in the volume Container.
      attr_accessor :volume_count

      # @return [String] The path ID of storage account associated with the
      # volume container.
      attr_accessor :storage_account_credential_id

      # @return [OwnerShipStatus] The owner ship status of the volume
      # container. Only when the status is "NotOwned", the delete operation on
      # the volume container is permitted. Possible values include: 'Owned',
      # 'NotOwned'
      attr_accessor :owner_ship_status

      # @return [Integer] The bandwidth-rate set on the volume container.
      attr_accessor :band_width_rate_in_mbps

      # @return [String] The ID of the bandwidth setting associated with the
      # volume container.
      attr_accessor :bandwidth_setting_id

      # @return [Integer] The total cloud storage for the volume container.
      attr_accessor :total_cloud_storage_usage_in_bytes


      #
      # Mapper for VolumeContainer class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'VolumeContainer',
          type: {
            name: 'Composite',
            class_name: 'VolumeContainer',
            model_properties: {
              id: {
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              kind: {
                required: false,
                serialized_name: 'kind',
                type: {
                  name: 'Enum',
                  module: 'Kind'
                }
              },
              encryption_key: {
                required: false,
                serialized_name: 'properties.encryptionKey',
                type: {
                  name: 'Composite',
                  class_name: 'AsymmetricEncryptedSecret'
                }
              },
              encryption_status: {
                required: false,
                read_only: true,
                serialized_name: 'properties.encryptionStatus',
                type: {
                  name: 'Enum',
                  module: 'EncryptionStatus'
                }
              },
              volume_count: {
                required: false,
                read_only: true,
                serialized_name: 'properties.volumeCount',
                type: {
                  name: 'Number'
                }
              },
              storage_account_credential_id: {
                required: true,
                serialized_name: 'properties.storageAccountCredentialId',
                type: {
                  name: 'String'
                }
              },
              owner_ship_status: {
                required: false,
                read_only: true,
                serialized_name: 'properties.ownerShipStatus',
                type: {
                  name: 'Enum',
                  module: 'OwnerShipStatus'
                }
              },
              band_width_rate_in_mbps: {
                required: false,
                serialized_name: 'properties.bandWidthRateInMbps',
                type: {
                  name: 'Number'
                }
              },
              bandwidth_setting_id: {
                required: false,
                serialized_name: 'properties.bandwidthSettingId',
                type: {
                  name: 'String'
                }
              },
              total_cloud_storage_usage_in_bytes: {
                required: false,
                read_only: true,
                serialized_name: 'properties.totalCloudStorageUsageInBytes',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
