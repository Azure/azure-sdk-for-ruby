# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Automation::Mgmt::V2015_10_31
  module Models
    #
    # Definition of the watcher type.
    #
    class Watcher < TrackedResource

      include MsRestAzure

      # @return [Integer] Gets or sets the frequency at which the watcher is
      # invoked.
      attr_accessor :execution_frequency_in_seconds

      # @return [String] Gets or sets the name of the script the watcher is
      # attached to, i.e. the name of an existing runbook.
      attr_accessor :script_name

      # @return [Hash{String => String}] Gets or sets the parameters of the
      # script.
      attr_accessor :script_parameters

      # @return [String] Gets or sets the name of the hybrid worker group the
      # watcher will run on.
      attr_accessor :script_run_on

      # @return [String] Gets the current status of the watcher.
      attr_accessor :status

      # @return [DateTime] Gets or sets the creation time.
      attr_accessor :creation_time

      # @return [DateTime] Gets or sets the last modified time.
      attr_accessor :last_modified_time

      # @return [String] Details of the user who last modified the watcher.
      attr_accessor :last_modified_by

      # @return [String] Gets or sets the description.
      attr_accessor :description

      # @return [String] Gets or sets the etag of the resource.
      attr_accessor :etag


      #
      # Mapper for Watcher class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'Watcher',
          type: {
            name: 'Composite',
            class_name: 'Watcher',
            model_properties: {
              id: {
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              tags: {
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              location: {
                required: false,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              execution_frequency_in_seconds: {
                required: false,
                serialized_name: 'properties.executionFrequencyInSeconds',
                type: {
                  name: 'Number'
                }
              },
              script_name: {
                required: false,
                serialized_name: 'properties.scriptName',
                type: {
                  name: 'String'
                }
              },
              script_parameters: {
                required: false,
                serialized_name: 'properties.scriptParameters',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              script_run_on: {
                required: false,
                serialized_name: 'properties.scriptRunOn',
                type: {
                  name: 'String'
                }
              },
              status: {
                required: false,
                read_only: true,
                serialized_name: 'properties.status',
                type: {
                  name: 'String'
                }
              },
              creation_time: {
                required: false,
                read_only: true,
                serialized_name: 'properties.creationTime',
                type: {
                  name: 'DateTime'
                }
              },
              last_modified_time: {
                required: false,
                read_only: true,
                serialized_name: 'properties.lastModifiedTime',
                type: {
                  name: 'DateTime'
                }
              },
              last_modified_by: {
                required: false,
                read_only: true,
                serialized_name: 'properties.lastModifiedBy',
                type: {
                  name: 'String'
                }
              },
              description: {
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              etag: {
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
