# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::CustomerInsights::Mgmt::V2017_04_26
  module Models
    #
    # The prediction resource format.
    #
    class PredictionResourceFormat < ProxyResource

      include MsRestAzure

      include MsRest::JSONable
      # @return [Hash{String => String}] Description of the prediction.
      attr_accessor :description

      # @return [Hash{String => String}] Display name of the prediction.
      attr_accessor :display_name

      # @return [Array<String>] Interaction types involved in the prediction.
      attr_accessor :involved_interaction_types

      # @return [Array<String>] KPI types involved in the prediction.
      attr_accessor :involved_kpi_types

      # @return [Array<String>] Relationships involved in the prediction.
      attr_accessor :involved_relationships

      # @return [String] Negative outcome expression.
      attr_accessor :negative_outcome_expression

      # @return [String] Positive outcome expression.
      attr_accessor :positive_outcome_expression

      # @return [String] Primary profile type.
      attr_accessor :primary_profile_type

      # @return [ProvisioningStates] Provisioning state. Possible values
      # include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
      # 'HumanIntervention', 'Failed'
      attr_accessor :provisioning_state

      # @return [String] Name of the prediction.
      attr_accessor :prediction_name

      # @return [String] Scope expression.
      attr_accessor :scope_expression

      # @return [String] The hub name.
      attr_accessor :tenant_id

      # @return [Boolean] Whether do auto analyze.
      attr_accessor :auto_analyze

      # @return [PredictionMappings] Definition of the link mapping of
      # prediction.
      attr_accessor :mappings

      # @return [String] Score label.
      attr_accessor :score_label

      # @return [Array<PredictionGradesItem>] The prediction grades.
      attr_accessor :grades

      # @return [PredictionSystemGeneratedEntities] System generated entities.
      attr_accessor :system_generated_entities


      #
      # Mapper for PredictionResourceFormat class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'PredictionResourceFormat',
          type: {
            name: 'Composite',
            class_name: 'PredictionResourceFormat',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              display_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.displayName',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              involved_interaction_types: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.involvedInteractionTypes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              involved_kpi_types: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.involvedKpiTypes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              involved_relationships: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.involvedRelationships',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              negative_outcome_expression: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.negativeOutcomeExpression',
                type: {
                  name: 'String'
                }
              },
              positive_outcome_expression: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.positiveOutcomeExpression',
                type: {
                  name: 'String'
                }
              },
              primary_profile_type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.primaryProfileType',
                type: {
                  name: 'String'
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              prediction_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.predictionName',
                type: {
                  name: 'String'
                }
              },
              scope_expression: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.scopeExpression',
                type: {
                  name: 'String'
                }
              },
              tenant_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.tenantId',
                type: {
                  name: 'String'
                }
              },
              auto_analyze: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.autoAnalyze',
                type: {
                  name: 'Boolean'
                }
              },
              mappings: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.mappings',
                type: {
                  name: 'Composite',
                  class_name: 'PredictionMappings'
                }
              },
              score_label: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.scoreLabel',
                type: {
                  name: 'String'
                }
              },
              grades: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.grades',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'PredictionGradesItemElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'PredictionGradesItem'
                      }
                  }
                }
              },
              system_generated_entities: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.systemGeneratedEntities',
                type: {
                  name: 'Composite',
                  class_name: 'PredictionSystemGeneratedEntities'
                }
              }
            }
          }
        }
      end
    end
  end
end
