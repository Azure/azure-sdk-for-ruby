# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::CustomerInsights
  module Models
    #
    # Describes an entity.
    #
    class EntityTypeDefinition < MetadataDefinitionBase

      include MsRestAzure

      # @return [String] The api entity set name. This becomes the odata entity
      # set name for the entity Type being refered in this object.
      attr_accessor :api_entity_set_name

      # @return [EntityTypes] Type of entity. Possible values include: 'None',
      # 'Profile', 'Interaction', 'Relationship'
      attr_accessor :entity_type

      # @return [Array<PropertyDefinition>] The properties of the Profile.
      attr_accessor :fields

      # @return [Integer] The instance count.
      attr_accessor :instances_count

      # @return [DateTime] The last changed time for the type definition.
      attr_accessor :last_changed_utc

      # @return [ProvisioningStates] Provisioning state. Possible values
      # include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
      # 'HumanIntervention', 'Failed'
      attr_accessor :provisioning_state

      # @return [String] The schema org link. This helps ACI identify and
      # suggest semantic models.
      attr_accessor :schema_item_type_link

      # @return [String] The hub name.
      attr_accessor :tenant_id

      # @return [String] The timestamp property name. Represents the time when
      # the interaction or profile update happened.
      attr_accessor :timestamp_field_name

      # @return [String] The name of the entity.
      attr_accessor :type_name


      #
      # Mapper for EntityTypeDefinition class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'EntityTypeDefinition',
          type: {
            name: 'Composite',
            class_name: 'EntityTypeDefinition',
            model_properties: {
              attributes: {
                required: false,
                serialized_name: 'attributes',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'ArrayElementType',
                      type: {
                        name: 'Sequence',
                        element: {
                            required: false,
                            serialized_name: 'StringElementType',
                            type: {
                              name: 'String'
                            }
                        }
                      }
                  }
                }
              },
              description: {
                required: false,
                serialized_name: 'description',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              display_name: {
                required: false,
                serialized_name: 'displayName',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              localized_attributes: {
                required: false,
                serialized_name: 'localizedAttributes',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'HashElementType',
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serialized_name: 'StringElementType',
                            type: {
                              name: 'String'
                            }
                        }
                      }
                  }
                }
              },
              small_image: {
                required: false,
                serialized_name: 'smallImage',
                type: {
                  name: 'String'
                }
              },
              medium_image: {
                required: false,
                serialized_name: 'mediumImage',
                type: {
                  name: 'String'
                }
              },
              large_image: {
                required: false,
                serialized_name: 'largeImage',
                type: {
                  name: 'String'
                }
              },
              api_entity_set_name: {
                required: false,
                serialized_name: 'apiEntitySetName',
                type: {
                  name: 'String'
                }
              },
              entity_type: {
                required: false,
                serialized_name: 'entityType',
                type: {
                  name: 'Enum',
                  module: 'EntityTypes'
                }
              },
              fields: {
                required: false,
                serialized_name: 'fields',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'PropertyDefinitionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'PropertyDefinition'
                      }
                  }
                }
              },
              instances_count: {
                required: false,
                serialized_name: 'instancesCount',
                type: {
                  name: 'Number'
                }
              },
              last_changed_utc: {
                required: false,
                read_only: true,
                serialized_name: 'lastChangedUtc',
                type: {
                  name: 'DateTime'
                }
              },
              provisioning_state: {
                required: false,
                read_only: true,
                serialized_name: 'provisioningState',
                type: {
                  name: 'String'
                }
              },
              schema_item_type_link: {
                required: false,
                serialized_name: 'schemaItemTypeLink',
                type: {
                  name: 'String'
                }
              },
              tenant_id: {
                required: false,
                read_only: true,
                serialized_name: 'tenantId',
                type: {
                  name: 'String'
                }
              },
              timestamp_field_name: {
                required: false,
                serialized_name: 'timestampFieldName',
                type: {
                  name: 'String'
                }
              },
              type_name: {
                required: false,
                serialized_name: 'typeName',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
