# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::CustomerInsights
  module Models
    #
    # The KPI resource format.
    #
    class KpiResourceFormat < ProxyResource

      include MsRestAzure

      # @return [EntityTypes] The mapping entity type. Possible values include:
      # 'None', 'Profile', 'Interaction', 'Relationship'
      attr_accessor :entity_type

      # @return [String] The mapping entity name.
      attr_accessor :entity_type_name

      # @return [String] The hub name.
      attr_accessor :tenant_id

      # @return [String] The KPI name.
      attr_accessor :kpi_name

      # @return [Hash{String => String}] Localized display name for the KPI.
      attr_accessor :display_name

      # @return [Hash{String => String}] Localized description for the KPI.
      attr_accessor :description

      # @return [CalculationWindowTypes] The calculation window. Possible
      # values include: 'Lifetime', 'Hour', 'Day', 'Week', 'Month'
      attr_accessor :calculation_window

      # @return [String] Name of calculation window field.
      attr_accessor :calculation_window_field_name

      # @return [KpiFunctions] The computation function for the KPI. Possible
      # values include: 'Sum', 'Avg', 'Min', 'Max', 'Last', 'Count', 'None',
      # 'CountDistinct'
      attr_accessor :function

      # @return [String] The computation expression for the KPI.
      attr_accessor :expression

      # @return [String] The unit of measurement for the KPI.
      attr_accessor :unit

      # @return [String] The filter expression for the KPI.
      attr_accessor :filter

      # @return [Array<String>] the group by properties for the KPI.
      attr_accessor :group_by

      # @return [Array<KpiGroupByMetadata>] The KPI GroupByMetadata.
      attr_accessor :group_by_metadata

      # @return [Array<KpiParticipantProfilesMetadata>] The participant
      # profiles.
      attr_accessor :participant_profiles_metadata

      # @return [ProvisioningStates] Provisioning state. Possible values
      # include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
      # 'HumanIntervention', 'Failed'
      attr_accessor :provisioning_state

      # @return [KpiThresholds] The KPI thresholds.
      attr_accessor :thres_holds

      # @return [Array<KpiAlias>] The aliases.
      attr_accessor :aliases

      # @return [Array<KpiExtract>] The KPI extracts.
      attr_accessor :extracts


      #
      # Mapper for KpiResourceFormat class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'KpiResourceFormat',
          type: {
            name: 'Composite',
            class_name: 'KpiResourceFormat',
            model_properties: {
              id: {
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              entity_type: {
                required: true,
                serialized_name: 'properties.entityType',
                type: {
                  name: 'Enum',
                  module: 'EntityTypes'
                }
              },
              entity_type_name: {
                required: true,
                serialized_name: 'properties.entityTypeName',
                type: {
                  name: 'String'
                }
              },
              tenant_id: {
                required: false,
                read_only: true,
                serialized_name: 'properties.tenantId',
                type: {
                  name: 'String'
                }
              },
              kpi_name: {
                required: false,
                read_only: true,
                serialized_name: 'properties.kpiName',
                type: {
                  name: 'String'
                }
              },
              display_name: {
                required: false,
                serialized_name: 'properties.displayName',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              description: {
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              calculation_window: {
                required: true,
                serialized_name: 'properties.calculationWindow',
                type: {
                  name: 'Enum',
                  module: 'CalculationWindowTypes'
                }
              },
              calculation_window_field_name: {
                required: false,
                serialized_name: 'properties.calculationWindowFieldName',
                type: {
                  name: 'String'
                }
              },
              function: {
                required: true,
                serialized_name: 'properties.function',
                type: {
                  name: 'Enum',
                  module: 'KpiFunctions'
                }
              },
              expression: {
                required: true,
                serialized_name: 'properties.expression',
                type: {
                  name: 'String'
                }
              },
              unit: {
                required: false,
                serialized_name: 'properties.unit',
                type: {
                  name: 'String'
                }
              },
              filter: {
                required: false,
                serialized_name: 'properties.filter',
                type: {
                  name: 'String'
                }
              },
              group_by: {
                required: false,
                serialized_name: 'properties.groupBy',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              group_by_metadata: {
                required: false,
                read_only: true,
                serialized_name: 'properties.groupByMetadata',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'KpiGroupByMetadataElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'KpiGroupByMetadata'
                      }
                  }
                }
              },
              participant_profiles_metadata: {
                required: false,
                read_only: true,
                serialized_name: 'properties.participantProfilesMetadata',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'KpiParticipantProfilesMetadataElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'KpiParticipantProfilesMetadata'
                      }
                  }
                }
              },
              provisioning_state: {
                required: false,
                read_only: true,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              thres_holds: {
                required: false,
                serialized_name: 'properties.thresHolds',
                type: {
                  name: 'Composite',
                  class_name: 'KpiThresholds'
                }
              },
              aliases: {
                required: false,
                serialized_name: 'properties.aliases',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'KpiAliasElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'KpiAlias'
                      }
                  }
                }
              },
              extracts: {
                required: false,
                serialized_name: 'properties.extracts',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'KpiExtractElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'KpiExtract'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
