# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::CDN::Mgmt::V2020_09_01
  module Models
    #
    # Round-Robin load balancing settings for a backend pool
    #
    class LoadBalancingSettingsParameters

      include MsRestAzure

      # @return [Integer] The number of samples to consider for load balancing
      # decisions
      attr_accessor :sample_size

      # @return [Integer] The number of samples within the sample period that
      # must succeed
      attr_accessor :successful_samples_required

      # @return [Integer] The additional latency in milliseconds for probes to
      # fall into the lowest latency bucket
      attr_accessor :additional_latency_in_milliseconds


      #
      # Mapper for LoadBalancingSettingsParameters class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'LoadBalancingSettingsParameters',
          type: {
            name: 'Composite',
            class_name: 'LoadBalancingSettingsParameters',
            model_properties: {
              sample_size: {
                client_side_validation: true,
                required: false,
                serialized_name: 'sampleSize',
                type: {
                  name: 'Number'
                }
              },
              successful_samples_required: {
                client_side_validation: true,
                required: false,
                serialized_name: 'successfulSamplesRequired',
                type: {
                  name: 'Number'
                }
              },
              additional_latency_in_milliseconds: {
                client_side_validation: true,
                required: false,
                serialized_name: 'additionalLatencyInMilliseconds',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
