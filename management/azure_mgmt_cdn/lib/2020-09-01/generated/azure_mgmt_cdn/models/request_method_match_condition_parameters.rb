# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::CDN::Mgmt::V2020_09_01
  module Models
    #
    # Defines the parameters for RequestMethod match conditions
    #
    class RequestMethodMatchConditionParameters

      include MsRestAzure

      # @return [String] . Default value:
      # '#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestMethodConditionParameters'
      # .
      attr_accessor :odatatype

      # @return [String] Describes operator to be matched. Default value:
      # 'Equal' .
      attr_accessor :operator

      # @return [Boolean] Describes if this is negate condition or not
      attr_accessor :negate_condition

      # @return [Array<Enum>] The match value for the condition of the delivery
      # rule
      attr_accessor :match_values


      #
      # Mapper for RequestMethodMatchConditionParameters class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'RequestMethodMatchConditionParameters',
          type: {
            name: 'Composite',
            class_name: 'RequestMethodMatchConditionParameters',
            model_properties: {
              odatatype: {
                client_side_validation: true,
                required: true,
                is_constant: true,
                serialized_name: '@odata\\.type',
                default_value: '#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestMethodConditionParameters',
                type: {
                  name: 'String'
                }
              },
              operator: {
                client_side_validation: true,
                required: true,
                is_constant: true,
                serialized_name: 'operator',
                default_value: 'Equal',
                type: {
                  name: 'String'
                }
              },
              negate_condition: {
                client_side_validation: true,
                required: false,
                serialized_name: 'negateCondition',
                type: {
                  name: 'Boolean'
                }
              },
              match_values: {
                client_side_validation: true,
                required: false,
                serialized_name: 'matchValues',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'enumElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
