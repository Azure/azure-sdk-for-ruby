# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::CDN::Mgmt::V2020_09_01
  module Models
    #
    # A condition for the delivery rule.
    #
    class DeliveryRuleCondition

      include MsRestAzure

      @@discriminatorMap = Hash.new
      @@discriminatorMap["RemoteAddress"] = "DeliveryRuleRemoteAddressCondition"
      @@discriminatorMap["RequestMethod"] = "DeliveryRuleRequestMethodCondition"
      @@discriminatorMap["QueryString"] = "DeliveryRuleQueryStringCondition"
      @@discriminatorMap["PostArgs"] = "DeliveryRulePostArgsCondition"
      @@discriminatorMap["RequestUri"] = "DeliveryRuleRequestUriCondition"
      @@discriminatorMap["RequestHeader"] = "DeliveryRuleRequestHeaderCondition"
      @@discriminatorMap["RequestBody"] = "DeliveryRuleRequestBodyCondition"
      @@discriminatorMap["RequestScheme"] = "DeliveryRuleRequestSchemeCondition"
      @@discriminatorMap["UrlPath"] = "DeliveryRuleUrlPathCondition"
      @@discriminatorMap["UrlFileExtension"] = "DeliveryRuleUrlFileExtensionCondition"
      @@discriminatorMap["UrlFileName"] = "DeliveryRuleUrlFileNameCondition"
      @@discriminatorMap["HttpVersion"] = "DeliveryRuleHttpVersionCondition"
      @@discriminatorMap["Cookies"] = "DeliveryRuleCookiesCondition"
      @@discriminatorMap["IsDevice"] = "DeliveryRuleIsDeviceCondition"

      def initialize
        @name = "DeliveryRuleCondition"
      end

      attr_accessor :name


      #
      # Mapper for DeliveryRuleCondition class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DeliveryRuleCondition',
          type: {
            name: 'Composite',
            polymorphic_discriminator: 'name',
            uber_parent: 'DeliveryRuleCondition',
            class_name: 'DeliveryRuleCondition',
            model_properties: {
            }
          }
        }
      end
    end
  end
end
