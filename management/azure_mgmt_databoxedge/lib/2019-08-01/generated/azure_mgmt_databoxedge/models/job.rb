# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataBoxEdge::Mgmt::V2019_08_01
  module Models
    #
    # A device job.
    #
    class Job

      include MsRestAzure

      # @return [String] The path ID that uniquely identifies the object.
      attr_accessor :id

      # @return [String] The name of the object.
      attr_accessor :name

      # @return [String] The hierarchical type of the object.
      attr_accessor :type

      # @return [JobStatus] The current status of the job. Possible values
      # include: 'Invalid', 'Running', 'Succeeded', 'Failed', 'Canceled',
      # 'Paused', 'Scheduled'
      attr_accessor :status

      # @return [DateTime] The UTC date and time at which the job started.
      attr_accessor :start_time

      # @return [DateTime] The UTC date and time at which the job completed.
      attr_accessor :end_time

      # @return [Integer] The percentage of the job that is complete.
      attr_accessor :percent_complete

      # @return [JobErrorDetails] The error details.
      attr_accessor :error

      # @return [JobType] The type of the job. Possible values include:
      # 'Invalid', 'ScanForUpdates', 'DownloadUpdates', 'InstallUpdates',
      # 'RefreshShare', 'RefreshContainer'
      attr_accessor :job_type

      # @return [UpdateOperationStage] Current stage of the update operation.
      # Possible values include: 'Unknown', 'Initial', 'ScanStarted',
      # 'ScanComplete', 'ScanFailed', 'DownloadStarted', 'DownloadComplete',
      # 'DownloadFailed', 'InstallStarted', 'InstallComplete', 'InstallFailed',
      # 'RebootInitiated', 'Success', 'Failure', 'RescanStarted',
      # 'RescanComplete', 'RescanFailed'
      attr_accessor :current_stage

      # @return [UpdateDownloadProgress] The download progress.
      attr_accessor :download_progress

      # @return [UpdateInstallProgress] The install progress.
      attr_accessor :install_progress

      # @return [Integer] Total number of errors encountered during the refresh
      # process.
      attr_accessor :total_refresh_errors

      # @return [String] Local share/remote container relative path to the
      # error manifest file of the refresh.
      attr_accessor :error_manifest_file

      # @return [String] ARM ID of the entity that was refreshed.
      attr_accessor :refreshed_entity_id

      # @return [String] If only subfolders need to be refreshed, then the
      # subfolder path inside the share or container. (The path is empty if
      # there are no subfolders.)
      attr_accessor :folder


      #
      # Mapper for Job class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Job',
          type: {
            name: 'Composite',
            class_name: 'Job',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'status',
                type: {
                  name: 'String'
                }
              },
              start_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'startTime',
                type: {
                  name: 'DateTime'
                }
              },
              end_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'endTime',
                type: {
                  name: 'DateTime'
                }
              },
              percent_complete: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'percentComplete',
                type: {
                  name: 'Number'
                }
              },
              error: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'error',
                type: {
                  name: 'Composite',
                  class_name: 'JobErrorDetails'
                }
              },
              job_type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.jobType',
                type: {
                  name: 'String'
                }
              },
              current_stage: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.currentStage',
                type: {
                  name: 'String'
                }
              },
              download_progress: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.downloadProgress',
                type: {
                  name: 'Composite',
                  class_name: 'UpdateDownloadProgress'
                }
              },
              install_progress: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.installProgress',
                type: {
                  name: 'Composite',
                  class_name: 'UpdateInstallProgress'
                }
              },
              total_refresh_errors: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.totalRefreshErrors',
                type: {
                  name: 'Number'
                }
              },
              error_manifest_file: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.errorManifestFile',
                type: {
                  name: 'String'
                }
              },
              refreshed_entity_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.refreshedEntityId',
                type: {
                  name: 'String'
                }
              },
              folder: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.folder',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
