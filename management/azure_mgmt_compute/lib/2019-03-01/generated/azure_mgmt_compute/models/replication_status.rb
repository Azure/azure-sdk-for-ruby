# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Compute::Mgmt::V2019_03_01
  module Models
    #
    # This is the replication status of the gallery Image Version.
    #
    class ReplicationStatus

      include MsRestAzure

      # @return [AggregatedReplicationState] This is the aggregated replication
      # status based on all the regional replication status flags. Possible
      # values include: 'Unknown', 'InProgress', 'Completed', 'Failed'
      attr_accessor :aggregated_state

      # @return [Array<RegionalReplicationStatus>] This is a summary of
      # replication status for each region.
      attr_accessor :summary


      #
      # Mapper for ReplicationStatus class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ReplicationStatus',
          type: {
            name: 'Composite',
            class_name: 'ReplicationStatus',
            model_properties: {
              aggregated_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'aggregatedState',
                type: {
                  name: 'String'
                }
              },
              summary: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'summary',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'RegionalReplicationStatusElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'RegionalReplicationStatus'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
