# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Compute::Mgmt::V2019_12_01
  module Models
    #
    # Optional. Allows users to provide customer managed keys for encrypting
    # the OS and data disks in the gallery artifact.
    #
    class EncryptionImages

      include MsRestAzure

      # @return [OSDiskImageEncryption]
      attr_accessor :os_disk_image

      # @return [Array<DataDiskImageEncryption>] A list of encryption
      # specifications for data disk images.
      attr_accessor :data_disk_images


      #
      # Mapper for EncryptionImages class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'EncryptionImages',
          type: {
            name: 'Composite',
            class_name: 'EncryptionImages',
            model_properties: {
              os_disk_image: {
                client_side_validation: true,
                required: false,
                serialized_name: 'osDiskImage',
                type: {
                  name: 'Composite',
                  class_name: 'OSDiskImageEncryption'
                }
              },
              data_disk_images: {
                client_side_validation: true,
                required: false,
                serialized_name: 'dataDiskImages',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'DataDiskImageEncryptionElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'DataDiskImageEncryption'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
