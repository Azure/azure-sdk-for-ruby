# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::TimeSeriesInsights::Mgmt::V2018_08_15_preview
  module Models
    #
    # An object that represents the status of warm storage on an environment.
    #
    class WarmStorageEnvironmentStatus

      include MsRestAzure

      # @return [WarmStoragePropertiesState] This string represents the state
      # of warm storage properties usage. It can be "Ok", "Error", "Unknown".
      # Possible values include: 'Ok', 'Error', 'Unknown'
      attr_accessor :state

      # @return [Integer] A value that represents the number of properties used
      # by the environment for S1/S2 SKU and number of properties used by Warm
      # Store for PAYG SKU
      attr_accessor :current_count

      # @return [Integer] A value that represents the maximum number of
      # properties used allowed by the environment for S1/S2 SKU and maximum
      # number of properties allowed by Warm Store for PAYG SKU.
      attr_accessor :max_count


      #
      # Mapper for WarmStorageEnvironmentStatus class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'WarmStorageEnvironmentStatus',
          type: {
            name: 'Composite',
            class_name: 'WarmStorageEnvironmentStatus',
            model_properties: {
              state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'propertiesUsage.state',
                type: {
                  name: 'String'
                }
              },
              current_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'propertiesUsage.stateDetails.currentCount',
                constraints: {
                  InclusiveMaximum: 10,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              },
              max_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'propertiesUsage.stateDetails.maxCount',
                constraints: {
                  InclusiveMaximum: 10,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
