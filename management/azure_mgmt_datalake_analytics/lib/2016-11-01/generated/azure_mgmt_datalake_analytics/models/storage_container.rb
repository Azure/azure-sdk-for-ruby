# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataLakeAnalytics::Mgmt::V2016_11_01
  module Models
    #
    # Azure Storage blob container information.
    #
    class StorageContainer

      include MsRestAzure

      # @return [String] the unique identifier of the blob container.
      attr_accessor :id

      # @return [String] the name of the blob container.
      attr_accessor :name

      # @return [String] the type of the blob container.
      attr_accessor :type

      # @return [DateTime] the last modified time of the blob container.
      attr_accessor :last_modified_time


      #
      # Mapper for StorageContainer class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'StorageContainer',
          type: {
            name: 'Composite',
            class_name: 'StorageContainer',
            model_properties: {
              id: {
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              last_modified_time: {
                required: false,
                read_only: true,
                serialized_name: 'properties.lastModifiedTime',
                type: {
                  name: 'DateTime'
                }
              }
            }
          }
        }
      end
    end
  end
end
