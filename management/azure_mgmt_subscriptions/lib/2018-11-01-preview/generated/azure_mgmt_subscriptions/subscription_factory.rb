# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Subscriptions::Mgmt::V2018_11_01_preview
  #
  # Subscription client provides an interface to create and manage Azure
  # subscriptions programmatically.
  #
  class SubscriptionFactory
    include MsRestAzure

    #
    # Creates and initializes a new instance of the SubscriptionFactory class.
    # @param client service class for accessing basic functionality.
    #
    def initialize(client)
      @client = client
    end

    # @return [SubscriptionClient] reference to the SubscriptionClient
    attr_reader :client

    #
    # The operation to create a new Azure subscription
    #
    # @param billing_account_name [String] The name of the Microsoft Customer
    # Agreement billing account for which you want to create the subscription.
    # @param invoice_section_name [String] The name of the invoice section in the
    # billing account for which you want to create the subscription.
    # @param body [ModernSubscriptionCreationParameters] The subscription creation
    # parameters.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [SubscriptionCreationResult] operation results.
    #
    def create_subscription(billing_account_name, invoice_section_name, body, custom_headers:nil)
      response = create_subscription_async(billing_account_name, invoice_section_name, body, custom_headers:custom_headers).value!
      response.body unless response.nil?
    end

    #
    # @param billing_account_name [String] The name of the Microsoft Customer
    # Agreement billing account for which you want to create the subscription.
    # @param invoice_section_name [String] The name of the invoice section in the
    # billing account for which you want to create the subscription.
    # @param body [ModernSubscriptionCreationParameters] The subscription creation
    # parameters.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Concurrent::Promise] promise which provides async access to http
    # response.
    #
    def create_subscription_async(billing_account_name, invoice_section_name, body, custom_headers:nil)
      # Send request
      promise = begin_create_subscription_async(billing_account_name, invoice_section_name, body, custom_headers:custom_headers)

      promise = promise.then do |response|
        # Defining deserialization method.
        deserialize_method = lambda do |parsed_response|
          result_mapper = Azure::Subscriptions::Mgmt::V2018_11_01_preview::Models::SubscriptionCreationResult.mapper()
          parsed_response = @client.deserialize(result_mapper, parsed_response)
        end

        # Waiting for response.
        @client.get_long_running_operation_result(response, deserialize_method)
      end

      promise
    end

    #
    # The operation to create a new Azure subscription
    #
    # @param billing_account_name [String] The name of the Microsoft Customer
    # Agreement billing account for which you want to create the subscription.
    # @param invoice_section_name [String] The name of the invoice section in the
    # billing account for which you want to create the subscription.
    # @param body [ModernSubscriptionCreationParameters] The subscription creation
    # parameters.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [SubscriptionCreationResult] operation results.
    #
    def begin_create_subscription(billing_account_name, invoice_section_name, body, custom_headers:nil)
      response = begin_create_subscription_async(billing_account_name, invoice_section_name, body, custom_headers:custom_headers).value!
      response.body unless response.nil?
    end

    #
    # The operation to create a new Azure subscription
    #
    # @param billing_account_name [String] The name of the Microsoft Customer
    # Agreement billing account for which you want to create the subscription.
    # @param invoice_section_name [String] The name of the invoice section in the
    # billing account for which you want to create the subscription.
    # @param body [ModernSubscriptionCreationParameters] The subscription creation
    # parameters.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def begin_create_subscription_with_http_info(billing_account_name, invoice_section_name, body, custom_headers:nil)
      begin_create_subscription_async(billing_account_name, invoice_section_name, body, custom_headers:custom_headers).value!
    end

    #
    # The operation to create a new Azure subscription
    #
    # @param billing_account_name [String] The name of the Microsoft Customer
    # Agreement billing account for which you want to create the subscription.
    # @param invoice_section_name [String] The name of the invoice section in the
    # billing account for which you want to create the subscription.
    # @param body [ModernSubscriptionCreationParameters] The subscription creation
    # parameters.
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def begin_create_subscription_async(billing_account_name, invoice_section_name, body, custom_headers:nil)
      fail ArgumentError, 'billing_account_name is nil' if billing_account_name.nil?
      fail ArgumentError, 'invoice_section_name is nil' if invoice_section_name.nil?
      fail ArgumentError, '@client.api_version is nil' if @client.api_version.nil?
      fail ArgumentError, 'body is nil' if body.nil?


      request_headers = {}
      request_headers['Content-Type'] = 'application/json; charset=utf-8'

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?

      # Serialize Request
      request_mapper = Azure::Subscriptions::Mgmt::V2018_11_01_preview::Models::ModernSubscriptionCreationParameters.mapper()
      request_content = @client.serialize(request_mapper,  body)
      request_content = request_content != nil ? JSON.generate(request_content, quirks_mode: true) : nil

      path_template = 'providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Subscription/createSubscription'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'billingAccountName' => billing_account_name,'invoiceSectionName' => invoice_section_name},
          query_params: {'api-version' => @client.api_version},
          body: request_content,
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:post, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200 || status_code == 202
          error_model = JSON.load(response_content)
          fail MsRest::HttpOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        result.correlation_request_id = http_response['x-ms-correlation-request-id'] unless http_response['x-ms-correlation-request-id'].nil?
        result.client_request_id = http_response['x-ms-client-request-id'] unless http_response['x-ms-client-request-id'].nil?
        # Deserialize Response
        if status_code == 200
          begin
            parsed_response = response_content.to_s.empty? ? nil : JSON.load(response_content)
            result_mapper = Azure::Subscriptions::Mgmt::V2018_11_01_preview::Models::SubscriptionCreationResult.mapper()
            result.body = @client.deserialize(result_mapper, parsed_response)
          rescue Exception => e
            fail MsRest::DeserializationError.new('Error occurred in deserializing the response', e.message, e.backtrace, result)
          end
        end

        result
      end

      promise.execute
    end

  end
end
