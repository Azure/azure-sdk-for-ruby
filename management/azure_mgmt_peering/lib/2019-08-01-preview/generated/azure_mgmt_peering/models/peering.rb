# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Peering::Mgmt::V2019_08_01_preview
  module Models
    #
    # Peering is a logical representation of a set of connections to the
    # Microsoft Cloud Edge at a location.
    #
    class Peering < Resource

      include MsRestAzure

      # @return [PeeringSku] The SKU that defines the tier and kind of the
      # peering.
      attr_accessor :sku

      # @return [Kind] The kind of the peering. Possible values include:
      # 'Direct', 'Exchange'
      attr_accessor :kind

      # @return [PeeringPropertiesDirect] The properties that define a direct
      # peering.
      attr_accessor :direct

      # @return [PeeringPropertiesExchange] The properties that define an
      # exchange peering.
      attr_accessor :exchange

      # @return [String] The location of the peering.
      attr_accessor :peering_location

      # @return [ProvisioningState] The provisioning state of the resource.
      # Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
      attr_accessor :provisioning_state

      # @return [String] The location of the resource.
      attr_accessor :location

      # @return [Hash{String => String}] The resource tags.
      attr_accessor :tags


      #
      # Mapper for Peering class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Peering',
          type: {
            name: 'Composite',
            class_name: 'Peering',
            model_properties: {
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              sku: {
                client_side_validation: true,
                required: true,
                serialized_name: 'sku',
                type: {
                  name: 'Composite',
                  class_name: 'PeeringSku'
                }
              },
              kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'kind',
                type: {
                  name: 'String'
                }
              },
              direct: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.direct',
                type: {
                  name: 'Composite',
                  class_name: 'PeeringPropertiesDirect'
                }
              },
              exchange: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.exchange',
                type: {
                  name: 'Composite',
                  class_name: 'PeeringPropertiesExchange'
                }
              },
              peering_location: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.peeringLocation',
                type: {
                  name: 'String'
                }
              },
              provisioning_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.provisioningState',
                type: {
                  name: 'String'
                }
              },
              location: {
                client_side_validation: true,
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
