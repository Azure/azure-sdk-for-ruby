# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DeploymentManager::Mgmt::V2018_09_01_preview
  module Models
    #
    # Defines the PUT rollout request body.
    #
    class RolloutRequest < TrackedResource

      include MsRestAzure

      # @return [Identity] Identity for the resource.
      attr_accessor :identity

      # @return [String] The version of the build being deployed.
      attr_accessor :build_version

      # @return [String] The reference to the artifact source resource Id where
      # the payload is located.
      attr_accessor :artifact_source_id

      # @return [String] The resource Id of the service topology from which
      # service units are being referenced in step groups to be deployed.
      attr_accessor :target_service_topology_id

      # @return [Array<Step>] The list of step groups that define the
      # orchestration.
      attr_accessor :step_groups


      #
      # Mapper for RolloutRequest class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'RolloutRequest',
          type: {
            name: 'Composite',
            class_name: 'RolloutRequest',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              location: {
                client_side_validation: true,
                required: true,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              identity: {
                client_side_validation: true,
                required: true,
                serialized_name: 'identity',
                type: {
                  name: 'Composite',
                  class_name: 'Identity'
                }
              },
              build_version: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.buildVersion',
                type: {
                  name: 'String'
                }
              },
              artifact_source_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.artifactSourceId',
                type: {
                  name: 'String'
                }
              },
              target_service_topology_id: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.targetServiceTopologyId',
                type: {
                  name: 'String'
                }
              },
              step_groups: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.stepGroups',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StepElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'Step'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
