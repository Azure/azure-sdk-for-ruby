# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Billing
  #
  # Billing client provides access to billing resources for Azure Web-Direct
  # subscriptions. Other subscription types which were not purchased directly
  # through the Azure web portal are not supported through this preview API.
  #
  class Invoices
    include MsRestAzure

    #
    # Creates and initializes a new instance of the Invoices class.
    # @param client service class for accessing basic functionality.
    #
    def initialize(client)
      @client = client
    end

    # @return [BillingManagementClient] reference to the BillingManagementClient
    attr_reader :client

    #
    # Lists the available invoices for a subscription in reverse chronological
    # order beginning with the most recent invoice. In preview, invoices are
    # available via this API only for invoice periods which end December 1, 2016 or
    # later.
    #
    # @param expand [String] May be used to expand the downloadUrl property within
    # a list of invoices. This enables download links to be generated for multiple
    # invoices at once. By default, downloadURLs are not included when listing
    # invoices.
    # @param filter [String] May be used to filter invoices by
    # invoicePeriodEndDate. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and
    # 'and'. It does not currently support 'ne', 'or', or 'not'.
    # @param skiptoken [String] Skiptoken is only used if a previous operation
    # returned a partial result. If a previous response contains a nextLink
    # element, the value of the nextLink element will include a skiptoken parameter
    # that specifies a starting point to use for subsequent calls.
    # @param top [Integer] May be used to limit the number of results to the most
    # recent N invoices.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Array<Invoice>] operation results.
    #
    def list(expand = nil, filter = nil, skiptoken = nil, top = nil, custom_headers = nil)
      first_page = list_as_lazy(expand, filter, skiptoken, top, custom_headers)
      first_page.get_all_items
    end

    #
    # Lists the available invoices for a subscription in reverse chronological
    # order beginning with the most recent invoice. In preview, invoices are
    # available via this API only for invoice periods which end December 1, 2016 or
    # later.
    #
    # @param expand [String] May be used to expand the downloadUrl property within
    # a list of invoices. This enables download links to be generated for multiple
    # invoices at once. By default, downloadURLs are not included when listing
    # invoices.
    # @param filter [String] May be used to filter invoices by
    # invoicePeriodEndDate. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and
    # 'and'. It does not currently support 'ne', 'or', or 'not'.
    # @param skiptoken [String] Skiptoken is only used if a previous operation
    # returned a partial result. If a previous response contains a nextLink
    # element, the value of the nextLink element will include a skiptoken parameter
    # that specifies a starting point to use for subsequent calls.
    # @param top [Integer] May be used to limit the number of results to the most
    # recent N invoices.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def list_with_http_info(expand = nil, filter = nil, skiptoken = nil, top = nil, custom_headers = nil)
      list_async(expand, filter, skiptoken, top, custom_headers).value!
    end

    #
    # Lists the available invoices for a subscription in reverse chronological
    # order beginning with the most recent invoice. In preview, invoices are
    # available via this API only for invoice periods which end December 1, 2016 or
    # later.
    #
    # @param expand [String] May be used to expand the downloadUrl property within
    # a list of invoices. This enables download links to be generated for multiple
    # invoices at once. By default, downloadURLs are not included when listing
    # invoices.
    # @param filter [String] May be used to filter invoices by
    # invoicePeriodEndDate. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and
    # 'and'. It does not currently support 'ne', 'or', or 'not'.
    # @param skiptoken [String] Skiptoken is only used if a previous operation
    # returned a partial result. If a previous response contains a nextLink
    # element, the value of the nextLink element will include a skiptoken parameter
    # that specifies a starting point to use for subsequent calls.
    # @param top [Integer] May be used to limit the number of results to the most
    # recent N invoices.
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def list_async(expand = nil, filter = nil, skiptoken = nil, top = nil, custom_headers = nil)
      fail ArgumentError, '@client.subscription_id is nil' if @client.subscription_id.nil?
      fail ArgumentError, '@client.api_version is nil' if @client.api_version.nil?


      request_headers = {}

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?
      path_template = 'subscriptions/{subscriptionId}/providers/Microsoft.Billing/invoices'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'subscriptionId' => @client.subscription_id},
          query_params: {'api-version' => @client.api_version,'$expand' => expand,'$filter' => filter,'$skiptoken' => skiptoken,'$top' => top},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRest::HttpOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        # Deserialize Response
        if status_code == 200
          begin
            parsed_response = response_content.to_s.empty? ? nil : JSON.load(response_content)
            result_mapper = Azure::ARM::Billing::Models::InvoicesListResult.mapper()
            result.body = @client.deserialize(result_mapper, parsed_response)
          rescue Exception => e
            fail MsRest::DeserializationError.new('Error occurred in deserializing the response', e.message, e.backtrace, result)
          end
        end

        result
      end

      promise.execute
    end

    #
    # Gets a named invoice resource. When getting a single invoice, the downloadUrl
    # property is expanded automatically.
    #
    # @param invoice_name [String] The name of an invoice resource.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Invoice] operation results.
    #
    def get(invoice_name, custom_headers = nil)
      response = get_async(invoice_name, custom_headers).value!
      response.body unless response.nil?
    end

    #
    # Gets a named invoice resource. When getting a single invoice, the downloadUrl
    # property is expanded automatically.
    #
    # @param invoice_name [String] The name of an invoice resource.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def get_with_http_info(invoice_name, custom_headers = nil)
      get_async(invoice_name, custom_headers).value!
    end

    #
    # Gets a named invoice resource. When getting a single invoice, the downloadUrl
    # property is expanded automatically.
    #
    # @param invoice_name [String] The name of an invoice resource.
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def get_async(invoice_name, custom_headers = nil)
      fail ArgumentError, '@client.subscription_id is nil' if @client.subscription_id.nil?
      fail ArgumentError, '@client.api_version is nil' if @client.api_version.nil?
      fail ArgumentError, 'invoice_name is nil' if invoice_name.nil?


      request_headers = {}

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?
      path_template = 'subscriptions/{subscriptionId}/providers/Microsoft.Billing/invoices/{invoiceName}'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'subscriptionId' => @client.subscription_id,'invoiceName' => invoice_name},
          query_params: {'api-version' => @client.api_version},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRest::HttpOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        # Deserialize Response
        if status_code == 200
          begin
            parsed_response = response_content.to_s.empty? ? nil : JSON.load(response_content)
            result_mapper = Azure::ARM::Billing::Models::Invoice.mapper()
            result.body = @client.deserialize(result_mapper, parsed_response)
          rescue Exception => e
            fail MsRest::DeserializationError.new('Error occurred in deserializing the response', e.message, e.backtrace, result)
          end
        end

        result
      end

      promise.execute
    end

    #
    # Gets the most recent invoice. When getting a single invoice, the downloadUrl
    # property is expanded automatically.
    #
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Invoice] operation results.
    #
    def get_latest(custom_headers = nil)
      response = get_latest_async(custom_headers).value!
      response.body unless response.nil?
    end

    #
    # Gets the most recent invoice. When getting a single invoice, the downloadUrl
    # property is expanded automatically.
    #
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def get_latest_with_http_info(custom_headers = nil)
      get_latest_async(custom_headers).value!
    end

    #
    # Gets the most recent invoice. When getting a single invoice, the downloadUrl
    # property is expanded automatically.
    #
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def get_latest_async(custom_headers = nil)
      fail ArgumentError, '@client.subscription_id is nil' if @client.subscription_id.nil?
      fail ArgumentError, '@client.api_version is nil' if @client.api_version.nil?


      request_headers = {}

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?
      path_template = 'subscriptions/{subscriptionId}/providers/Microsoft.Billing/invoices/latest'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'subscriptionId' => @client.subscription_id},
          query_params: {'api-version' => @client.api_version},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRest::HttpOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        # Deserialize Response
        if status_code == 200
          begin
            parsed_response = response_content.to_s.empty? ? nil : JSON.load(response_content)
            result_mapper = Azure::ARM::Billing::Models::Invoice.mapper()
            result.body = @client.deserialize(result_mapper, parsed_response)
          rescue Exception => e
            fail MsRest::DeserializationError.new('Error occurred in deserializing the response', e.message, e.backtrace, result)
          end
        end

        result
      end

      promise.execute
    end

    #
    # Lists the available invoices for a subscription in reverse chronological
    # order beginning with the most recent invoice. In preview, invoices are
    # available via this API only for invoice periods which end December 1, 2016 or
    # later.
    #
    # @param next_page_link [String] The NextLink from the previous successful call
    # to List operation.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [InvoicesListResult] operation results.
    #
    def list_next(next_page_link, custom_headers = nil)
      response = list_next_async(next_page_link, custom_headers).value!
      response.body unless response.nil?
    end

    #
    # Lists the available invoices for a subscription in reverse chronological
    # order beginning with the most recent invoice. In preview, invoices are
    # available via this API only for invoice periods which end December 1, 2016 or
    # later.
    #
    # @param next_page_link [String] The NextLink from the previous successful call
    # to List operation.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def list_next_with_http_info(next_page_link, custom_headers = nil)
      list_next_async(next_page_link, custom_headers).value!
    end

    #
    # Lists the available invoices for a subscription in reverse chronological
    # order beginning with the most recent invoice. In preview, invoices are
    # available via this API only for invoice periods which end December 1, 2016 or
    # later.
    #
    # @param next_page_link [String] The NextLink from the previous successful call
    # to List operation.
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def list_next_async(next_page_link, custom_headers = nil)
      fail ArgumentError, 'next_page_link is nil' if next_page_link.nil?


      request_headers = {}

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?
      path_template = '{nextLink}'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          skip_encoding_path_params: {'nextLink' => next_page_link},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRest::HttpOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        # Deserialize Response
        if status_code == 200
          begin
            parsed_response = response_content.to_s.empty? ? nil : JSON.load(response_content)
            result_mapper = Azure::ARM::Billing::Models::InvoicesListResult.mapper()
            result.body = @client.deserialize(result_mapper, parsed_response)
          rescue Exception => e
            fail MsRest::DeserializationError.new('Error occurred in deserializing the response', e.message, e.backtrace, result)
          end
        end

        result
      end

      promise.execute
    end

    #
    # Lists the available invoices for a subscription in reverse chronological
    # order beginning with the most recent invoice. In preview, invoices are
    # available via this API only for invoice periods which end December 1, 2016 or
    # later.
    #
    # @param expand [String] May be used to expand the downloadUrl property within
    # a list of invoices. This enables download links to be generated for multiple
    # invoices at once. By default, downloadURLs are not included when listing
    # invoices.
    # @param filter [String] May be used to filter invoices by
    # invoicePeriodEndDate. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and
    # 'and'. It does not currently support 'ne', 'or', or 'not'.
    # @param skiptoken [String] Skiptoken is only used if a previous operation
    # returned a partial result. If a previous response contains a nextLink
    # element, the value of the nextLink element will include a skiptoken parameter
    # that specifies a starting point to use for subsequent calls.
    # @param top [Integer] May be used to limit the number of results to the most
    # recent N invoices.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [InvoicesListResult] which provide lazy access to pages of the
    # response.
    #
    def list_as_lazy(expand = nil, filter = nil, skiptoken = nil, top = nil, custom_headers = nil)
      response = list_async(expand, filter, skiptoken, top, custom_headers).value!
      unless response.nil?
        page = response.body
        page.next_method = Proc.new do |next_page_link|
          list_next_async(next_page_link, custom_headers)
        end
        page
      end
    end

  end
end
