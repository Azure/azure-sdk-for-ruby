# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Logic
  #
  # A service client - single point of access to the REST API.
  #
  class LogicManagementClient < MsRestAzure::AzureServiceClient
    include MsRestAzure
    include MsRestAzure::Serialization

    # @return [String] the base URI of the service.
    attr_accessor :base_url

    # @return Credentials needed for the client to connect to Azure.
    attr_reader :credentials

    # @return [String] The subscription id.
    attr_accessor :subscription_id

    # @return [String] The API version.
    attr_reader :api_version

    # @return [String] Gets or sets the preferred language for the response.
    attr_accessor :accept_language

    # @return [Integer] Gets or sets the retry timeout in seconds for Long
    # Running Operations. Default value is 30.
    attr_accessor :long_running_operation_retry_timeout

    # @return [Boolean] When set to true a unique x-ms-client-request-id value
    # is generated and included in each request. Default is true.
    attr_accessor :generate_client_request_id

    # @return Subscription credentials which uniquely identify client
    # subscription.
    attr_accessor :credentials

    # @return [IntegrationAccounts] integration_accounts
    attr_reader :integration_accounts

    # @return [IntegrationAccountSchemas] integration_account_schemas
    attr_reader :integration_account_schemas

    # @return [IntegrationAccountMaps] integration_account_maps
    attr_reader :integration_account_maps

    # @return [IntegrationAccountPartners] integration_account_partners
    attr_reader :integration_account_partners

    # @return [IntegrationAccountAgreements] integration_account_agreements
    attr_reader :integration_account_agreements

    # @return [IntegrationAccountCertificates] integration_account_certificates
    attr_reader :integration_account_certificates

    #
    # Creates initializes a new instance of the LogicManagementClient class.
    # @param credentials [MsRest::ServiceClientCredentials] credentials to authorize HTTP requests made by the service client.
    # @param base_url [String] the base URI of the service.
    # @param options [Array] filters to be applied to the HTTP requests.
    #
    def initialize(credentials, base_url = nil, options = nil)
      super(credentials, options)
      @base_url = base_url || 'https://management.azure.com'

      fail ArgumentError, 'credentials is nil' if credentials.nil?
      fail ArgumentError, 'invalid type of credentials input parameter' unless credentials.is_a?(MsRest::ServiceClientCredentials)
      @credentials = credentials

      @integration_accounts = IntegrationAccounts.new(self)
      @integration_account_schemas = IntegrationAccountSchemas.new(self)
      @integration_account_maps = IntegrationAccountMaps.new(self)
      @integration_account_partners = IntegrationAccountPartners.new(self)
      @integration_account_agreements = IntegrationAccountAgreements.new(self)
      @integration_account_certificates = IntegrationAccountCertificates.new(self)
      @api_version = '2015-08-01-preview'
      @accept_language = 'en-US'
      @long_running_operation_retry_timeout = 30
      @generate_client_request_id = true
    end

  end
end
