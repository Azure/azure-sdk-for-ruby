# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::DataLakeStore::FileSystem
  module Models
    #
    # Data Lake Store file or directory information.
    #
    class FileStatusProperties

      include MsRestAzure

      # @return [Integer] the last access time as ticks since the epoch.
      attr_accessor :access_time

      # @return [Integer] the block size for the file.
      attr_accessor :block_size

      # @return [Integer] the number of children in the directory.
      attr_accessor :children_num

      # @return [String] the group owner.
      attr_accessor :group

      # @return [Integer] the number of bytes in a file.
      attr_accessor :length

      # @return [Integer] the modification time as ticks since the epoch.
      attr_accessor :modification_time

      # @return [String] the user who is the owner.
      attr_accessor :owner

      # @return [String] the path suffix.
      attr_accessor :path_suffix

      # @return [String] the permission represented as an string.
      attr_accessor :permission

      # @return [FileType] the type of the path object. Possible values
      # include: 'FILE', 'DIRECTORY'
      attr_accessor :type


      #
      # Mapper for FileStatusProperties class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'FileStatusProperties',
          type: {
            name: 'Composite',
            class_name: 'FileStatusProperties',
            model_properties: {
              access_time: {
                required: false,
                read_only: true,
                serialized_name: 'accessTime',
                type: {
                  name: 'Number'
                }
              },
              block_size: {
                required: false,
                read_only: true,
                serialized_name: 'blockSize',
                type: {
                  name: 'Number'
                }
              },
              children_num: {
                required: false,
                read_only: true,
                serialized_name: 'childrenNum',
                type: {
                  name: 'Number'
                }
              },
              group: {
                required: false,
                read_only: true,
                serialized_name: 'group',
                type: {
                  name: 'String'
                }
              },
              length: {
                required: false,
                read_only: true,
                serialized_name: 'length',
                type: {
                  name: 'Number'
                }
              },
              modification_time: {
                required: false,
                read_only: true,
                serialized_name: 'modificationTime',
                type: {
                  name: 'Number'
                }
              },
              owner: {
                required: false,
                read_only: true,
                serialized_name: 'owner',
                type: {
                  name: 'String'
                }
              },
              path_suffix: {
                required: false,
                read_only: true,
                serialized_name: 'pathSuffix',
                type: {
                  name: 'String'
                }
              },
              permission: {
                required: false,
                read_only: true,
                serialized_name: 'permission',
                type: {
                  name: 'String'
                }
              },
              type: {
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'Enum',
                  module: 'FileType'
                }
              }
            }
          }
        }
      end
    end
  end
end
