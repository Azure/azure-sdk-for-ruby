# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_4_0_36
  module Models
    #
    # The list of application health state chunks in the cluster that respect
    # the input filters in the chunk query. Returned by get cluster health
    # state chunks query.
    #
    class ApplicationHealthStateChunkList < EntityHealthStateChunkList

      include MsRestAzure

      # @return [Array<ApplicationHealthStateChunk>] The list of application
      # health state chunks that respect the input filters in the chunk query.
      attr_accessor :items


      #
      # Mapper for ApplicationHealthStateChunkList class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ApplicationHealthStateChunkList',
          type: {
            name: 'Composite',
            class_name: 'ApplicationHealthStateChunkList',
            model_properties: {
              total_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'TotalCount',
                type: {
                  name: 'Number'
                }
              },
              items: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Items',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ApplicationHealthStateChunkElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ApplicationHealthStateChunk'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
