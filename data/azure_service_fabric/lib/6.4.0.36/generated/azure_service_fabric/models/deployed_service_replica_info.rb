# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_4_0_36
  module Models
    #
    # Information about a Service Fabric service replica deployed on a node.
    #
    class DeployedServiceReplicaInfo

      include MsRestAzure

      @@discriminatorMap = Hash.new
      @@discriminatorMap["Stateful"] = "DeployedStatefulServiceReplicaInfo"
      @@discriminatorMap["Stateless"] = "DeployedStatelessServiceInstanceInfo"

      def initialize
        @ServiceKind = "DeployedServiceReplicaInfo"
      end

      attr_accessor :ServiceKind

      # @return [String] The full name of the service with 'fabric:' URI
      # scheme.
      attr_accessor :service_name

      # @return [String] Name of the service type as specified in the service
      # manifest.
      attr_accessor :service_type_name

      # @return [String] The name of the service manifest in which this service
      # type is defined.
      attr_accessor :service_manifest_name

      # @return [String] The name of the code package that hosts this replica.
      attr_accessor :code_package_name

      # @return An internal ID used by Service Fabric to uniquely identify a
      # partition. This is a randomly generated GUID when the service was
      # created. The partition ID is unique and does not change for the
      # lifetime of the service. If the same service was deleted and recreated
      # the IDs of its partitions would be different.
      attr_accessor :partition_id

      # @return [ReplicaStatus] The status of a replica of a service. Possible
      # values include: 'Invalid', 'InBuild', 'Standby', 'Ready', 'Down',
      # 'Dropped'
      attr_accessor :replica_status

      # @return [String] The last address returned by the replica in Open or
      # ChangeRole.
      attr_accessor :address

      # @return [String] The ActivationId of a deployed service package. If
      # ServicePackageActivationMode specified at the time of creating the
      # service
      # is 'SharedProcess' (or if it is not specified, in which case it
      # defaults to 'SharedProcess'), then value of ServicePackageActivationId
      # is always an empty string.
      attr_accessor :service_package_activation_id

      # @return [String] Host process ID of the process that is hosting the
      # replica. This will be zero if the replica is down. In hyper-v
      # containers this host process ID will be from different kernel.
      attr_accessor :host_process_id


      #
      # Mapper for DeployedServiceReplicaInfo class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DeployedServiceReplicaInfo',
          type: {
            name: 'Composite',
            polymorphic_discriminator: 'ServiceKind',
            uber_parent: 'DeployedServiceReplicaInfo',
            class_name: 'DeployedServiceReplicaInfo',
            model_properties: {
              service_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ServiceName',
                type: {
                  name: 'String'
                }
              },
              service_type_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ServiceTypeName',
                type: {
                  name: 'String'
                }
              },
              service_manifest_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ServiceManifestName',
                type: {
                  name: 'String'
                }
              },
              code_package_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'CodePackageName',
                type: {
                  name: 'String'
                }
              },
              partition_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'PartitionId',
                type: {
                  name: 'String'
                }
              },
              replica_status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ReplicaStatus',
                type: {
                  name: 'String'
                }
              },
              address: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Address',
                type: {
                  name: 'String'
                }
              },
              service_package_activation_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ServicePackageActivationId',
                type: {
                  name: 'String'
                }
              },
              host_process_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'HostProcessId',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
