# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_4_0_36
  module Models
    #
    # Represents health evaluation for a replica, containing information about
    # the data and the algorithm used by health store to evaluate health. The
    # evaluation is returned only when the aggregated health state is either
    # Error or Warning.
    #
    class ReplicaHealthEvaluation < HealthEvaluation

      include MsRestAzure


      def initialize
        @Kind = "Replica"
      end

      attr_accessor :Kind

      # @return Id of the partition to which the replica belongs.
      attr_accessor :partition_id

      # @return [String] Id of a stateful service replica or a stateless
      # service instance. This ID is used in the queries that apply to both
      # stateful and stateless services. It is used by Service Fabric to
      # uniquely identify a replica of a partition of a stateful service or an
      # instance of a stateless service partition. It is unique within a
      # partition and does not change for the lifetime of the replica or the
      # instance. If a stateful replica gets dropped and another replica gets
      # created on the same node for the same partition, it will get a
      # different value for the ID. If a stateless instance is failed over on
      # the same or different node it will get a different value for the ID.
      attr_accessor :replica_or_instance_id

      # @return [Array<HealthEvaluationWrapper>] List of unhealthy evaluations
      # that led to the current aggregated health state of the replica. The
      # types of the unhealthy evaluations can be EventHealthEvaluation.
      attr_accessor :unhealthy_evaluations


      #
      # Mapper for ReplicaHealthEvaluation class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Replica',
          type: {
            name: 'Composite',
            class_name: 'ReplicaHealthEvaluation',
            model_properties: {
              aggregated_health_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'AggregatedHealthState',
                type: {
                  name: 'String'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Description',
                type: {
                  name: 'String'
                }
              },
              Kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'Kind',
                type: {
                  name: 'String'
                }
              },
              partition_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'PartitionId',
                type: {
                  name: 'String'
                }
              },
              replica_or_instance_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ReplicaOrInstanceId',
                type: {
                  name: 'String'
                }
              },
              unhealthy_evaluations: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UnhealthyEvaluations',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'HealthEvaluationWrapperElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'HealthEvaluationWrapper'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
