# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_4_0_36
  module Models
    #
    # Chaos Started event.
    #
    class ChaosStartedEvent < ClusterEvent

      include MsRestAzure


      def initialize
        @Kind = "ChaosStarted"
      end

      attr_accessor :Kind

      # @return [Integer] Maximum number of concurrent faults.
      attr_accessor :max_concurrent_faults

      # @return [Float] Time to run in seconds.
      attr_accessor :time_to_run_in_seconds

      # @return [Float] Maximum timeout for cluster stabilization in seconds.
      attr_accessor :max_cluster_stabilization_timeout_in_seconds

      # @return [Float] Wait time between iterations in seconds.
      attr_accessor :wait_time_between_iterations_in_seconds

      # @return [Float] Wait time between faults in seconds.
      attr_accessor :wait_time_between_fautls_in_seconds

      # @return [Boolean] Indicates MoveReplica fault is enabled.
      attr_accessor :move_replica_fault_enabled

      # @return [String] List of included Node types.
      attr_accessor :included_node_type_list

      # @return [String] List of included Applications.
      attr_accessor :included_application_list

      # @return [String] Health policy.
      attr_accessor :cluster_health_policy

      # @return [String] Chaos Context.
      attr_accessor :chaos_context


      #
      # Mapper for ChaosStartedEvent class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ChaosStarted',
          type: {
            name: 'Composite',
            class_name: 'ChaosStartedEvent',
            model_properties: {
              event_instance_id: {
                client_side_validation: true,
                required: true,
                serialized_name: 'EventInstanceId',
                type: {
                  name: 'String'
                }
              },
              category: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Category',
                type: {
                  name: 'String'
                }
              },
              time_stamp: {
                client_side_validation: true,
                required: true,
                serialized_name: 'TimeStamp',
                type: {
                  name: 'DateTime'
                }
              },
              has_correlated_events: {
                client_side_validation: true,
                required: false,
                serialized_name: 'HasCorrelatedEvents',
                type: {
                  name: 'Boolean'
                }
              },
              Kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'Kind',
                type: {
                  name: 'String'
                }
              },
              max_concurrent_faults: {
                client_side_validation: true,
                required: true,
                serialized_name: 'MaxConcurrentFaults',
                type: {
                  name: 'Number'
                }
              },
              time_to_run_in_seconds: {
                client_side_validation: true,
                required: true,
                serialized_name: 'TimeToRunInSeconds',
                type: {
                  name: 'Double'
                }
              },
              max_cluster_stabilization_timeout_in_seconds: {
                client_side_validation: true,
                required: true,
                serialized_name: 'MaxClusterStabilizationTimeoutInSeconds',
                type: {
                  name: 'Double'
                }
              },
              wait_time_between_iterations_in_seconds: {
                client_side_validation: true,
                required: true,
                serialized_name: 'WaitTimeBetweenIterationsInSeconds',
                type: {
                  name: 'Double'
                }
              },
              wait_time_between_fautls_in_seconds: {
                client_side_validation: true,
                required: true,
                serialized_name: 'WaitTimeBetweenFautlsInSeconds',
                type: {
                  name: 'Double'
                }
              },
              move_replica_fault_enabled: {
                client_side_validation: true,
                required: true,
                serialized_name: 'MoveReplicaFaultEnabled',
                type: {
                  name: 'Boolean'
                }
              },
              included_node_type_list: {
                client_side_validation: true,
                required: true,
                serialized_name: 'IncludedNodeTypeList',
                type: {
                  name: 'String'
                }
              },
              included_application_list: {
                client_side_validation: true,
                required: true,
                serialized_name: 'IncludedApplicationList',
                type: {
                  name: 'String'
                }
              },
              cluster_health_policy: {
                client_side_validation: true,
                required: true,
                serialized_name: 'ClusterHealthPolicy',
                type: {
                  name: 'String'
                }
              },
              chaos_context: {
                client_side_validation: true,
                required: true,
                serialized_name: 'ChaosContext',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
