# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_4_0_36
  module Models
    #
    # Describes a container and its runtime properties.
    #
    class ContainerCodePackageProperties

      include MsRestAzure

      # @return [String] The name of the code package.
      attr_accessor :name

      # @return [String] The Container image to use.
      attr_accessor :image

      # @return [ImageRegistryCredential] Image registry credential.
      attr_accessor :image_registry_credential

      # @return [String] Override for the default entry point in the container.
      attr_accessor :entrypoint

      # @return [Array<String>] Command array to execute within the container
      # in exec form.
      attr_accessor :commands

      # @return [Array<EnvironmentVariable>] The environment variables to set
      # in this container
      attr_accessor :environment_variables

      # @return [Array<Setting>] The settings to set in this container. The
      # setting file path can be fetched from environment variable
      # "Fabric_SettingPath". The path for Windows container is "C:\\secrets".
      # The path for Linux container is "/var/secrets".
      attr_accessor :settings

      # @return [Array<ContainerLabel>] The labels to set in this container.
      attr_accessor :labels

      # @return [Array<EndpointProperties>] The endpoints exposed by this
      # container.
      attr_accessor :endpoints

      # @return [ResourceRequirements] The resources required by this
      # container.
      attr_accessor :resources

      # @return [Array<VolumeReference>] Volumes to be attached to the
      # container. The lifetime of these volumes is independent of the
      # application's lifetime.
      attr_accessor :volume_refs

      # @return [Array<ApplicationScopedVolume>] Volumes to be attached to the
      # container. The lifetime of these volumes is scoped to the application's
      # lifetime.
      attr_accessor :volumes

      # @return [DiagnosticsRef] Reference to sinks in DiagnosticsDescription.
      attr_accessor :diagnostics

      # @return [Array<ReliableCollectionsRef>] A list of ReliableCollection
      # resources used by this particular code package. Please refer to
      # ReliableCollectionsRef for more details.
      attr_accessor :reliable_collections_refs

      # @return [ContainerInstanceView] Runtime information of a container
      # instance.
      attr_accessor :instance_view


      #
      # Mapper for ContainerCodePackageProperties class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ContainerCodePackageProperties',
          type: {
            name: 'Composite',
            class_name: 'ContainerCodePackageProperties',
            model_properties: {
              name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              image: {
                client_side_validation: true,
                required: true,
                serialized_name: 'image',
                type: {
                  name: 'String'
                }
              },
              image_registry_credential: {
                client_side_validation: true,
                required: false,
                serialized_name: 'imageRegistryCredential',
                type: {
                  name: 'Composite',
                  class_name: 'ImageRegistryCredential'
                }
              },
              entrypoint: {
                client_side_validation: true,
                required: false,
                serialized_name: 'entrypoint',
                type: {
                  name: 'String'
                }
              },
              commands: {
                client_side_validation: true,
                required: false,
                serialized_name: 'commands',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              environment_variables: {
                client_side_validation: true,
                required: false,
                serialized_name: 'environmentVariables',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'EnvironmentVariableElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'EnvironmentVariable'
                      }
                  }
                }
              },
              settings: {
                client_side_validation: true,
                required: false,
                serialized_name: 'settings',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'SettingElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'Setting'
                      }
                  }
                }
              },
              labels: {
                client_side_validation: true,
                required: false,
                serialized_name: 'labels',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ContainerLabelElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ContainerLabel'
                      }
                  }
                }
              },
              endpoints: {
                client_side_validation: true,
                required: false,
                serialized_name: 'endpoints',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'EndpointPropertiesElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'EndpointProperties'
                      }
                  }
                }
              },
              resources: {
                client_side_validation: true,
                required: true,
                serialized_name: 'resources',
                type: {
                  name: 'Composite',
                  class_name: 'ResourceRequirements'
                }
              },
              volume_refs: {
                client_side_validation: true,
                required: false,
                serialized_name: 'volumeRefs',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'VolumeReferenceElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'VolumeReference'
                      }
                  }
                }
              },
              volumes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'volumes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ApplicationScopedVolumeElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ApplicationScopedVolume'
                      }
                  }
                }
              },
              diagnostics: {
                client_side_validation: true,
                required: false,
                serialized_name: 'diagnostics',
                type: {
                  name: 'Composite',
                  class_name: 'DiagnosticsRef'
                }
              },
              reliable_collections_refs: {
                client_side_validation: true,
                required: false,
                serialized_name: 'reliableCollectionsRefs',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ReliableCollectionsRefElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ReliableCollectionsRef'
                      }
                  }
                }
              },
              instance_view: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'instanceView',
                type: {
                  name: 'Composite',
                  class_name: 'ContainerInstanceView'
                }
              }
            }
          }
        }
      end
    end
  end
end
