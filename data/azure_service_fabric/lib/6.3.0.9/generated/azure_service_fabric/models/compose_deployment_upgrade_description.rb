# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_3_0_9
  module Models
    #
    # Describes the parameters for a compose deployment upgrade.
    #
    class ComposeDeploymentUpgradeDescription

      include MsRestAzure

      # @return [String] The name of the deployment.
      attr_accessor :deployment_name

      # @return [String] The content of the compose file that describes the
      # deployment to create.
      attr_accessor :compose_file_content

      # @return [RegistryCredential] Credential information to connect to
      # container registry.
      attr_accessor :registry_credential

      # @return [UpgradeKind] The kind of upgrade out of the following possible
      # values. Possible values include: 'Invalid', 'Rolling'. Default value:
      # 'Rolling' .
      attr_accessor :upgrade_kind

      # @return [UpgradeMode] The mode used to monitor health during a rolling
      # upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and
      # Monitored. Possible values include: 'Invalid', 'UnmonitoredAuto',
      # 'UnmonitoredManual', 'Monitored'. Default value: 'UnmonitoredAuto' .
      attr_accessor :rolling_upgrade_mode

      # @return [Integer] The maximum amount of time to block processing of an
      # upgrade domain and prevent loss of availability when there are
      # unexpected issues. When this timeout expires, processing of the upgrade
      # domain will proceed regardless of availability loss issues. The timeout
      # is reset at the start of each upgrade domain. Valid values are between
      # 0 and 42949672925 inclusive. (unsigned 32-bit integer).
      attr_accessor :upgrade_replica_set_check_timeout_in_seconds

      # @return [Boolean] If true, then processes are forcefully restarted
      # during upgrade even when the code version has not changed (the upgrade
      # only changes configuration or data).
      attr_accessor :force_restart

      # @return [MonitoringPolicyDescription] Describes the parameters for
      # monitoring an upgrade in Monitored mode.
      attr_accessor :monitoring_policy

      # @return [ApplicationHealthPolicy] Defines a health policy used to
      # evaluate the health of an application or one of its children entities.
      attr_accessor :application_health_policy


      #
      # Mapper for ComposeDeploymentUpgradeDescription class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ComposeDeploymentUpgradeDescription',
          type: {
            name: 'Composite',
            class_name: 'ComposeDeploymentUpgradeDescription',
            model_properties: {
              deployment_name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'DeploymentName',
                type: {
                  name: 'String'
                }
              },
              compose_file_content: {
                client_side_validation: true,
                required: true,
                serialized_name: 'ComposeFileContent',
                type: {
                  name: 'String'
                }
              },
              registry_credential: {
                client_side_validation: true,
                required: false,
                serialized_name: 'RegistryCredential',
                type: {
                  name: 'Composite',
                  class_name: 'RegistryCredential'
                }
              },
              upgrade_kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'UpgradeKind',
                default_value: 'Rolling',
                type: {
                  name: 'String'
                }
              },
              rolling_upgrade_mode: {
                client_side_validation: true,
                required: false,
                serialized_name: 'RollingUpgradeMode',
                default_value: 'UnmonitoredAuto',
                type: {
                  name: 'String'
                }
              },
              upgrade_replica_set_check_timeout_in_seconds: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UpgradeReplicaSetCheckTimeoutInSeconds',
                type: {
                  name: 'Number'
                }
              },
              force_restart: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ForceRestart',
                type: {
                  name: 'Boolean'
                }
              },
              monitoring_policy: {
                client_side_validation: true,
                required: false,
                serialized_name: 'MonitoringPolicy',
                type: {
                  name: 'Composite',
                  class_name: 'MonitoringPolicyDescription'
                }
              },
              application_health_policy: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ApplicationHealthPolicy',
                type: {
                  name: 'Composite',
                  class_name: 'ApplicationHealthPolicy'
                }
              }
            }
          }
        }
      end
    end
  end
end
