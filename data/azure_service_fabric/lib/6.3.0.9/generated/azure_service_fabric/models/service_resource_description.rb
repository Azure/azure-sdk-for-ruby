# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_3_0_9
  module Models
    #
    # Describes a service fabric service resource.
    #
    class ServiceResourceDescription

      include MsRestAzure

      # @return [OperatingSystemTypes] The Operating system type required by
      # the code in service. Possible values include: 'Linux', 'Windows'
      attr_accessor :os_type

      # @return [Array<ContainerCodePackageProperties>] Describes the set of
      # code packages that forms the service. A code package describes the
      # container and the properties for running it. All the code packages are
      # started together on the same host and share the same context (network,
      # process etc.).
      attr_accessor :code_packages

      # @return [Array<NetworkRef>] The names of the private networks that this
      # service needs to be part of.
      attr_accessor :network_refs

      # @return [DiagnosticsRef] Reference to sinks in DiagnosticsDescription.
      attr_accessor :diagnostics

      # @return [String] User readable description of the service.
      attr_accessor :description

      # @return [Integer] The number of replicas of the service to create.
      # Defaults to 1 if not specified.
      attr_accessor :replica_count

      # @return [HealthState] The health state of a Service Fabric entity such
      # as Cluster, Node, Application, Service, Partition, Replica etc.
      # Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'
      attr_accessor :health_state

      # @return [ServiceResourceStatus] Represents the status of the service.
      # Possible values include: 'Unknown', 'Active', 'Upgrading', 'Deleting',
      # 'Creating', 'Failed'
      attr_accessor :status

      # @return [String] Service resource name.
      attr_accessor :name


      #
      # Mapper for ServiceResourceDescription class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ServiceResourceDescription',
          type: {
            name: 'Composite',
            class_name: 'ServiceResourceDescription',
            model_properties: {
              os_type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.osType',
                type: {
                  name: 'String'
                }
              },
              code_packages: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.codePackages',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ContainerCodePackagePropertiesElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ContainerCodePackageProperties'
                      }
                  }
                }
              },
              network_refs: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.networkRefs',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'NetworkRefElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'NetworkRef'
                      }
                  }
                }
              },
              diagnostics: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.diagnostics',
                type: {
                  name: 'Composite',
                  class_name: 'DiagnosticsRef'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              replica_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.replicaCount',
                type: {
                  name: 'Number'
                }
              },
              health_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.healthState',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.status',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
