# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_3_0_9
  module Models
    #
    # Describes the parameters for an application upgrade.
    #
    class ApplicationUpgradeProgressInfo

      include MsRestAzure

      # @return [String] The name of the target application, including the
      # 'fabric:' URI scheme.
      attr_accessor :name

      # @return [String] The application type name as defined in the
      # application manifest.
      attr_accessor :type_name

      # @return [String] The target application type version (found in the
      # application manifest) for the application upgrade.
      attr_accessor :target_application_type_version

      # @return [Array<UpgradeDomainInfo>] List of upgrade domains and their
      # statuses.
      attr_accessor :upgrade_domains

      # @return [UpgradeState] The state of the upgrade domain. Possible values
      # include: 'Invalid', 'RollingBackInProgress', 'RollingBackCompleted',
      # 'RollingForwardPending', 'RollingForwardInProgress',
      # 'RollingForwardCompleted', 'Failed'
      attr_accessor :upgrade_state

      # @return [String] The name of the next upgrade domain to be processed.
      attr_accessor :next_upgrade_domain

      # @return [UpgradeMode] The mode used to monitor health during a rolling
      # upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and
      # Monitored. Possible values include: 'Invalid', 'UnmonitoredAuto',
      # 'UnmonitoredManual', 'Monitored'. Default value: 'UnmonitoredAuto' .
      attr_accessor :rolling_upgrade_mode

      # @return [ApplicationUpgradeDescription] Describes the parameters for an
      # application upgrade. Note that upgrade description replaces the
      # existing application description. This means that if the parameters are
      # not specified, the existing parameters on the applications will be
      # overwritten with the empty parameters list. This would result in the
      # application using the default value of the parameters from the
      # application manifest. If you do not want to change any existing
      # parameter values, please get the application parameters first using the
      # GetApplicationInfo query and then supply those values as Parameters in
      # this ApplicationUpgradeDescription.
      attr_accessor :upgrade_description

      # @return [String] The estimated total amount of time spent processing
      # the overall upgrade.
      attr_accessor :upgrade_duration_in_milliseconds

      # @return [String] The estimated total amount of time spent processing
      # the current upgrade domain.
      attr_accessor :upgrade_domain_duration_in_milliseconds

      # @return [Array<HealthEvaluationWrapper>] List of health evaluations
      # that resulted in the current aggregated health state.
      attr_accessor :unhealthy_evaluations

      # @return [CurrentUpgradeDomainProgressInfo] Information about the
      # current in-progress upgrade domain.
      attr_accessor :current_upgrade_domain_progress

      # @return [String] The estimated UTC datetime when the upgrade started.
      attr_accessor :start_timestamp_utc

      # @return [String] The estimated UTC datetime when the upgrade failed and
      # FailureAction was executed.
      attr_accessor :failure_timestamp_utc

      # @return [FailureReason] The cause of an upgrade failure that resulted
      # in FailureAction being executed. Possible values include: 'None',
      # 'Interrupted', 'HealthCheck', 'UpgradeDomainTimeout',
      # 'OverallUpgradeTimeout'
      attr_accessor :failure_reason

      # @return [FailureUpgradeDomainProgressInfo] Information about the
      # upgrade domain progress at the time of upgrade failure.
      attr_accessor :upgrade_domain_progress_at_failure

      # @return [String] Additional detailed information about the status of
      # the pending upgrade.
      attr_accessor :upgrade_status_details


      #
      # Mapper for ApplicationUpgradeProgressInfo class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ApplicationUpgradeProgressInfo',
          type: {
            name: 'Composite',
            class_name: 'ApplicationUpgradeProgressInfo',
            model_properties: {
              name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Name',
                type: {
                  name: 'String'
                }
              },
              type_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'TypeName',
                type: {
                  name: 'String'
                }
              },
              target_application_type_version: {
                client_side_validation: true,
                required: false,
                serialized_name: 'TargetApplicationTypeVersion',
                type: {
                  name: 'String'
                }
              },
              upgrade_domains: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UpgradeDomains',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'UpgradeDomainInfoElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'UpgradeDomainInfo'
                      }
                  }
                }
              },
              upgrade_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UpgradeState',
                type: {
                  name: 'String'
                }
              },
              next_upgrade_domain: {
                client_side_validation: true,
                required: false,
                serialized_name: 'NextUpgradeDomain',
                type: {
                  name: 'String'
                }
              },
              rolling_upgrade_mode: {
                client_side_validation: true,
                required: false,
                serialized_name: 'RollingUpgradeMode',
                default_value: 'UnmonitoredAuto',
                type: {
                  name: 'String'
                }
              },
              upgrade_description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UpgradeDescription',
                type: {
                  name: 'Composite',
                  class_name: 'ApplicationUpgradeDescription'
                }
              },
              upgrade_duration_in_milliseconds: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UpgradeDurationInMilliseconds',
                type: {
                  name: 'String'
                }
              },
              upgrade_domain_duration_in_milliseconds: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UpgradeDomainDurationInMilliseconds',
                type: {
                  name: 'String'
                }
              },
              unhealthy_evaluations: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UnhealthyEvaluations',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'HealthEvaluationWrapperElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'HealthEvaluationWrapper'
                      }
                  }
                }
              },
              current_upgrade_domain_progress: {
                client_side_validation: true,
                required: false,
                serialized_name: 'CurrentUpgradeDomainProgress',
                type: {
                  name: 'Composite',
                  class_name: 'CurrentUpgradeDomainProgressInfo'
                }
              },
              start_timestamp_utc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'StartTimestampUtc',
                type: {
                  name: 'String'
                }
              },
              failure_timestamp_utc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'FailureTimestampUtc',
                type: {
                  name: 'String'
                }
              },
              failure_reason: {
                client_side_validation: true,
                required: false,
                serialized_name: 'FailureReason',
                type: {
                  name: 'String'
                }
              },
              upgrade_domain_progress_at_failure: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UpgradeDomainProgressAtFailure',
                type: {
                  name: 'Composite',
                  class_name: 'FailureUpgradeDomainProgressInfo'
                }
              },
              upgrade_status_details: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UpgradeStatusDetails',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
