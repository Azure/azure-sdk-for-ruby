# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V7_0_0_42
  module Models
    #
    # Information about a Service Fabric service.
    #
    class ServiceInfo

      include MsRestAzure

      @@discriminatorMap = Hash.new
      @@discriminatorMap["Stateful"] = "StatefulServiceInfo"
      @@discriminatorMap["Stateless"] = "StatelessServiceInfo"

      def initialize
        @ServiceKind = "ServiceInfo"
      end

      attr_accessor :ServiceKind

      # @return [String] The identity of the service. This ID is an encoded
      # representation of the service name. This is used in the REST APIs to
      # identify the service resource.
      # Starting in version 6.0, hierarchical names are delimited with the "\~"
      # character. For example, if the service name is
      # "fabric:/myapp/app1/svc1",
      # the service identity would be "myapp~app1\~svc1" in 6.0+ and
      # "myapp/app1/svc1" in previous versions.
      attr_accessor :id

      # @return [String] The full name of the service with 'fabric:' URI
      # scheme.
      attr_accessor :name

      # @return [String] Name of the service type as specified in the service
      # manifest.
      attr_accessor :type_name

      # @return [String] The version of the service manifest.
      attr_accessor :manifest_version

      # @return [HealthState] The health state of a Service Fabric entity such
      # as Cluster, Node, Application, Service, Partition, Replica etc.
      # Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'
      attr_accessor :health_state

      # @return [ServiceStatus] The status of the application. Possible values
      # include: 'Unknown', 'Active', 'Upgrading', 'Deleting', 'Creating',
      # 'Failed'
      attr_accessor :service_status

      # @return [Boolean] Whether the service is in a service group.
      attr_accessor :is_service_group


      #
      # Mapper for ServiceInfo class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ServiceInfo',
          type: {
            name: 'Composite',
            polymorphic_discriminator: 'ServiceKind',
            uber_parent: 'ServiceInfo',
            class_name: 'ServiceInfo',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Name',
                type: {
                  name: 'String'
                }
              },
              type_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'TypeName',
                type: {
                  name: 'String'
                }
              },
              manifest_version: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ManifestVersion',
                type: {
                  name: 'String'
                }
              },
              health_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'HealthState',
                type: {
                  name: 'String'
                }
              },
              service_status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ServiceStatus',
                type: {
                  name: 'String'
                }
              },
              is_service_group: {
                client_side_validation: true,
                required: false,
                serialized_name: 'IsServiceGroup',
                type: {
                  name: 'Boolean'
                }
              }
            }
          }
        }
      end
    end
  end
end
