# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V7_0_0_42
  module Models
    #
    # Information about how many replicas are completed or pending for a
    # specific service during upgrade.
    #
    class ServiceUpgradeProgress

      include MsRestAzure

      # @return [String] Name of the Service resource.
      attr_accessor :service_name

      # @return [String] The number of replicas that completes the upgrade in
      # the service.
      attr_accessor :completed_replica_count

      # @return [String] The number of replicas that are waiting to be upgraded
      # in the service.
      attr_accessor :pending_replica_count


      #
      # Mapper for ServiceUpgradeProgress class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ServiceUpgradeProgress',
          type: {
            name: 'Composite',
            class_name: 'ServiceUpgradeProgress',
            model_properties: {
              service_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ServiceName',
                type: {
                  name: 'String'
                }
              },
              completed_replica_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'CompletedReplicaCount',
                type: {
                  name: 'String'
                }
              },
              pending_replica_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'PendingReplicaCount',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
