# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_2_0_9
  module Models
    #
    # Information about the node deactivation. This information is valid for a
    # node that is undergoing deactivation or has already been deactivated.
    #
    class NodeDeactivationInfo

      include MsRestAzure

      # @return [NodeDeactivationIntent] The intent or the reason for
      # deactivating the node. Following are the possible values for it.
      # Possible values include: 'Invalid', 'Pause', 'Restart', 'RemoveData',
      # 'RemoveNode'
      attr_accessor :node_deactivation_intent

      # @return [NodeDeactivationStatus] The status of node deactivation
      # operation. Following are the possible values. Possible values include:
      # 'None', 'SafetyCheckInProgress', 'SafetyCheckComplete', 'Completed'
      attr_accessor :node_deactivation_status

      # @return [Array<NodeDeactivationTask>] List of tasks representing the
      # deactivation operation on the node.
      attr_accessor :node_deactivation_task

      # @return [Array<SafetyCheckWrapper>] List of pending safety checks
      attr_accessor :pending_safety_checks


      #
      # Mapper for NodeDeactivationInfo class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'NodeDeactivationInfo',
          type: {
            name: 'Composite',
            class_name: 'NodeDeactivationInfo',
            model_properties: {
              node_deactivation_intent: {
                client_side_validation: true,
                required: false,
                serialized_name: 'NodeDeactivationIntent',
                type: {
                  name: 'String'
                }
              },
              node_deactivation_status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'NodeDeactivationStatus',
                type: {
                  name: 'String'
                }
              },
              node_deactivation_task: {
                client_side_validation: true,
                required: false,
                serialized_name: 'NodeDeactivationTask',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'NodeDeactivationTaskElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'NodeDeactivationTask'
                      }
                  }
                }
              },
              pending_safety_checks: {
                client_side_validation: true,
                required: false,
                serialized_name: 'PendingSafetyChecks',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'SafetyCheckWrapperElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'SafetyCheckWrapper'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
