# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ServiceFabric::V6_2_0_9
  module Models
    #
    # Information about a Service Fabric application.
    #
    class ApplicationInfo

      include MsRestAzure

      # @return [String] The identity of the application. This is an encoded
      # representation of the application name. This is used in the REST APIs
      # to identify the application resource.
      # Starting in version 6.0, hierarchical names are delimited with the "\~"
      # character. For example, if the application name is
      # "fabric:/myapp/app1",
      # the application identity would be "myapp\~app1" in 6.0+ and
      # "myapp/app1" in previous versions.
      attr_accessor :id

      # @return [String] The name of the application, including the 'fabric:'
      # URI scheme.
      attr_accessor :name

      # @return [String] The application type name as defined in the
      # application manifest.
      attr_accessor :type_name

      # @return [String] The version of the application type as defined in the
      # application manifest.
      attr_accessor :type_version

      # @return [ApplicationStatus] The status of the application. Possible
      # values include: 'Invalid', 'Ready', 'Upgrading', 'Creating',
      # 'Deleting', 'Failed'
      attr_accessor :status

      # @return [Array<ApplicationParameter>] List of application parameters
      # with overridden values from their default values specified in the
      # application manifest.
      attr_accessor :parameters

      # @return [HealthState] The health state of a Service Fabric entity such
      # as Cluster, Node, Application, Service, Partition, Replica etc.
      # Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'
      attr_accessor :health_state

      # @return [ApplicationDefinitionKind] The mechanism used to define a
      # Service Fabric application. Possible values include: 'Invalid',
      # 'ServiceFabricApplicationDescription', 'Compose'
      attr_accessor :application_definition_kind


      #
      # Mapper for ApplicationInfo class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ApplicationInfo',
          type: {
            name: 'Composite',
            class_name: 'ApplicationInfo',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Name',
                type: {
                  name: 'String'
                }
              },
              type_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'TypeName',
                type: {
                  name: 'String'
                }
              },
              type_version: {
                client_side_validation: true,
                required: false,
                serialized_name: 'TypeVersion',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Status',
                type: {
                  name: 'String'
                }
              },
              parameters: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Parameters',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ApplicationParameterElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ApplicationParameter'
                      }
                  }
                }
              },
              health_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'HealthState',
                type: {
                  name: 'String'
                }
              },
              application_definition_kind: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ApplicationDefinitionKind',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
