# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::CognitiveServices::LuisAuthoring::V3_0_preview
  module Models
    #
    # Exported Model - Phraselist Model Feature.
    #
    class JSONModelFeature

      include MsRestAzure

      # @return [Boolean] Indicates if the feature is enabled.
      attr_accessor :activated

      # @return [String] The Phraselist name.
      attr_accessor :name

      # @return [String] List of comma-separated phrases that represent the
      # Phraselist.
      attr_accessor :words

      # @return [Boolean] An interchangeable phrase list feature serves as a
      # list of synonyms for training. A non-exchangeable phrase list serves as
      # separate features for training. So, if your non-interchangeable phrase
      # list contains 5 phrases, they will be mapped to 5 separate features.
      # You can think of the non-interchangeable phrase list as an additional
      # bag of words to add to LUIS existing vocabulary features. It is used as
      # a lexicon lookup feature where its value is 1 if the lexicon contains a
      # given word or 0 if it doesnâ€™t.  Default value is true.
      attr_accessor :mode

      # @return [Boolean] Indicates if the Phraselist is enabled for all models
      # in the application. Default value: true .
      attr_accessor :enabled_for_all_models


      #
      # Mapper for JSONModelFeature class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'JSONModelFeature',
          type: {
            name: 'Composite',
            class_name: 'JSONModelFeature',
            model_properties: {
              activated: {
                client_side_validation: true,
                required: false,
                serialized_name: 'activated',
                type: {
                  name: 'Boolean'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              words: {
                client_side_validation: true,
                required: false,
                serialized_name: 'words',
                type: {
                  name: 'String'
                }
              },
              mode: {
                client_side_validation: true,
                required: false,
                serialized_name: 'mode',
                type: {
                  name: 'Boolean'
                }
              },
              enabled_for_all_models: {
                client_side_validation: true,
                required: false,
                serialized_name: 'enabledForAllModels',
                default_value: true,
                type: {
                  name: 'Boolean'
                }
              }
            }
          }
        }
      end
    end
  end
end
