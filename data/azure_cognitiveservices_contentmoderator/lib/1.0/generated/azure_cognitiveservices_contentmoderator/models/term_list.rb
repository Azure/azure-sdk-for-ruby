# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::CognitiveServices::ContentModerator::V1_0
  module Models
    #
    # Term List  Properties.
    #
    class TermList

      include MsRestAzure

      # @return [Integer] Term list Id.
      attr_accessor :id

      # @return [String] Term list name.
      attr_accessor :name

      # @return [String] Description for term list.
      attr_accessor :description

      # @return [Hash{String => String}] Term list metadata.
      attr_accessor :metadata


      #
      # Mapper for TermList class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'TermList',
          type: {
            name: 'Composite',
            class_name: 'TermList',
            model_properties: {
              id: {
                required: false,
                serialized_name: 'Id',
                type: {
                  name: 'Number'
                }
              },
              name: {
                required: false,
                serialized_name: 'Name',
                type: {
                  name: 'String'
                }
              },
              description: {
                required: false,
                serialized_name: 'Description',
                type: {
                  name: 'String'
                }
              },
              metadata: {
                required: false,
                serialized_name: 'Metadata',
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
