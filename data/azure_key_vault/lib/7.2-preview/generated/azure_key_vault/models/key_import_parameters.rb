# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::KeyVault::V7_2_preview
  module Models
    #
    # The key import parameters.
    #
    class KeyImportParameters

      include MsRestAzure

      # @return [Boolean] Whether to import as a hardware key (HSM) or software
      # key.
      attr_accessor :hsm

      # @return [JsonWebKey] The Json web key
      attr_accessor :key

      # @return [KeyAttributes] The key management attributes.
      attr_accessor :key_attributes

      # @return [Hash{String => String}] Application specific metadata in the
      # form of key-value pairs.
      attr_accessor :tags

      # @return [KeyReleasePolicy] The policy rules under which the key can be
      # exported.
      attr_accessor :release_policy


      #
      # Mapper for KeyImportParameters class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'KeyImportParameters',
          type: {
            name: 'Composite',
            class_name: 'KeyImportParameters',
            model_properties: {
              hsm: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Hsm',
                type: {
                  name: 'Boolean'
                }
              },
              key: {
                client_side_validation: true,
                required: true,
                serialized_name: 'key',
                type: {
                  name: 'Composite',
                  class_name: 'JsonWebKey'
                }
              },
              key_attributes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'attributes',
                type: {
                  name: 'Composite',
                  class_name: 'KeyAttributes'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              release_policy: {
                client_side_validation: true,
                required: false,
                serialized_name: 'release_policy',
                type: {
                  name: 'Composite',
                  class_name: 'KeyReleasePolicy'
                }
              }
            }
          }
        }
      end
    end
  end
end
