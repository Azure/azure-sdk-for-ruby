# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::KeyVault::V7_2_preview
  module Models
    #
    # A SAS definition bundle consists of key vault SAS definition details plus
    # its attributes.
    #
    class SasDefinitionBundle

      include MsRestAzure

      # @return [String] The SAS definition id.
      attr_accessor :id

      # @return [String] Storage account SAS definition secret id.
      attr_accessor :secret_id

      # @return [String] The SAS definition token template signed with an
      # arbitrary key.  Tokens created according to the SAS definition will
      # have the same properties as the template.
      attr_accessor :template_uri

      # @return [SasTokenType] The type of SAS token the SAS definition will
      # create. Possible values include: 'account', 'service'
      attr_accessor :sas_type

      # @return [String] The validity period of SAS tokens created according to
      # the SAS definition.
      attr_accessor :validity_period

      # @return [SasDefinitionAttributes] The SAS definition attributes.
      attr_accessor :attributes

      # @return [Hash{String => String}] Application specific metadata in the
      # form of key-value pairs
      attr_accessor :tags


      #
      # Mapper for SasDefinitionBundle class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'SasDefinitionBundle',
          type: {
            name: 'Composite',
            class_name: 'SasDefinitionBundle',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              secret_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'sid',
                type: {
                  name: 'String'
                }
              },
              template_uri: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'templateUri',
                type: {
                  name: 'String'
                }
              },
              sas_type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'sasType',
                type: {
                  name: 'String'
                }
              },
              validity_period: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'validityPeriod',
                type: {
                  name: 'String'
                }
              },
              attributes: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'attributes',
                type: {
                  name: 'Composite',
                  class_name: 'SasDefinitionAttributes'
                }
              },
              tags: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'tags',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
