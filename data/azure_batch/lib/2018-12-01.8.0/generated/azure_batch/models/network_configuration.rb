# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Batch::V2018_12_01_8_0
  module Models
    #
    # The network configuration for a pool.
    #
    class NetworkConfiguration

      include MsRestAzure

      # @return [String] The ARM resource identifier of the virtual network
      # subnet which the compute nodes of the pool will join. This is of the
      # form
      # /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
      # The virtual network must be in the same region and subscription as the
      # Azure Batch account. The specified subnet should have enough free IP
      # addresses to accommodate the number of nodes in the pool. If the subnet
      # doesn't have enough free IP addresses, the pool will partially allocate
      # compute nodes, and a resize error will occur. For pools created with
      # virtualMachineConfiguration only ARM virtual networks
      # ('Microsoft.Network/virtualNetworks') are supported, but for pools
      # created with cloudServiceConfiguration both ARM and classic virtual
      # networks are supported. For more details, see:
      # https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
      attr_accessor :subnet_id

      # @return [DynamicVNetAssignmentScope] The scope of dynamic vnet
      # assignment. Possible values include: 'none', 'job'
      attr_accessor :dynamic_vnet_assignment_scope

      # @return [PoolEndpointConfiguration] The configuration for endpoints on
      # compute nodes in the Batch pool. Pool endpoint configuration is only
      # supported on pools with the virtualMachineConfiguration property.
      attr_accessor :endpoint_configuration


      #
      # Mapper for NetworkConfiguration class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'NetworkConfiguration',
          type: {
            name: 'Composite',
            class_name: 'NetworkConfiguration',
            model_properties: {
              subnet_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'subnetId',
                type: {
                  name: 'String'
                }
              },
              dynamic_vnet_assignment_scope: {
                client_side_validation: true,
                required: false,
                serialized_name: 'dynamicVNetAssignmentScope',
                type: {
                  name: 'Enum',
                  module: 'DynamicVNetAssignmentScope'
                }
              },
              endpoint_configuration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'endpointConfiguration',
                type: {
                  name: 'Composite',
                  class_name: 'PoolEndpointConfiguration'
                }
              }
            }
          }
        }
      end
    end
  end
end
