# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Batch::V2017_09_01_6_0
  module Models
    #
    # Settings which will be used by the data disks associated to compute nodes
    # in the pool.
    #
    #
    class DataDisk

      include MsRestAzure

      # @return [Integer] The logical unit number. The lun is used to uniquely
      # identify each data disk. If attaching multiple disks, each should have
      # a distinct lun.
      attr_accessor :lun

      # @return [CachingType] The type of caching to be enabled for the data
      # disks. The default value for caching is none. For information about the
      # caching options see:
      # https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
      # Possible values include: 'none', 'readOnly', 'readWrite'
      attr_accessor :caching

      # @return [Integer] The initial disk size in gigabytes.
      attr_accessor :disk_size_gb

      # @return [StorageAccountType] The storage account type to be used for
      # the data disk. If omitted, the default is "standard_lrs". Possible
      # values include: 'StandardLRS', 'PremiumLRS'
      attr_accessor :storage_account_type


      #
      # Mapper for DataDisk class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DataDisk',
          type: {
            name: 'Composite',
            class_name: 'DataDisk',
            model_properties: {
              lun: {
                client_side_validation: true,
                required: true,
                serialized_name: 'lun',
                type: {
                  name: 'Number'
                }
              },
              caching: {
                client_side_validation: true,
                required: false,
                serialized_name: 'caching',
                type: {
                  name: 'Enum',
                  module: 'CachingType'
                }
              },
              disk_size_gb: {
                client_side_validation: true,
                required: true,
                serialized_name: 'diskSizeGB',
                type: {
                  name: 'Number'
                }
              },
              storage_account_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'storageAccountType',
                type: {
                  name: 'Enum',
                  module: 'StorageAccountType'
                }
              }
            }
          }
        }
      end
    end
  end
end
