# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Batch::V2017_09_01_6_0
  module Models
    #
    # A certificate that can be installed on compute nodes and can be used to
    # authenticate operations on the machine.
    #
    #
    class CertificateAddParameter

      include MsRestAzure

      # @return [String] The X.509 thumbprint of the certificate. This is a
      # sequence of up to 40 hex digits (it may include spaces but these are
      # removed).
      attr_accessor :thumbprint

      # @return [String] The algorithm used to derive the thumbprint. This must
      # be sha1.
      attr_accessor :thumbprint_algorithm

      # @return [String] The base64-encoded contents of the certificate. The
      # maximum size is 10KB.
      attr_accessor :data

      # @return [CertificateFormat] The format of the certificate data.
      # Possible values include: 'pfx', 'cer'
      attr_accessor :certificate_format

      # @return [String] The password to access the certificate's private key.
      # This is required if the certificate format is pfx. It should be omitted
      # if the certificate format is cer.
      attr_accessor :password


      #
      # Mapper for CertificateAddParameter class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'CertificateAddParameter',
          type: {
            name: 'Composite',
            class_name: 'CertificateAddParameter',
            model_properties: {
              thumbprint: {
                client_side_validation: true,
                required: true,
                serialized_name: 'thumbprint',
                type: {
                  name: 'String'
                }
              },
              thumbprint_algorithm: {
                client_side_validation: true,
                required: true,
                serialized_name: 'thumbprintAlgorithm',
                type: {
                  name: 'String'
                }
              },
              data: {
                client_side_validation: true,
                required: true,
                serialized_name: 'data',
                type: {
                  name: 'String'
                }
              },
              certificate_format: {
                client_side_validation: true,
                required: false,
                serialized_name: 'certificateFormat',
                type: {
                  name: 'Enum',
                  module: 'CertificateFormat'
                }
              },
              password: {
                client_side_validation: true,
                required: false,
                serialized_name: 'password',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
