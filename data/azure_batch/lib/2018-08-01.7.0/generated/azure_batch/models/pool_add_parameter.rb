# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Batch::V2018_08_01_7_0
  module Models
    #
    # A pool in the Azure Batch service to add.
    #
    #
    class PoolAddParameter

      include MsRestAzure

      # @return [String] A string that uniquely identifies the pool within the
      # account. The ID can contain any combination of alphanumeric characters
      # including hyphens and underscores, and cannot contain more than 64
      # characters. The ID is case-preserving and case-insensitive (that is,
      # you may not have two pool IDs within an account that differ only by
      # case).
      attr_accessor :id

      # @return [String] The display name for the pool. The display name need
      # not be unique and can contain any Unicode characters up to a maximum
      # length of 1024.
      attr_accessor :display_name

      # @return [String] The size of virtual machines in the pool. All virtual
      # machines in a pool are the same size. For information about available
      # sizes of virtual machines for Cloud Services pools (pools created with
      # cloudServiceConfiguration), see Sizes for Cloud Services
      # (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).
      # Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and
      # A2V2. For information about available VM sizes for pools using images
      # from the Virtual Machines Marketplace (pools created with
      # virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
      # (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)
      # or Sizes for Virtual Machines (Windows)
      # (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).
      # Batch supports all Azure VM sizes except STANDARD_A0 and those with
      # premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
      attr_accessor :vm_size

      # @return [CloudServiceConfiguration] The cloud service configuration for
      # the pool. This property and virtualMachineConfiguration are mutually
      # exclusive and one of the properties must be specified. This property
      # cannot be specified if the Batch account was created with its
      # poolAllocationMode property set to 'UserSubscription'.
      attr_accessor :cloud_service_configuration

      # @return [VirtualMachineConfiguration] The virtual machine configuration
      # for the pool. This property and cloudServiceConfiguration are mutually
      # exclusive and one of the properties must be specified.
      attr_accessor :virtual_machine_configuration

      # @return [Duration] The timeout for allocation of compute nodes to the
      # pool. This timeout applies only to manual scaling; it has no effect
      # when enableAutoScale is set to true. The default value is 15 minutes.
      # The minimum value is 5 minutes. If you specify a value less than 5
      # minutes, the Batch service returns an error; if you are calling the
      # REST API directly, the HTTP status code is 400 (Bad Request).
      attr_accessor :resize_timeout

      # @return [Integer] The desired number of dedicated compute nodes in the
      # pool. This property must not be specified if enableAutoScale is set to
      # true. If enableAutoScale is set to false, then you must set either
      # targetDedicatedNodes, targetLowPriorityNodes, or both.
      attr_accessor :target_dedicated_nodes

      # @return [Integer] The desired number of low-priority compute nodes in
      # the pool. This property must not be specified if enableAutoScale is set
      # to true. If enableAutoScale is set to false, then you must set either
      # targetDedicatedNodes, targetLowPriorityNodes, or both.
      attr_accessor :target_low_priority_nodes

      # @return [Boolean] Whether the pool size should automatically adjust
      # over time. If false, at least one of targetDedicateNodes and
      # targetLowPriorityNodes must be specified. If true, the autoScaleFormula
      # property is required and the pool automatically resizes according to
      # the formula. The default value is false.
      attr_accessor :enable_auto_scale

      # @return [String] A formula for the desired number of compute nodes in
      # the pool. This property must not be specified if enableAutoScale is set
      # to false. It is required if enableAutoScale is set to true. The formula
      # is checked for validity before the pool is created. If the formula is
      # not valid, the Batch service rejects the request with detailed error
      # information. For more information about specifying this formula, see
      # 'Automatically scale compute nodes in an Azure Batch pool'
      # (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/).
      attr_accessor :auto_scale_formula

      # @return [Duration] The time interval at which to automatically adjust
      # the pool size according to the autoscale formula. The default value is
      # 15 minutes. The minimum and maximum value are 5 minutes and 168 hours
      # respectively. If you specify a value less than 5 minutes or greater
      # than 168 hours, the Batch service returns an error; if you are calling
      # the REST API directly, the HTTP status code is 400 (Bad Request).
      attr_accessor :auto_scale_evaluation_interval

      # @return [Boolean] Whether the pool permits direct communication between
      # nodes. Enabling inter-node communication limits the maximum size of the
      # pool due to deployment restrictions on the nodes of the pool. This may
      # result in the pool not reaching its desired size. The default value is
      # false.
      attr_accessor :enable_inter_node_communication

      # @return [NetworkConfiguration] The network configuration for the pool.
      attr_accessor :network_configuration

      # @return [StartTask] A task specified to run on each compute node as it
      # joins the pool. The task runs when the node is added to the pool or
      # when the node is restarted.
      attr_accessor :start_task

      # @return [Array<CertificateReference>] The list of certificates to be
      # installed on each compute node in the pool. For Windows compute nodes,
      # the Batch service installs the certificates to the specified
      # certificate store and location. For Linux compute nodes, the
      # certificates are stored in a directory inside the task working
      # directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
      # supplied to the task to query for this location. For certificates with
      # visibility of 'remoteUser', a 'certs' directory is created in the
      # user's home directory (e.g., /home/{user-name}/certs) and certificates
      # are placed in that directory.
      attr_accessor :certificate_references

      # @return [Array<ApplicationPackageReference>] The list of application
      # packages to be installed on each compute node in the pool.
      attr_accessor :application_package_references

      # @return [Array<String>] The list of application licenses the Batch
      # service will make available on each compute node in the pool. The list
      # of application licenses must be a subset of available Batch service
      # application licenses. If a license is requested which is not supported,
      # pool creation will fail.
      attr_accessor :application_licenses

      # @return [Integer] The maximum number of tasks that can run concurrently
      # on a single compute node in the pool. The default value is 1. The
      # maximum value of this setting depends on the size of the compute nodes
      # in the pool (the vmSize setting).
      attr_accessor :max_tasks_per_node

      # @return [TaskSchedulingPolicy] How tasks are distributed across compute
      # nodes in a pool.
      attr_accessor :task_scheduling_policy

      # @return [Array<UserAccount>] The list of user accounts to be created on
      # each node in the pool.
      attr_accessor :user_accounts

      # @return [Array<MetadataItem>] A list of name-value pairs associated
      # with the pool as metadata. The Batch service does not assign any
      # meaning to metadata; it is solely for the use of user code.
      attr_accessor :metadata


      #
      # Mapper for PoolAddParameter class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'PoolAddParameter',
          type: {
            name: 'Composite',
            class_name: 'PoolAddParameter',
            model_properties: {
              id: {
                client_side_validation: true,
                required: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              display_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'displayName',
                type: {
                  name: 'String'
                }
              },
              vm_size: {
                client_side_validation: true,
                required: true,
                serialized_name: 'vmSize',
                type: {
                  name: 'String'
                }
              },
              cloud_service_configuration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'cloudServiceConfiguration',
                type: {
                  name: 'Composite',
                  class_name: 'CloudServiceConfiguration'
                }
              },
              virtual_machine_configuration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'virtualMachineConfiguration',
                type: {
                  name: 'Composite',
                  class_name: 'VirtualMachineConfiguration'
                }
              },
              resize_timeout: {
                client_side_validation: true,
                required: false,
                serialized_name: 'resizeTimeout',
                type: {
                  name: 'TimeSpan'
                }
              },
              target_dedicated_nodes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'targetDedicatedNodes',
                type: {
                  name: 'Number'
                }
              },
              target_low_priority_nodes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'targetLowPriorityNodes',
                type: {
                  name: 'Number'
                }
              },
              enable_auto_scale: {
                client_side_validation: true,
                required: false,
                serialized_name: 'enableAutoScale',
                type: {
                  name: 'Boolean'
                }
              },
              auto_scale_formula: {
                client_side_validation: true,
                required: false,
                serialized_name: 'autoScaleFormula',
                type: {
                  name: 'String'
                }
              },
              auto_scale_evaluation_interval: {
                client_side_validation: true,
                required: false,
                serialized_name: 'autoScaleEvaluationInterval',
                type: {
                  name: 'TimeSpan'
                }
              },
              enable_inter_node_communication: {
                client_side_validation: true,
                required: false,
                serialized_name: 'enableInterNodeCommunication',
                type: {
                  name: 'Boolean'
                }
              },
              network_configuration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'networkConfiguration',
                type: {
                  name: 'Composite',
                  class_name: 'NetworkConfiguration'
                }
              },
              start_task: {
                client_side_validation: true,
                required: false,
                serialized_name: 'startTask',
                type: {
                  name: 'Composite',
                  class_name: 'StartTask'
                }
              },
              certificate_references: {
                client_side_validation: true,
                required: false,
                serialized_name: 'certificateReferences',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'CertificateReferenceElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'CertificateReference'
                      }
                  }
                }
              },
              application_package_references: {
                client_side_validation: true,
                required: false,
                serialized_name: 'applicationPackageReferences',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ApplicationPackageReferenceElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ApplicationPackageReference'
                      }
                  }
                }
              },
              application_licenses: {
                client_side_validation: true,
                required: false,
                serialized_name: 'applicationLicenses',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              max_tasks_per_node: {
                client_side_validation: true,
                required: false,
                serialized_name: 'maxTasksPerNode',
                type: {
                  name: 'Number'
                }
              },
              task_scheduling_policy: {
                client_side_validation: true,
                required: false,
                serialized_name: 'taskSchedulingPolicy',
                type: {
                  name: 'Composite',
                  class_name: 'TaskSchedulingPolicy'
                }
              },
              user_accounts: {
                client_side_validation: true,
                required: false,
                serialized_name: 'userAccounts',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'UserAccountElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'UserAccount'
                      }
                  }
                }
              },
              metadata: {
                client_side_validation: true,
                required: false,
                serialized_name: 'metadata',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MetadataItemElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MetadataItem'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
