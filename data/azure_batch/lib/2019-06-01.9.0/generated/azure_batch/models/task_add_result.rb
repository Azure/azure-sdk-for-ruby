# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Batch::V2019_06_01_9_0
  module Models
    #
    # Result for a single Task added as part of an add Task collection
    # operation.
    #
    #
    class TaskAddResult

      include MsRestAzure

      # @return [TaskAddStatus] The status of the add Task request. Possible
      # values include: 'success', 'clientError', 'serverError'
      attr_accessor :status

      # @return [String] The ID of the Task for which this is the result.
      attr_accessor :task_id

      # @return [String] The ETag of the Task, if the Task was successfully
      # added. You can use this to detect whether the Task has changed between
      # requests. In particular, you can be pass the ETag with an Update Task
      # request to specify that your changes should take effect only if nobody
      # else has modified the Job in the meantime.
      attr_accessor :e_tag

      # @return [DateTime] The last modified time of the Task.
      attr_accessor :last_modified

      # @return [String] The URL of the Task, if the Task was successfully
      # added.
      attr_accessor :location

      # @return [BatchError] The error encountered while attempting to add the
      # Task.
      attr_accessor :error


      #
      # Mapper for TaskAddResult class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'TaskAddResult',
          type: {
            name: 'Composite',
            class_name: 'TaskAddResult',
            model_properties: {
              status: {
                client_side_validation: true,
                required: true,
                serialized_name: 'status',
                type: {
                  name: 'Enum',
                  module: 'TaskAddStatus'
                }
              },
              task_id: {
                client_side_validation: true,
                required: true,
                serialized_name: 'taskId',
                type: {
                  name: 'String'
                }
              },
              e_tag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'eTag',
                type: {
                  name: 'String'
                }
              },
              last_modified: {
                client_side_validation: true,
                required: false,
                serialized_name: 'lastModified',
                type: {
                  name: 'DateTime'
                }
              },
              location: {
                client_side_validation: true,
                required: false,
                serialized_name: 'location',
                type: {
                  name: 'String'
                }
              },
              error: {
                client_side_validation: true,
                required: false,
                serialized_name: 'error',
                type: {
                  name: 'Composite',
                  class_name: 'BatchError'
                }
              }
            }
          }
        }
      end
    end
  end
end
