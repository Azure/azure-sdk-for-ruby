# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Batch::V2019_06_01_9_0
  module Models
    #
    # The set of changes to be made to a Job.
    #
    #
    class JobUpdateParameter

      include MsRestAzure

      # @return [Integer] The priority of the Job. Priority values can range
      # from -1000 to 1000, with -1000 being the lowest priority and 1000 being
      # the highest priority. If omitted, it is set to the default value 0.
      attr_accessor :priority

      # @return [JobConstraints] The execution constraints for the Job. If
      # omitted, the constraints are cleared.
      attr_accessor :constraints

      # @return [PoolInformation] The Pool on which the Batch service runs the
      # Job's Tasks. You may change the Pool for a Job only when the Job is
      # disabled. The Update Job call will fail if you include the poolInfo
      # element and the Job is not disabled. If you specify an
      # autoPoolSpecification specification in the poolInfo, only the keepAlive
      # property can be updated, and then only if the auto Pool has a
      # poolLifetimeOption of Job.
      attr_accessor :pool_info

      # @return [Array<MetadataItem>] A list of name-value pairs associated
      # with the Job as metadata. If omitted, it takes the default value of an
      # empty list; in effect, any existing metadata is deleted.
      attr_accessor :metadata

      # @return [OnAllTasksComplete] The action the Batch service should take
      # when all Tasks in the Job are in the completed state. If omitted, the
      # completion behavior is set to noaction. If the current value is
      # terminatejob, this is an error because a Job's completion behavior may
      # not be changed from terminatejob to noaction. You may not change the
      # value from terminatejob to noaction - that is, once you have engaged
      # automatic Job termination, you cannot turn it off again. If you try to
      # do this, the request fails and Batch returns status code 400 (Bad
      # Request) and an 'invalid property value' error response. If you do not
      # specify this element in a PUT request, it is equivalent to passing
      # noaction. This is an error if the current value is terminatejob.
      # Possible values include: 'noAction', 'terminateJob'
      attr_accessor :on_all_tasks_complete


      #
      # Mapper for JobUpdateParameter class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'JobUpdateParameter',
          type: {
            name: 'Composite',
            class_name: 'JobUpdateParameter',
            model_properties: {
              priority: {
                client_side_validation: true,
                required: false,
                serialized_name: 'priority',
                type: {
                  name: 'Number'
                }
              },
              constraints: {
                client_side_validation: true,
                required: false,
                serialized_name: 'constraints',
                type: {
                  name: 'Composite',
                  class_name: 'JobConstraints'
                }
              },
              pool_info: {
                client_side_validation: true,
                required: true,
                serialized_name: 'poolInfo',
                default_value: {},
                type: {
                  name: 'Composite',
                  class_name: 'PoolInformation'
                }
              },
              metadata: {
                client_side_validation: true,
                required: false,
                serialized_name: 'metadata',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MetadataItemElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MetadataItem'
                      }
                  }
                }
              },
              on_all_tasks_complete: {
                client_side_validation: true,
                required: false,
                serialized_name: 'onAllTasksComplete',
                type: {
                  name: 'Enum',
                  module: 'OnAllTasksComplete'
                }
              }
            }
          }
        }
      end
    end
  end
end
