# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Batch::V2019_06_01_9_0
  module Models
    #
    # The configuration for Compute Nodes in a Pool based on the Azure Virtual
    # Machines infrastructure.
    #
    #
    class VirtualMachineConfiguration

      include MsRestAzure

      # @return [ImageReference] A reference to the Azure Virtual Machines
      # Marketplace Image or the custom Virtual Machine Image to use.
      attr_accessor :image_reference

      # @return [String] The SKU of the Batch Compute Node agent to be
      # provisioned on Compute Nodes in the Pool. The Batch Compute Node agent
      # is a program that runs on each Compute Node in the Pool, and provides
      # the command-and-control interface between the Compute Node and the
      # Batch service. There are different implementations of the Compute Node
      # agent, known as SKUs, for different operating systems. You must specify
      # a Compute Node agent SKU which matches the selected Image reference. To
      # get the list of supported Compute Node agent SKUs along with their list
      # of verified Image references, see the 'List supported Compute Node
      # agent SKUs' operation.
      attr_accessor :node_agent_skuid

      # @return [WindowsConfiguration] Windows operating system settings on the
      # virtual machine. This property must not be specified if the
      # imageReference property specifies a Linux OS Image.
      attr_accessor :windows_configuration

      # @return [Array<DataDisk>] The configuration for data disks attached to
      # the Compute Nodes in the Pool. This property must be specified if the
      # Compute Nodes in the Pool need to have empty data disks attached to
      # them. This cannot be updated. Each Compute Node gets its own disk (the
      # disk is not a file share). Existing disks cannot be attached, each
      # attached disk is empty. When the Compute Node is removed from the Pool,
      # the disk and all data associated with it is also deleted. The disk is
      # not formatted after being attached, it must be formatted before use -
      # for more information see
      # https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux
      # and
      # https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine.
      attr_accessor :data_disks

      # @return [String] The type of on-premises license to be used when
      # deploying the operating system. This only applies to Images that
      # contain the Windows operating system, and should only be used when you
      # hold valid on-premises licenses for the Compute Nodes which will be
      # deployed. If omitted, no on-premises licensing discount is applied.
      # Values are:
      #
      # Windows_Server - The on-premises license is for Windows Server.
      # Windows_Client - The on-premises license is for Windows Client.
      #
      attr_accessor :license_type

      # @return [ContainerConfiguration] The container configuration for the
      # Pool. If specified, setup is performed on each Compute Node in the Pool
      # to allow Tasks to run in containers. All regular Tasks and Job manager
      # Tasks run on this Pool must specify the containerSettings property, and
      # all other Tasks may specify it.
      attr_accessor :container_configuration


      #
      # Mapper for VirtualMachineConfiguration class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'VirtualMachineConfiguration',
          type: {
            name: 'Composite',
            class_name: 'VirtualMachineConfiguration',
            model_properties: {
              image_reference: {
                client_side_validation: true,
                required: true,
                serialized_name: 'imageReference',
                type: {
                  name: 'Composite',
                  class_name: 'ImageReference'
                }
              },
              node_agent_skuid: {
                client_side_validation: true,
                required: true,
                serialized_name: 'nodeAgentSKUId',
                type: {
                  name: 'String'
                }
              },
              windows_configuration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'windowsConfiguration',
                type: {
                  name: 'Composite',
                  class_name: 'WindowsConfiguration'
                }
              },
              data_disks: {
                client_side_validation: true,
                required: false,
                serialized_name: 'dataDisks',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'DataDiskElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'DataDisk'
                      }
                  }
                }
              },
              license_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'licenseType',
                type: {
                  name: 'String'
                }
              },
              container_configuration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'containerConfiguration',
                type: {
                  name: 'Composite',
                  class_name: 'ContainerConfiguration'
                }
              }
            }
          }
        }
      end
    end
  end
end
