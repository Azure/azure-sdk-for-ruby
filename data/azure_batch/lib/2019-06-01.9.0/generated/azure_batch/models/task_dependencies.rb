# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Batch::V2019_06_01_9_0
  module Models
    #
    # Specifies any dependencies of a Task. Any Task that is explicitly
    # specified or within a dependency range must complete before the dependant
    # Task will be scheduled.
    #
    #
    class TaskDependencies

      include MsRestAzure

      # @return [Array<String>] The list of Task IDs that this Task depends on.
      # All Tasks in this list must complete successfully before the dependent
      # Task can be scheduled. The taskIds collection is limited to 64000
      # characters total (i.e. the combined length of all Task IDs). If the
      # taskIds collection exceeds the maximum length, the Add Task request
      # fails with error code TaskDependencyListTooLong. In this case consider
      # using Task ID ranges instead.
      attr_accessor :task_ids

      # @return [Array<TaskIdRange>] The list of Task ID ranges that this Task
      # depends on. All Tasks in all ranges must complete successfully before
      # the dependent Task can be scheduled.
      attr_accessor :task_id_ranges


      #
      # Mapper for TaskDependencies class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'TaskDependencies',
          type: {
            name: 'Composite',
            class_name: 'TaskDependencies',
            model_properties: {
              task_ids: {
                client_side_validation: true,
                required: false,
                serialized_name: 'taskIds',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              task_id_ranges: {
                client_side_validation: true,
                required: false,
                serialized_name: 'taskIdRanges',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'TaskIdRangeElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'TaskIdRange'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
