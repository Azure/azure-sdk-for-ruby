# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::GraphRbac::V1_6
  module Models
    #
    # Represents an OAuth 2.0 delegated permission scope. The specified OAuth
    # 2.0 delegated permission scopes may be requested by client applications
    # (through the requiredResourceAccess collection on the Application object)
    # when calling a resource application. The oauth2Permissions property of
    # the ServicePrincipal entity and of the Application entity is a collection
    # of OAuth2Permission.
    #
    class OAuth2Permission

      include MsRestAzure

      # @return [String] Permission help text that appears in the admin consent
      # and app assignment experiences.
      attr_accessor :admin_consent_description

      # @return [String] Display name for the permission that appears in the
      # admin consent and app assignment experiences.
      attr_accessor :admin_consent_display_name

      # @return [String] Unique scope permission identifier inside the
      # oauth2Permissions collection.
      attr_accessor :id

      # @return [Boolean] When creating or updating a permission, this property
      # must be set to true (which is the default). To delete a permission,
      # this property must first be set to false. At that point, in a
      # subsequent call, the permission may be removed.
      attr_accessor :is_enabled

      # @return [String] Specifies whether this scope permission can be
      # consented to by an end user, or whether it is a tenant-wide permission
      # that must be consented to by a Company Administrator. Possible values
      # are "User" or "Admin".
      attr_accessor :type

      # @return [String] Permission help text that appears in the end user
      # consent experience.
      attr_accessor :user_consent_description

      # @return [String] Display name for the permission that appears in the
      # end user consent experience.
      attr_accessor :user_consent_display_name

      # @return [String] The value of the scope claim that the resource
      # application should expect in the OAuth 2.0 access token.
      attr_accessor :value


      #
      # Mapper for OAuth2Permission class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'OAuth2Permission',
          type: {
            name: 'Composite',
            class_name: 'OAuth2Permission',
            model_properties: {
              admin_consent_description: {
                required: false,
                serialized_name: 'adminConsentDescription',
                type: {
                  name: 'String'
                }
              },
              admin_consent_display_name: {
                required: false,
                serialized_name: 'adminConsentDisplayName',
                type: {
                  name: 'String'
                }
              },
              id: {
                required: false,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              is_enabled: {
                required: false,
                serialized_name: 'isEnabled',
                type: {
                  name: 'Boolean'
                }
              },
              type: {
                required: false,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              user_consent_description: {
                required: false,
                serialized_name: 'userConsentDescription',
                type: {
                  name: 'String'
                }
              },
              user_consent_display_name: {
                required: false,
                serialized_name: 'userConsentDisplayName',
                type: {
                  name: 'String'
                }
              },
              value: {
                required: false,
                serialized_name: 'value',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
